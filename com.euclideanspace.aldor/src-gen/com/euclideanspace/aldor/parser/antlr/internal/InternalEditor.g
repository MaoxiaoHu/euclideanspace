/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.aldor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.aldor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.aldor.services.EditorGrammarAccess;

}

@parser::members {

 	private EditorGrammarAccess grammarAccess;
 	
    public InternalEditorParser(TokenStream input, EditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='#include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getIncludeKeyword_0_0());
    }
(
(
		lv_insert_1_0=RULE_TK_STRING
		{
			newLeafNode(lv_insert_1_0, grammarAccess.getModelAccess().getInsertTK_STRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"insert",
        		lv_insert_1_0, 
        		"TK_STRING");
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getCcCurlyContents_LabeledParserRuleCall_1_0()); 
	    }
		lv_cc_2_0=ruleCurlyContents_Labeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"cc",
        		lv_cc_2_0, 
        		"CurlyContents_Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}









// Entry rule entryRuleLabeled
entryRuleLabeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLabeledRule()); }
	 iv_ruleLabeled=ruleLabeled 
	 { $current=$iv_ruleLabeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Labeled
ruleLabeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getCommaParserRuleCall_0()); 
    }
    this_Comma_0=ruleComma
    { 
        $current = $this_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getDeclarationParserRuleCall_1()); 
    }
    this_Declaration_1=ruleDeclaration
    { 
        $current = $this_Declaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_KW_AT_2=RULE_KW_AT
    { 
    newLeafNode(this_KW_AT_2, grammarAccess.getLabeledAccess().getKW_ATTerminalRuleCall_2_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getAtomParserRuleCall_2_1()); 
    }
    this_Atom_3=ruleAtom
    { 
        $current = $this_Atom_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledAccess().getLabLabeledParserRuleCall_2_2_0()); 
	    }
		lv_lab_4_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledRule());
	        }
       		set(
       			$current, 
       			"lab",
        		lv_lab_4_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_0_0(),
            $current);
    }
)	otherlv_1='macro' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getMacroKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getMbMacroBodyParserRuleCall_0_2_0()); 
	    }
		lv_mb_2_0=ruleMacroBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"mb",
        		lv_mb_2_0, 
        		"MacroBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_1_0(),
            $current);
    }
)	otherlv_4='extend' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getExtendKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_1_2_0()); 
	    }
		lv_si_5_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_5_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_2_0(),
            $current);
    }
)	otherlv_7='local' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDeclarationAccess().getLocalKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_2_2_0()); 
	    }
		lv_si_8_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_8_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_3_0(),
            $current);
    }
)	otherlv_10='free' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeclarationAccess().getFreeKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_3_2_0()); 
	    }
		lv_si_11_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_11_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_4_0(),
            $current);
    }
)	otherlv_13='fluid' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeclarationAccess().getFluidKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_4_2_0()); 
	    }
		lv_si_14_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_14_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_5_0(),
            $current);
    }
)	otherlv_16='default' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeclarationAccess().getDefaultKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_5_2_0()); 
	    }
		lv_si_17_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_17_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_6_0(),
            $current);
    }
)	otherlv_19='define' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDeclarationAccess().getDefineKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_6_2_0()); 
	    }
		lv_si_20_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_20_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_7_0(),
            $current);
    }
)	otherlv_22='fix' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDeclarationAccess().getFixKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_7_2_0()); 
	    }
		lv_si_23_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_23_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_8_0(),
            $current);
    }
)	otherlv_25='inline' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getDeclarationAccess().getInlineKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_8_2_0()); 
	    }
		lv_si_26_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_26_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_8_3_0()); 
	    }
		lv_fp_27_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_27_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_9_0(),
            $current);
    }
)	otherlv_29='import' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDeclarationAccess().getImportKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_9_2_0()); 
	    }
		lv_si_30_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"si",
        		lv_si_30_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_9_3_0()); 
	    }
		lv_fp_31_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_31_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_10_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getEdExportDeclParserRuleCall_10_1_0()); 
	    }
		lv_ed_33_0=ruleExportDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"ed",
        		lv_ed_33_0, 
        		"ExportDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExportDecl
entryRuleExportDecl returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getExportDeclRule()); }
	 iv_ruleExportDecl=ruleExportDecl 
	 { $current=$iv_ruleExportDecl.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExportDecl
ruleExportDecl returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExportDeclAccess().getExportDeclAction_0_0(),
            $current);
    }
)	otherlv_1='export' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExportDeclAccess().getExportKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_0_2_0()); 
	    }
		lv_s_2_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"s",
        		lv_s_2_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(((	'export' 
(
(
ruleSig
)
)?(
(
ruleToPart
)
)))=>(	otherlv_3='export' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExportDeclAccess().getExportKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_1_0_1_0()); 
	    }
		lv_s_4_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"s",
        		lv_s_4_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getTpToPartParserRuleCall_1_0_2_0()); 
	    }
		lv_tp_5_0=ruleToPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"tp",
        		lv_tp_5_0, 
        		"ToPart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	'export' 
(
(
ruleSig
)
)?(
(
ruleFromPart
)
)))=>(	otherlv_6='export' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExportDeclAccess().getExportKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_2_0_1_0()); 
	    }
		lv_s_7_0=ruleSig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"s",
        		lv_s_7_0, 
        		"Sig");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getFpFromPartParserRuleCall_2_0_2_0()); 
	    }
		lv_fp_8_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_8_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleToPart
entryRuleToPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getToPartRule()); }
	 iv_ruleToPart=ruleToPart 
	 { $current=$iv_ruleToPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ToPart
ruleToPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(	otherlv_0='to' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getToPartAccess().getToKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getToPartAccess().getInfixedParserRuleCall_1()); 
    }
    this_Infixed_1=ruleInfixed
    { 
        $current = $this_Infixed_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFromPart
entryRuleFromPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getFromPartRule()); }
	 iv_ruleFromPart=ruleFromPart 
	 { $current=$iv_ruleFromPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FromPart
ruleFromPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(	otherlv_0='from' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFromPartAccess().getFromKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getFromPartAccess().getEnlist1_Infixed_Comma_ABParserRuleCall_1()); 
    }
    this_enlist1_Infixed_Comma_AB_1=ruleenlist1_Infixed_Comma_AB
    { 
        $current = $this_enlist1_Infixed_Comma_AB_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMacroBody
entryRuleMacroBody returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getMacroBodyRule()); }
	 iv_ruleMacroBody=ruleMacroBody 
	 { $current=$iv_ruleMacroBody.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MacroBody
ruleMacroBody returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_0()); 
    }
    this_Sig_0=ruleSig
    { 
        $current = $this_Sig_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getExportDeclParserRuleCall_1()); 
    }
    this_ExportDecl_1=ruleExportDecl
    { 
        $current = $this_ExportDecl_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_2='import' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMacroBodyAccess().getImportKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_2_1()); 
    }
    this_Sig_3=ruleSig
    { 
        $current = $this_Sig_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMacroBodyAccess().getFpFromPartParserRuleCall_2_2_0()); 
	    }
		lv_fp_4_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMacroBodyRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_4_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSig
entryRuleSig returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getSigRule()); }
	 iv_ruleSig=ruleSig 
	 { $current=$iv_ruleSig.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Sig
ruleSig returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSigAccess().getDeclBindingParserRuleCall_0()); 
    }
    this_DeclBinding_0=ruleDeclBinding
    { 
        $current = $this_DeclBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclPart
entryRuleDeclPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclPartRule()); }
	 iv_ruleDeclPart=ruleDeclPart 
	 { $current=$iv_ruleDeclPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclPart
ruleDeclPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((this_KW_COLON_0=RULE_KW_COLON
    { 
    newLeafNode(this_KW_COLON_0, grammarAccess.getDeclPartAccess().getKW_COLONTerminalRuleCall_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_0_1()); 
    }
    this_Type_1=ruleType
    { 
        $current = $this_Type_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(this_KW_COLONSTAR_2=RULE_KW_COLONSTAR
    { 
    newLeafNode(this_KW_COLONSTAR_2, grammarAccess.getDeclPartAccess().getKW_COLONSTARTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_1_1()); 
    }
    this_Type_3=ruleType
    { 
        $current = $this_Type_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleComma
entryRuleComma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCommaRule()); }
	 iv_ruleComma=ruleComma 
	 { $current=$iv_ruleComma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Comma
ruleComma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCommaAccess().getEnlist1_CommaItem_Comma_ABParserRuleCall()); 
    }
    this_enlist1_CommaItem_Comma_AB_0=ruleenlist1_CommaItem_Comma_AB
    { 
        $current = $this_enlist1_CommaItem_Comma_AB_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCommaItem
entryRuleCommaItem returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCommaItemRule()); }
	 iv_ruleCommaItem=ruleCommaItem 
	 { $current=$iv_ruleCommaItem.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CommaItem
ruleCommaItem returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCommaItemAccess().getBinding_AnyStatementParserRuleCall_0()); 
    }
    this_Binding_AnyStatement_0=ruleBinding_AnyStatement
    { 
        $current = $this_Binding_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }
(((	'where' 
(
(
ruleCommaItem
)
)))=>(	otherlv_1='where' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommaItemAccess().getWhereKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommaItemAccess().getCiCommaItemParserRuleCall_1_0_1_0()); 
	    }
		lv_ci_2_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommaItemRule());
	        }
       		add(
       			$current, 
       			"ci",
        		lv_ci_2_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclBinding
entryRuleDeclBinding returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclBindingRule()); }
	 iv_ruleDeclBinding=ruleDeclBinding 
	 { $current=$iv_ruleDeclBinding.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclBinding
ruleDeclBinding returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDeclBindingAccess().getBindingR_InfixedExprsDecl_AnyStatementParserRuleCall()); 
    }
    this_BindingR_InfixedExprsDecl_AnyStatement_0=ruleBindingR_InfixedExprsDecl_AnyStatement
    { 
        $current = $this_BindingR_InfixedExprsDecl_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExprsDecl
entryRuleInfixedExprsDecl returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprsDeclRule()); }
	 iv_ruleInfixedExprsDecl=ruleInfixedExprsDecl 
	 { $current=$iv_ruleInfixedExprsDecl.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprsDecl
ruleInfixedExprsDecl returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInfixedExprsDeclAccess().getInfixedExprsParserRuleCall_0()); 
    }
    this_InfixedExprs_0=ruleInfixedExprs
    { 
        $current = $this_InfixedExprs_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfixedExprsDeclAccess().getDpDeclPartParserRuleCall_1_0()); 
	    }
		lv_dp_1_0=ruleDeclPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfixedExprsDeclRule());
	        }
       		add(
       			$current, 
       			"dp",
        		lv_dp_1_0, 
        		"DeclPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExprs
entryRuleInfixedExprs returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprsRule()); }
	 iv_ruleInfixedExprs=ruleInfixedExprs 
	 { $current=$iv_ruleInfixedExprs.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprs
ruleInfixedExprs returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getInfixedExprsAccess().getEnlist1_InfixedExpr_Comma_ABParserRuleCall()); 
    }
    this_enlist1_InfixedExpr_Comma_AB_0=ruleenlist1_InfixedExpr_Comma_AB
    { 
        $current = $this_enlist1_InfixedExpr_Comma_AB_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_AnyStatement
entryRuleBinding_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_AnyStatementRule()); }
	 iv_ruleBinding_AnyStatement=ruleBinding_AnyStatement 
	 { $current=$iv_ruleBinding_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_AnyStatement
ruleBinding_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_AnyStatementAccess().getBindingL_Infixed_AnyStatementParserRuleCall()); 
    }
    this_BindingL_Infixed_AnyStatement_0=ruleBindingL_Infixed_AnyStatement
    { 
        $current = $this_BindingL_Infixed_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_BalStatement
entryRuleBinding_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_BalStatementRule()); }
	 iv_ruleBinding_BalStatement=ruleBinding_BalStatement 
	 { $current=$iv_ruleBinding_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_BalStatement
ruleBinding_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_BalStatementAccess().getBindingL_Infixed_BalStatementParserRuleCall()); 
    }
    this_BindingL_Infixed_BalStatement_0=ruleBindingL_Infixed_BalStatement
    { 
        $current = $this_BindingL_Infixed_BalStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_Collection
entryRuleBinding_Collection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_CollectionRule()); }
	 iv_ruleBinding_Collection=ruleBinding_Collection 
	 { $current=$iv_ruleBinding_Collection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_Collection
ruleBinding_Collection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_CollectionAccess().getBindingL_Infixed_CollectionParserRuleCall()); 
    }
    this_BindingL_Infixed_Collection_0=ruleBindingL_Infixed_Collection
    { 
        $current = $this_BindingL_Infixed_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_AnyStatement
entryRuleBindingL_Infixed_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementRule()); }
	 iv_ruleBindingL_Infixed_AnyStatement=ruleBindingL_Infixed_AnyStatement 
	 { $current=$iv_ruleBindingL_Infixed_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_AnyStatement
ruleBindingL_Infixed_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBas9AnyStatementParserRuleCall_0_0()); 
	    }
		lv_bas9_0_0=ruleAnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas9",
        		lv_bas9_0_0, 
        		"AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(((	ruleInfixed	'assign' 
(
(
ruleBindingL_Infixed_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_1_0_0()); 
    }
    this_Infixed_1=ruleInfixed
    { 
        $current = $this_Infixed_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getAssignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_1_0_2_0()); 
	    }
		lv_bia_3_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_3_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_2EQ(
(
ruleBindingL_Infixed_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_2_0_0()); 
    }
    this_Infixed_4=ruleInfixed
    { 
        $current = $this_Infixed_4.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_2EQTerminalRuleCall_2_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_2_0_2_0()); 
	    }
		lv_bia_6_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_6_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MARROW(
(
ruleBindingL_Infixed_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_3_0_0()); 
    }
    this_Infixed_7=ruleInfixed
    { 
        $current = $this_Infixed_7.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MARROWTerminalRuleCall_3_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_3_0_2_0()); 
	    }
		lv_bia_9_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_9_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTO(
(
ruleBindingL_Infixed_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_4_0_0()); 
    }
    this_Infixed_10=ruleInfixed
    { 
        $current = $this_Infixed_10.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_4_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_4_0_2_0()); 
	    }
		lv_bia_12_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_12_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTOSTAR(
(
ruleBindingL_Infixed_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_5_0_0()); 
    }
    this_Infixed_13=ruleInfixed
    { 
        $current = $this_Infixed_13.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_5_0_2_0()); 
	    }
		lv_bia_15_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_15_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_BalStatement
entryRuleBindingL_Infixed_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementRule()); }
	 iv_ruleBindingL_Infixed_BalStatement=ruleBindingL_Infixed_BalStatement 
	 { $current=$iv_ruleBindingL_Infixed_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_BalStatement
ruleBindingL_Infixed_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBalStatementParserRuleCall_0()); 
    }
    this_BalStatement_0=ruleBalStatement
    { 
        $current = $this_BalStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(((	ruleInfixed	'assign' 
(
(
ruleBindingL_Infixed_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_1_0_0()); 
    }
    this_Infixed_1=ruleInfixed
    { 
        $current = $this_Infixed_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_BalStatementAccess().getAssignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_1_0_2_0()); 
	    }
		lv_bib_3_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_3_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_2EQ(
(
ruleBindingL_Infixed_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_2_0_0()); 
    }
    this_Infixed_4=ruleInfixed
    { 
        $current = $this_Infixed_4.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_2EQTerminalRuleCall_2_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_2_0_2_0()); 
	    }
		lv_bib_6_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_6_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MARROW(
(
ruleBindingL_Infixed_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_3_0_0()); 
    }
    this_Infixed_7=ruleInfixed
    { 
        $current = $this_Infixed_7.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MARROWTerminalRuleCall_3_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_3_0_2_0()); 
	    }
		lv_bib_9_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_9_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTO(
(
ruleBindingL_Infixed_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_4_0_0()); 
    }
    this_Infixed_10=ruleInfixed
    { 
        $current = $this_Infixed_10.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOTerminalRuleCall_4_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_4_0_2_0()); 
	    }
		lv_bib_12_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_12_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTOSTAR(
(
ruleBindingL_Infixed_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_5_0_0()); 
    }
    this_Infixed_13=ruleInfixed
    { 
        $current = $this_Infixed_13.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_5_0_2_0()); 
	    }
		lv_bib_15_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_15_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_Collection
entryRuleBindingL_Infixed_Collection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionRule()); }
	 iv_ruleBindingL_Infixed_Collection=ruleBindingL_Infixed_Collection 
	 { $current=$iv_ruleBindingL_Infixed_Collection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_Collection
ruleBindingL_Infixed_Collection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getCollectionParserRuleCall_0()); 
    }
    this_Collection_0=ruleCollection
    { 
        $current = $this_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(((	ruleInfixed	'assign' 
(
(
ruleBindingL_Infixed_Collection
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_1_0_0()); 
    }
    this_Infixed_1=ruleInfixed
    { 
        $current = $this_Infixed_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_CollectionAccess().getAssignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_1_0_2_0()); 
	    }
		lv_bic_3_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_3_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_2EQ(
(
ruleBindingL_Infixed_Collection
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_2_0_0()); 
    }
    this_Infixed_4=ruleInfixed
    { 
        $current = $this_Infixed_4.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_2EQTerminalRuleCall_2_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_2_0_2_0()); 
	    }
		lv_bic_6_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_6_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MARROW(
(
ruleBindingL_Infixed_Collection
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_3_0_0()); 
    }
    this_Infixed_7=ruleInfixed
    { 
        $current = $this_Infixed_7.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MARROWTerminalRuleCall_3_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_3_0_2_0()); 
	    }
		lv_bic_9_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_9_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTO(
(
ruleBindingL_Infixed_Collection
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_4_0_0()); 
    }
    this_Infixed_10=ruleInfixed
    { 
        $current = $this_Infixed_10.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOTerminalRuleCall_4_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_4_0_2_0()); 
	    }
		lv_bic_12_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_12_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixed	RULE_KW_MAPSTOSTAR(
(
ruleBindingL_Infixed_Collection
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_5_0_0()); 
    }
    this_Infixed_13=ruleInfixed
    { 
        $current = $this_Infixed_13.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOSTARTerminalRuleCall_5_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_5_0_2_0()); 
	    }
		lv_bic_15_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_15_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingR_InfixedExprsDecl_AnyStatement
entryRuleBindingR_InfixedExprsDecl_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule()); }
	 iv_ruleBindingR_InfixedExprsDecl_AnyStatement=ruleBindingR_InfixedExprsDecl_AnyStatement 
	 { $current=$iv_ruleBindingR_InfixedExprsDecl_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingR_InfixedExprsDecl_AnyStatement
ruleBindingR_InfixedExprsDecl_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_0()); 
    }
    this_InfixedExprsDecl_0=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(((	ruleInfixedExprsDecl	'assign' 
(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_1_0_0()); 
    }
    this_InfixedExprsDecl_1=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAssignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_0_2_0()); 
	    }
		lv_bas_3_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_3_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixedExprsDecl	RULE_KW_2EQ(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_2_0_0()); 
    }
    this_InfixedExprsDecl_4=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_2EQTerminalRuleCall_2_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_2_0_2_0()); 
	    }
		lv_bas_6_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_6_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixedExprsDecl	RULE_KW_MARROW(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_3_0_0()); 
    }
    this_InfixedExprsDecl_7=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_7.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MARROWTerminalRuleCall_3_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_3_0_2_0()); 
	    }
		lv_bas_9_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_9_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixedExprsDecl	RULE_KW_MAPSTO(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_4_0_0()); 
    }
    this_InfixedExprsDecl_10=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_10.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_4_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_4_0_2_0()); 
	    }
		lv_bas_12_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_12_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	ruleInfixedExprsDecl	RULE_KW_MAPSTOSTAR(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_5_0_0()); 
    }
    this_InfixedExprsDecl_13=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_13.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_5_0_2_0()); 
	    }
		lv_bas_15_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_15_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAnyStatement
entryRuleAnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAnyStatementRule()); }
	 iv_ruleAnyStatement=ruleAnyStatement 
	 { $current=$iv_ruleAnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AnyStatement
ruleAnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((((	'if' 
	ruleCommaItem	'then' 
(
(
ruleBinding_AnyStatement
)
)))=>(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnyStatementAccess().getIfKeyword_0_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getAnyStatementAccess().getCommaItemParserRuleCall_0_0_1()); 
    }
    this_CommaItem_1=ruleCommaItem
    { 
        $current = $this_CommaItem_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnyStatementAccess().getThenKeyword_0_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_0_0_3_0()); 
	    }
		lv_bas_3_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_3_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |
    { 
        newCompositeNode(grammarAccess.getAnyStatementAccess().getFlow_AnyStatementParserRuleCall_1()); 
    }
    this_Flow_AnyStatement_4=ruleFlow_AnyStatement
    { 
        $current = $this_Flow_AnyStatement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBalStatement
entryRuleBalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBalStatementRule()); }
	 iv_ruleBalStatement=ruleBalStatement 
	 { $current=$iv_ruleBalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BalStatement
ruleBalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBalStatementAccess().getFlow_BalStatementParserRuleCall()); 
    }
    this_Flow_BalStatement_0=ruleFlow_BalStatement
    { 
        $current = $this_Flow_BalStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFlow_AnyStatement
entryRuleFlow_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getFlow_AnyStatementRule()); }
	 iv_ruleFlow_AnyStatement=ruleFlow_AnyStatement 
	 { $current=$iv_ruleFlow_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Flow_AnyStatement
ruleFlow_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFlow_AnyStatementAccess().getFlow_AnyStatementAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_0_1_0_0()); 
	    }
		lv_c_1_0=ruleCollection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"c",
        		lv_c_1_0, 
        		"Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_st_2_0=	'implies' 
    {
        newLeafNode(lv_st_2_0, grammarAccess.getFlow_AnyStatementAccess().getStImpliesKeyword_0_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_2_0, "implies");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBas2Binding_AnyStatementParserRuleCall_0_1_1_1_0()); 
	    }
		lv_bas2_3_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas2",
        		lv_bas2_3_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
    |((
(
		lv_st_4_0=	'if' 
    {
        newLeafNode(lv_st_4_0, grammarAccess.getFlow_AnyStatementAccess().getStIfKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_4_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getCiCommaItemParserRuleCall_1_1_0()); 
	    }
		lv_ci_5_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"ci",
        		lv_ci_5_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='then' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFlow_AnyStatementAccess().getThenKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBbsBinding_BalStatementParserRuleCall_1_3_0()); 
	    }
		lv_bbs_7_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bbs",
        		lv_bbs_7_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)((	'else' 
)=>	otherlv_8='else' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFlow_AnyStatementAccess().getElseKeyword_1_4());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_5_0()); 
	    }
		lv_bas_9_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_9_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleIterators	'repeat' 
(
(
ruleBinding_AnyStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getIteratorsParserRuleCall_2_0_0()); 
    }
    this_Iterators_10=ruleIterators
    { 
        $current = $this_Iterators_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='repeat' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFlow_AnyStatementAccess().getRepeatKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBas3Binding_AnyStatementParserRuleCall_2_0_2_0()); 
	    }
		lv_bas3_12_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas3",
        		lv_bas3_12_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
(
		lv_st_13_0=	'repeat' 
    {
        newLeafNode(lv_st_13_0, grammarAccess.getFlow_AnyStatementAccess().getStRepeatKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_13_0, "repeat");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_3_1_0()); 
	    }
		lv_bas_14_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_14_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_15_0=	'try' 
    {
        newLeafNode(lv_st_15_0, grammarAccess.getFlow_AnyStatementAccess().getStTryKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_15_0, "try");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_4_1_0()); 
	    }
		lv_bas_16_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_16_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17='but' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFlow_AnyStatementAccess().getButKeyword_4_2_0());
    }

    |	otherlv_18='catch' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFlow_AnyStatementAccess().getCatchKeyword_4_2_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBe2ButExprParserRuleCall_4_3_0()); 
	    }
		lv_be2_19_0=ruleButExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"be2",
        		lv_be2_19_0, 
        		"ButExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getApaAlwaysPart_AnyStatementParserRuleCall_4_4_0()); 
	    }
		lv_apa_20_0=ruleAlwaysPart_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"apa",
        		lv_apa_20_0, 
        		"AlwaysPart_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_21_0=	'select' 
    {
        newLeafNode(lv_st_21_0, grammarAccess.getFlow_AnyStatementAccess().getStSelectKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_21_0, "select");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_5_1_0()); 
	    }
		lv_bas_22_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_22_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23='in' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getFlow_AnyStatementAccess().getInKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getCaCasesParserRuleCall_5_3_0()); 
	    }
		lv_ca_24_0=ruleCases		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"ca",
        		lv_ca_24_0, 
        		"Cases");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_25_0=	'do' 
    {
        newLeafNode(lv_st_25_0, grammarAccess.getFlow_AnyStatementAccess().getStDoKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_25_0, "do");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_6_1_0()); 
	    }
		lv_bas_26_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_26_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_27_0=	'delay' 
    {
        newLeafNode(lv_st_27_0, grammarAccess.getFlow_AnyStatementAccess().getStDelayKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_27_0, "delay");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_7_1_0()); 
	    }
		lv_bas_28_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_28_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_29_0=	'reference' 
    {
        newLeafNode(lv_st_29_0, grammarAccess.getFlow_AnyStatementAccess().getStReferenceKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_29_0, "reference");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_8_1_0()); 
	    }
		lv_bas_30_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_30_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_31_0=	'generate' 
    {
        newLeafNode(lv_st_31_0, grammarAccess.getFlow_AnyStatementAccess().getStGenerateKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_31_0, "generate");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getGbGenBoundParserRuleCall_9_1_0()); 
	    }
		lv_gb_32_0=ruleGenBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"gb",
        		lv_gb_32_0, 
        		"GenBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBas4Binding_AnyStatementParserRuleCall_9_2_0()); 
	    }
		lv_bas4_33_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas4",
        		lv_bas4_33_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_34_0=	'assert' 
    {
        newLeafNode(lv_st_34_0, grammarAccess.getFlow_AnyStatementAccess().getStAssertKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_34_0, "assert");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_10_1_0()); 
	    }
		lv_bas_35_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_35_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_36_0=	'iterate' 
    {
        newLeafNode(lv_st_36_0, grammarAccess.getFlow_AnyStatementAccess().getStIterateKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_36_0, "iterate");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_11_1_0()); 
	    }
		lv_n_37_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"n",
        		lv_n_37_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st_38_0=	'break' 
    {
        newLeafNode(lv_st_38_0, grammarAccess.getFlow_AnyStatementAccess().getStBreakKeyword_12_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_38_0, "break");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_12_1_0()); 
	    }
		lv_n_39_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"n",
        		lv_n_39_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st_40_0=	'return' 
    {
        newLeafNode(lv_st_40_0, grammarAccess.getFlow_AnyStatementAccess().getStReturnKeyword_13_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_40_0, "return");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_13_1_0()); 
	    }
		lv_c_41_0=ruleCollection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"c",
        		lv_c_41_0, 
        		"Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st_42_0=	'yield' 
    {
        newLeafNode(lv_st_42_0, grammarAccess.getFlow_AnyStatementAccess().getStYieldKeyword_14_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_42_0, "yield");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_14_1_0()); 
	    }
		lv_bas_43_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_43_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_44_0=	'except' 
    {
        newLeafNode(lv_st_44_0, grammarAccess.getFlow_AnyStatementAccess().getStExceptKeyword_15_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_44_0, "except");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_15_1_0()); 
	    }
		lv_bas_45_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_45_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_46_0=	'throw' 
    {
        newLeafNode(lv_st_46_0, grammarAccess.getFlow_AnyStatementAccess().getStThrowKeyword_16_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_46_0, "throw");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_16_1_0()); 
	    }
		lv_bas_47_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_47_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st_48_0=	'goto' 
    {
        newLeafNode(lv_st_48_0, grammarAccess.getFlow_AnyStatementAccess().getStGotoKeyword_17_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_48_0, "goto");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_AnyStatementAccess().getI2IdParserRuleCall_17_1_0()); 
	    }
		lv_i2_49_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"i2",
        		lv_i2_49_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_st_50_0=	'never' 
    {
        newLeafNode(lv_st_50_0, grammarAccess.getFlow_AnyStatementAccess().getStNeverKeyword_18_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_AnyStatementRule());
	        }
       		setWithLastConsumed($current, "st", lv_st_50_0, "never");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFlow_BalStatement
entryRuleFlow_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getFlow_BalStatementRule()); }
	 iv_ruleFlow_BalStatement=ruleFlow_BalStatement 
	 { $current=$iv_ruleFlow_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Flow_BalStatement
ruleFlow_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getCollectionParserRuleCall_0_0()); 
    }
    this_Collection_0=ruleCollection
    { 
        $current = $this_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_st2_1_0=	'implies' 
    {
        newLeafNode(lv_st2_1_0, grammarAccess.getFlow_BalStatementAccess().getSt2ImpliesKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_1_0, "implies");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_0_1_1_0()); 
	    }
		lv_bbs3_2_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs3",
        		lv_bbs3_2_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		lv_st2_3_0=	'if' 
    {
        newLeafNode(lv_st2_3_0, grammarAccess.getFlow_BalStatementAccess().getSt2IfKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_3_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getCi2CommaItemParserRuleCall_1_1_0()); 
	    }
		lv_ci2_4_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"ci2",
        		lv_ci2_4_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='then' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFlow_BalStatementAccess().getThenKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_3_0()); 
	    }
		lv_bbs4_6_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		add(
       			$current, 
       			"bbs4",
        		lv_bbs4_6_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)((	'else' 
)=>	otherlv_7='else' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFlow_BalStatementAccess().getElseKeyword_1_4());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_5_0()); 
	    }
		lv_bbs4_8_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		add(
       			$current, 
       			"bbs4",
        		lv_bbs4_8_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleIterators(
(
	'repeat' 
 

)
)(
(
ruleBinding_BalStatement
)
)))=>(
    { 
        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getIteratorsParserRuleCall_2_0_0()); 
    }
    this_Iterators_9=ruleIterators
    { 
        $current = $this_Iterators_9.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_st2_10_0=	'repeat' 
    {
        newLeafNode(lv_st2_10_0, grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_2_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_10_0, "repeat");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_2_0_2_0()); 
	    }
		lv_bbs3_11_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs3",
        		lv_bbs3_11_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
(
		lv_st2_12_0=	'repeat' 
    {
        newLeafNode(lv_st2_12_0, grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_12_0, "repeat");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_3_1_0()); 
	    }
		lv_bbs5_13_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_13_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_14_0=	'try' 
    {
        newLeafNode(lv_st2_14_0, grammarAccess.getFlow_BalStatementAccess().getSt2TryKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_14_0, "try");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_4_1_0()); 
	    }
		lv_bbs2_15_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs2",
        		lv_bbs2_15_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16='but' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFlow_BalStatementAccess().getButKeyword_4_2_0());
    }

    |	otherlv_17='catch' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFlow_BalStatementAccess().getCatchKeyword_4_2_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBeButExprParserRuleCall_4_3_0()); 
	    }
		lv_be_18_0=ruleButExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"be",
        		lv_be_18_0, 
        		"ButExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getApbAlwaysPart_BalStatementParserRuleCall_4_4_0()); 
	    }
		lv_apb_19_0=ruleAlwaysPart_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"apb",
        		lv_apb_19_0, 
        		"AlwaysPart_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_20_0=	'select' 
    {
        newLeafNode(lv_st2_20_0, grammarAccess.getFlow_BalStatementAccess().getSt2SelectKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_20_0, "select");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_5_1_0()); 
	    }
		lv_bbs2_21_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs2",
        		lv_bbs2_21_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22='in' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getFlow_BalStatementAccess().getInKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getCa2CasesParserRuleCall_5_3_0()); 
	    }
		lv_ca2_23_0=ruleCases		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"ca2",
        		lv_ca2_23_0, 
        		"Cases");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_24_0=	'do' 
    {
        newLeafNode(lv_st2_24_0, grammarAccess.getFlow_BalStatementAccess().getSt2DoKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_24_0, "do");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_6_1_0()); 
	    }
		lv_bbs5_25_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_25_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_26_0=	'delay' 
    {
        newLeafNode(lv_st2_26_0, grammarAccess.getFlow_BalStatementAccess().getSt2DelayKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_26_0, "delay");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_7_1_0()); 
	    }
		lv_bbs5_27_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_27_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_28_0=	'reference' 
    {
        newLeafNode(lv_st2_28_0, grammarAccess.getFlow_BalStatementAccess().getSt2ReferenceKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_28_0, "reference");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_8_1_0()); 
	    }
		lv_bbs5_29_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_29_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_30_0=	'generate' 
    {
        newLeafNode(lv_st2_30_0, grammarAccess.getFlow_BalStatementAccess().getSt2GenerateKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_30_0, "generate");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getGb2GenBoundParserRuleCall_9_1_0()); 
	    }
		lv_gb2_31_0=ruleGenBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"gb2",
        		lv_gb2_31_0, 
        		"GenBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_9_2_0()); 
	    }
		lv_bbs5_32_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_32_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_33_0=	'assert' 
    {
        newLeafNode(lv_st2_33_0, grammarAccess.getFlow_BalStatementAccess().getSt2AssertKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_33_0, "assert");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_10_1_0()); 
	    }
		lv_bbs5_34_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_34_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_35_0=	'iterate' 
    {
        newLeafNode(lv_st2_35_0, grammarAccess.getFlow_BalStatementAccess().getSt2IterateKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_35_0, "iterate");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_11_1_0()); 
	    }
		lv_n2_36_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"n2",
        		lv_n2_36_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st2_37_0=	'break' 
    {
        newLeafNode(lv_st2_37_0, grammarAccess.getFlow_BalStatementAccess().getSt2BreakKeyword_12_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_37_0, "break");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_12_1_0()); 
	    }
		lv_n2_38_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"n2",
        		lv_n2_38_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st2_39_0=	'return' 
    {
        newLeafNode(lv_st2_39_0, grammarAccess.getFlow_BalStatementAccess().getSt2ReturnKeyword_13_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_39_0, "return");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getC2CollectionParserRuleCall_13_1_0()); 
	    }
		lv_c2_40_0=ruleCollection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"c2",
        		lv_c2_40_0, 
        		"Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		lv_st2_41_0=	'yield' 
    {
        newLeafNode(lv_st2_41_0, grammarAccess.getFlow_BalStatementAccess().getSt2YieldKeyword_14_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_41_0, "yield");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_14_1_0()); 
	    }
		lv_bbs5_42_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_42_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_43_0=	'except' 
    {
        newLeafNode(lv_st2_43_0, grammarAccess.getFlow_BalStatementAccess().getSt2ExceptKeyword_15_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_43_0, "except");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_15_1_0()); 
	    }
		lv_bbs5_44_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_44_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_45_0=	'throw' 
    {
        newLeafNode(lv_st2_45_0, grammarAccess.getFlow_BalStatementAccess().getSt2ThrowKeyword_16_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_45_0, "throw");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_16_1_0()); 
	    }
		lv_bbs5_46_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bbs5",
        		lv_bbs5_46_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_st2_47_0=	'goto' 
    {
        newLeafNode(lv_st2_47_0, grammarAccess.getFlow_BalStatementAccess().getSt2GotoKeyword_17_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_47_0, "goto");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFlow_BalStatementAccess().getI3IdParserRuleCall_17_1_0()); 
	    }
		lv_i3_48_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlow_BalStatementRule());
	        }
       		set(
       			$current, 
       			"i3",
        		lv_i3_48_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_st2_49_0=	'never' 
    {
        newLeafNode(lv_st2_49_0, grammarAccess.getFlow_BalStatementAccess().getSt2NeverKeyword_18_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFlow_BalStatementRule());
	        }
       		setWithLastConsumed($current, "st2", lv_st2_49_0, "never");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleGenBound
entryRuleGenBound returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getGenBoundRule()); }
	 iv_ruleGenBound=ruleGenBound 
	 { $current=$iv_ruleGenBound.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule GenBound
ruleGenBound returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getGenBoundAccess().getGenBoundAction_0(),
            $current);
    }
)(	otherlv_1='to' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGenBoundAccess().getToKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGenBoundAccess().getCiCommaItemParserRuleCall_1_1_0()); 
	    }
		lv_ci_2_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenBoundRule());
	        }
       		set(
       			$current, 
       			"ci",
        		lv_ci_2_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGenBoundAccess().getOfKeyword_1_2());
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleButExpr
entryRuleButExpr returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getButExprRule()); }
	 iv_ruleButExpr=ruleButExpr 
	 { $current=$iv_ruleButExpr.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ButExpr
ruleButExpr returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getButExprAccess().getButExprAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getButExprAccess().getDbDeclBindingParserRuleCall_1_0_0()); 
	    }
		lv_db_1_0=ruleDeclBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButExprRule());
	        }
       		set(
       			$current, 
       			"db",
        		lv_db_1_0, 
        		"DeclBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getButExprAccess().getInKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButExprAccess().getCaCasesParserRuleCall_1_2_0()); 
	    }
		lv_ca_3_0=ruleCases		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButExprRule());
	        }
       		set(
       			$current, 
       			"ca",
        		lv_ca_3_0, 
        		"Cases");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCases
entryRuleCases returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCasesRule()); }
	 iv_ruleCases=ruleCases 
	 { $current=$iv_ruleCases.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Cases
ruleCases returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCasesAccess().getBinding_CollectionParserRuleCall()); 
    }
    this_Binding_Collection_0=ruleBinding_Collection
    { 
        $current = $this_Binding_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAlwaysPart_AnyStatement
entryRuleAlwaysPart_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementRule()); }
	 iv_ruleAlwaysPart_AnyStatement=ruleAlwaysPart_AnyStatement 
	 { $current=$iv_ruleAlwaysPart_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_AnyStatement
ruleAlwaysPart_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysPart_AnyStatementAction_0(),
            $current);
    }
)((	otherlv_1='always' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_0_1_0()); 
	    }
		lv_bas7_2_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlwaysPart_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas7",
        		lv_bas7_2_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='finally' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAlwaysPart_AnyStatementAccess().getFinallyKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_1_1_0()); 
	    }
		lv_bas7_4_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlwaysPart_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas7",
        		lv_bas7_4_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAlwaysPart_BalStatement
entryRuleAlwaysPart_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAlwaysPart_BalStatementRule()); }
	 iv_ruleAlwaysPart_BalStatement=ruleAlwaysPart_BalStatement 
	 { $current=$iv_ruleAlwaysPart_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_BalStatement
ruleAlwaysPart_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysPart_BalStatementAction_0(),
            $current);
    }
)((	otherlv_1='always' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_0_1_0()); 
	    }
		lv_bas7_2_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlwaysPart_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bas7",
        		lv_bas7_2_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='finally' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAlwaysPart_BalStatementAccess().getFinallyKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_1_1_0()); 
	    }
		lv_bas7_4_0=ruleBinding_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlwaysPart_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bas7",
        		lv_bas7_4_0, 
        		"Binding_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	 iv_ruleCollection=ruleCollection 
	 { $current=$iv_ruleCollection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Collection
ruleCollection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCollectionAccess().getInfixedParserRuleCall_0()); 
    }
    this_Infixed_0=ruleInfixed
    { 
        $current = $this_Infixed_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionAccess().getI3IteratorsParserRuleCall_1_0()); 
	    }
		lv_i3_1_0=ruleIterators		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionRule());
	        }
       		set(
       			$current, 
       			"i3",
        		lv_i3_1_0, 
        		"Iterators");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterators
entryRuleIterators returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIteratorsRule()); }
	 iv_ruleIterators=ruleIterators 
	 { $current=$iv_ruleIterators.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators
ruleIterators returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getIteratorsAccess().getIterators1ParserRuleCall()); 
    }
    this_Iterators1_0=ruleIterators1
    { 
        $current = $this_Iterators1_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterators1
entryRuleIterators1 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIterators1Rule()); }
	 iv_ruleIterators1=ruleIterators1 
	 { $current=$iv_ruleIterators1.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators1
ruleIterators1 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIterators1Access().getIterators1Action_0(),
            $current);
    }
)	otherlv_1='temp27' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIterators1Access().getTemp27Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIterators1Access().getItrIteratorParserRuleCall_2_0()); 
	    }
		lv_itr_2_0=ruleIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterators1Rule());
	        }
       		add(
       			$current, 
       			"itr",
        		lv_itr_2_0, 
        		"Iterator");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterator
entryRuleIterator returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIteratorRule()); }
	 iv_ruleIterator=ruleIterator 
	 { $current=$iv_ruleIterator.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterator
ruleIterator returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIteratorAccess().getForKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getIteratorAccess().getForLhsParserRuleCall_0_1()); 
    }
    this_ForLhs_1=ruleForLhs
    { 
        $current = $this_ForLhs_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIteratorAccess().getInKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_0_3_0()); 
	    }
		lv_i_3_0=ruleInfixed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorRule());
	        }
       		set(
       			$current, 
       			"i",
        		lv_i_3_0, 
        		"Infixed");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorAccess().getSpSuchthatPartParserRuleCall_0_4_0()); 
	    }
		lv_sp_4_0=ruleSuchthatPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorRule());
	        }
       		set(
       			$current, 
       			"sp",
        		lv_sp_4_0, 
        		"SuchthatPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_5='while' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIteratorAccess().getWhileKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_1_1_0()); 
	    }
		lv_i_6_0=ruleInfixed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIteratorRule());
	        }
       		set(
       			$current, 
       			"i",
        		lv_i_6_0, 
        		"Infixed");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleForLhs
entryRuleForLhs returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getForLhsRule()); }
	 iv_ruleForLhs=ruleForLhs 
	 { $current=$iv_ruleForLhs.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ForLhs
ruleForLhs returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='free' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForLhsAccess().getFreeKeyword_0_0());
    }

    |	otherlv_1='local' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForLhsAccess().getLocalKeyword_0_1());
    }

    |	otherlv_2='fluid' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForLhsAccess().getFluidKeyword_0_2());
    }
)?
    { 
        newCompositeNode(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_1()); 
    }
    this_Infixed_3=ruleInfixed
    { 
        $current = $this_Infixed_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSuchthatPart
entryRuleSuchthatPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getSuchthatPartRule()); }
	 iv_ruleSuchthatPart=ruleSuchthatPart 
	 { $current=$iv_ruleSuchthatPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SuchthatPart
ruleSuchthatPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(this_KW_BAR_0=RULE_KW_BAR
    { 
    newLeafNode(this_KW_BAR_0, grammarAccess.getSuchthatPartAccess().getKW_BARTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getSuchthatPartAccess().getInfixedParserRuleCall_1()); 
    }
    this_Infixed_1=ruleInfixed
    { 
        $current = $this_Infixed_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixed
entryRuleInfixed returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedRule()); }
	 iv_ruleInfixed=ruleInfixed 
	 { $current=$iv_ruleInfixed.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Infixed
ruleInfixed returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getInfixedAccess().getIfxInfixedExprParserRuleCall_0_0_0()); 
	    }
		lv_ifx_0_0=ruleInfixedExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfixedRule());
	        }
       		set(
       			$current, 
       			"ifx",
        		lv_ifx_0_0, 
        		"InfixedExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInfixedAccess().getDpDeclPartParserRuleCall_0_1_0()); 
	    }
		lv_dp_1_0=ruleDeclPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfixedRule());
	        }
       		add(
       			$current, 
       			"dp",
        		lv_dp_1_0, 
        		"DeclPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInfixedAccess().getBBlockParserRuleCall_1_0()); 
	    }
		lv_b_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfixedRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExpr
entryRuleInfixedExpr returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprRule()); }
	 iv_ruleInfixedExpr=ruleInfixedExpr 
	 { $current=$iv_ruleInfixedExpr.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExpr
ruleInfixedExpr returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInfixedExprAccess().getE11_OpParserRuleCall_0()); 
    }
    this_E11_Op_0=ruleE11_Op
    { 
        $current = $this_E11_Op_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInfixedExprAccess().getE3ParserRuleCall_1()); 
    }
    this_E3_1=ruleE3
    { 
        $current = $this_E3_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE3
entryRuleE3 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE3Rule()); }
	 iv_ruleE3=ruleE3 
	 { $current=$iv_ruleE3.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E3
ruleE3 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE3Access().getLeftE4ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE4		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE3Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E4");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE3Access().getE3LeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=	'and' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getE3Access().getOpAndKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE3Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_0, "and");
	    }

)
)
    |(
(
		lv_op_3_0=	'or' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getE3Access().getOpOrKeyword_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE3Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_3_0, "or");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getE3Access().getOp2LatticeOpParserRuleCall_1_1_2_0()); 
	    }
		lv_op2_4_0=ruleLatticeOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE3Rule());
	        }
       		add(
       			$current, 
       			"op2",
        		lv_op2_4_0, 
        		"LatticeOp");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE3Access().getRightE4ParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleE4		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"E4");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE4
entryRuleE4 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE4Rule()); }
	 iv_ruleE4=ruleE4 
	 { $current=$iv_ruleE4.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E4
ruleE4 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getLeftE5ParserRuleCall_0_0_0()); 
	    }
		lv_left_0_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE4Access().getE4LeftAction_0_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=	'has' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getE4Access().getOpHasKeyword_0_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE4Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_0, "has");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getOp2RelationOpParserRuleCall_0_1_1_1_0()); 
	    }
		lv_op2_3_0=ruleRelationOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		add(
       			$current, 
       			"op2",
        		lv_op2_3_0, 
        		"RelationOp");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getRightE5ParserRuleCall_0_1_2_0()); 
	    }
		lv_right_4_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
    { 
        newCompositeNode(grammarAccess.getE4Access().getRelationOpParserRuleCall_1_0()); 
    }
ruleRelationOp
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getRightE5ParserRuleCall_1_1_0()); 
	    }
		lv_right_6_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_6_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE5
entryRuleE5 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE5Rule()); }
	 iv_ruleE5=ruleE5 
	 { $current=$iv_ruleE5.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E5
ruleE5 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((((
(
ruleE6
)
)((
)(
(
ruleSegOp
)
)(
(
ruleE6
)
))*))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getLeftE6ParserRuleCall_0_0_0_0()); 
	    }
		lv_left_0_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE5Access().getE5LeftAction_0_0_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getOp5SegOpParserRuleCall_0_0_1_1_0()); 
	    }
		lv_op5_2_0=ruleSegOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		add(
       			$current, 
       			"op5",
        		lv_op5_2_0, 
        		"SegOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getRightE6ParserRuleCall_0_0_1_2_0()); 
	    }
		lv_right_3_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getLeftE6ParserRuleCall_1_0_0()); 
	    }
		lv_left_4_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_4_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getOp5SegOpParserRuleCall_1_1_0()); 
	    }
		lv_op5_5_0=ruleSegOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		add(
       			$current, 
       			"op5",
        		lv_op5_5_0, 
        		"SegOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE6
entryRuleE6 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE6Rule()); }
	 iv_ruleE6=ruleE6 
	 { $current=$iv_ruleE6.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E6
ruleE6 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getLeftE7ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E7");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE6Access().getE6LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getOp6PlusOpParserRuleCall_1_1_0()); 
	    }
		lv_op6_2_0=rulePlusOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		add(
       			$current, 
       			"op6",
        		lv_op6_2_0, 
        		"PlusOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getRightE7ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E7");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE7
entryRuleE7 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE7Rule()); }
	 iv_ruleE7=ruleE7 
	 { $current=$iv_ruleE7.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E7
ruleE7 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getLeftE8ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE8		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E8");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE7Access().getE7LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getOp7QuotientOpParserRuleCall_1_1_0()); 
	    }
		lv_op7_2_0=ruleQuotientOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		add(
       			$current, 
       			"op7",
        		lv_op7_2_0, 
        		"QuotientOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getRightE8ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE8		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E8");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE8
entryRuleE8 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE8Rule()); }
	 iv_ruleE8=ruleE8 
	 { $current=$iv_ruleE8.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E8
ruleE8 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getLeftE9ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE9		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E9");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE8Access().getE8LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getOp8TimesOpParserRuleCall_1_1_0()); 
	    }
		lv_op8_2_0=ruleTimesOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		add(
       			$current, 
       			"op8",
        		lv_op8_2_0, 
        		"TimesOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getRightE9ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE9		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E9");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE9
entryRuleE9 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE9Rule()); }
	 iv_ruleE9=ruleE9 
	 { $current=$iv_ruleE9.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E9
ruleE9 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getLeftE11_E12ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE11_E12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E11_E12");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE9Access().getE9LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getOp9PowerOpParserRuleCall_1_1_0()); 
	    }
		lv_op9_2_0=rulePowerOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		add(
       			$current, 
       			"op9",
        		lv_op9_2_0, 
        		"PowerOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getRightE11_E12ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE11_E12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E11_E12");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE11_E12
entryRuleE11_E12 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE11_E12Rule()); }
	 iv_ruleE11_E12=ruleE11_E12 
	 { $current=$iv_ruleE11_E12.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E11_E12
ruleE11_E12 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE11_E12Access().getLeftE12ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_E12Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E12");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE11_E12Access().getE11_E12LeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_KW_2COLON
		{
			newLeafNode(lv_op_2_0, grammarAccess.getE11_E12Access().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_2COLON");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_KW_AT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getE11_E12Access().getOpKW_ATTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"KW_AT");
	    }

)
)
    |(
(
		lv_op_4_0=	'pretend' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_4_0, "pretend");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE11_E12Access().getRightE12ParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleE12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_E12Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"E12");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE11_Op
entryRuleE11_Op returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE11_OpRule()); }
	 iv_ruleE11_Op=ruleE11_Op 
	 { $current=$iv_ruleE11_Op.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E11_Op
ruleE11_Op returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE11_OpAccess().getLeftOpParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_OpRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"Op");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE11_OpAccess().getE11_OpLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_KW_2COLON
		{
			newLeafNode(lv_op_2_0, grammarAccess.getE11_OpAccess().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_OpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_2COLON");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_KW_AT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getE11_OpAccess().getOpKW_ATTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_OpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"KW_AT");
	    }

)
)
    |(
(
		lv_op_4_0=	'pretend' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getE11_OpAccess().getOpPretendKeyword_1_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_OpRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_4_0, "pretend");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE11_OpAccess().getRightE12ParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleE12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_OpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"E12");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTypeAccess().getE11_E12ParserRuleCall()); 
    }
    this_E11_E12_0=ruleE11_E12
    { 
        $current = $this_E11_E12_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE12
entryRuleE12 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE12Rule()); }
	 iv_ruleE12=ruleE12 
	 { $current=$iv_ruleE12.current; } 
	 EOF 
;

// Rule E12
ruleE12 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getLeftE13ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE13		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E13");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE12Access().getE12LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getOpArrowOpParserRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleArrowOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		add(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"ArrowOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getRightE13ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE13		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E13");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleE13
entryRuleE13 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE13Rule()); }
	 iv_ruleE13=ruleE13 
	 { $current=$iv_ruleE13.current; } 
	 EOF 
;

// Rule E13
ruleE13 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE13Access().getLeftE14ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE14		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE13Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E14");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE13Access().getE13LeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_KW_DOLLAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getE13Access().getOpKW_DOLLARTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE13Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_DOLLAR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE13Access().getRightQualTailParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE13Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"QualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleQualTail
entryRuleQualTail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualTailRule()); }
	 iv_ruleQualTail=ruleQualTail 
	 { $current=$iv_ruleQualTail.current; } 
	 EOF 
;

// Rule QualTail
ruleQualTail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualTailAccess().getLeftJuxtaposedParserRuleCall_0()); 
    }
    this_LeftJuxtaposed_0=ruleLeftJuxtaposed
    { 
        $current = $this_LeftJuxtaposed_0.current; 
        afterParserOrEnumRuleCall();
    }
(((	RULE_KW_DOLLAR(
(
ruleQualTail
)
)))=>(this_KW_DOLLAR_1=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_1, grammarAccess.getQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualTailAccess().getQtQualTailParserRuleCall_1_0_1_0()); 
	    }
		lv_qt_2_0=ruleQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualTailRule());
	        }
       		set(
       			$current, 
       			"qt",
        		lv_qt_2_0, 
        		"QualTail");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleOpQualTail
entryRuleOpQualTail returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getOpQualTailRule()); }
	 iv_ruleOpQualTail=ruleOpQualTail 
	 { $current=$iv_ruleOpQualTail.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OpQualTail
ruleOpQualTail returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpQualTailAccess().getNameMoleculeParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpQualTailRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Molecule");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_KW_DOLLAR	ruleOpQualTail))=>(this_KW_DOLLAR_1=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_1, grammarAccess.getOpQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getOpQualTailAccess().getOpQualTailParserRuleCall_1_0_1()); 
    }
    this_OpQualTail_2=ruleOpQualTail
    { 
        $current = $this_OpQualTail_2.current; 
        afterParserOrEnumRuleCall();
    }
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE14
entryRuleE14 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE14Rule()); }
	 iv_ruleE14=ruleE14 
	 { $current=$iv_ruleE14.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E14
ruleE14 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_0_0()); 
	    }
		lv_e15left_0_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15left",
        		lv_e15left_0_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((((
(
ruleE15
)
)?	'with' 
(
(
ruleDeclMolecule
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_1_0_0_0()); 
	    }
		lv_e15left_1_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15left",
        		lv_e15left_1_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getE14Access().getWithKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_1_0_2_0()); 
	    }
		lv_dm_3_0=ruleDeclMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"dm",
        		lv_dm_3_0, 
        		"DeclMolecule");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((((
(
ruleE15
)
)?	'add' 
(
(
ruleDeclMolecule
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_2_0_0_0()); 
	    }
		lv_e15left_4_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15left",
        		lv_e15left_4_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='add' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getE14Access().getAddKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_2_0_2_0()); 
	    }
		lv_dm_6_0=ruleDeclMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"dm",
        		lv_dm_6_0, 
        		"DeclMolecule");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((((
(
ruleE15
)
)	'except' 
(
(
ruleE15
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_3_0_0_0()); 
	    }
		lv_e15left_7_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15left",
        		lv_e15left_7_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='except' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getE14Access().getExceptKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_3_0_2_0()); 
	    }
		lv_e15right_9_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15right",
        		lv_e15right_9_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((((
(
ruleE15
)
)	'throw' 
(
(
ruleE15
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_4_0_0_0()); 
	    }
		lv_e15left_10_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15left",
        		lv_e15left_10_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='throw' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getE14Access().getThrowKeyword_4_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_4_0_2_0()); 
	    }
		lv_e15right_12_0=ruleE15		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE14Rule());
	        }
       		set(
       			$current, 
       			"e15right",
        		lv_e15right_12_0, 
        		"E15");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE15
entryRuleE15 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE15Rule()); }
	 iv_ruleE15=ruleE15 
	 { $current=$iv_ruleE15.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E15
ruleE15 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getE15Access().getApplicationParserRuleCall()); 
    }
    this_Application_0=ruleApplication
    { 
        $current = $this_Application_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleOp
entryRuleOp returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getOpRule()); }
	 iv_ruleOp=ruleOp 
	 { $current=$iv_ruleOp.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Op
ruleOp returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopArrowOpParserRuleCall_0_1_0()); 
	    }
		lv_aop_1_0=ruleArrowOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_1_0, 
        		"ArrowOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopLatticeOpParserRuleCall_1_1_0()); 
	    }
		lv_aop_3_0=ruleLatticeOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_3_0, 
        		"LatticeOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_2_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getOpAccess().getRelationOpParserRuleCall_2_1()); 
    }
ruleRelationOp
    { 
        afterParserOrEnumRuleCall();
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopSegOpParserRuleCall_3_1_0()); 
	    }
		lv_aop_7_0=ruleSegOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_7_0, 
        		"SegOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_4_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopPlusOpParserRuleCall_4_1_0()); 
	    }
		lv_aop_9_0=rulePlusOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_9_0, 
        		"PlusOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_5_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopQuotientOpParserRuleCall_5_1_0()); 
	    }
		lv_aop_11_0=ruleQuotientOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_11_0, 
        		"QuotientOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_6_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopTimesOpParserRuleCall_6_1_0()); 
	    }
		lv_aop_13_0=ruleTimesOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_13_0, 
        		"TimesOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpAccess().getOpAction_7_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAccess().getAopPowerOpParserRuleCall_7_1_0()); 
	    }
		lv_aop_15_0=rulePowerOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpRule());
	        }
       		set(
       			$current, 
       			"aop",
        		lv_aop_15_0, 
        		"PowerOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNakedOp
entryRuleNakedOp returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNakedOpRule()); }
	 iv_ruleNakedOp=ruleNakedOp 
	 { $current=$iv_ruleNakedOp.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NakedOp
ruleNakedOp returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_ArrowTokParserRuleCall_0()); 
    }
    this_UnqualOp_ArrowTok_0=ruleUnqualOp_ArrowTok
    { 
        $current = $this_UnqualOp_ArrowTok_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_LatticeTokParserRuleCall_1()); 
    }
    this_UnqualOp_LatticeTok_1=ruleUnqualOp_LatticeTok
    { 
        $current = $this_UnqualOp_LatticeTok_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_RelationTokParserRuleCall_2()); 
    }
    this_UnqualOp_RelationTok_2=ruleUnqualOp_RelationTok
    { 
        $current = $this_UnqualOp_RelationTok_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_SegTokParserRuleCall_3()); 
    }
    this_UnqualOp_SegTok_3=ruleUnqualOp_SegTok
    { 
        $current = $this_UnqualOp_SegTok_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_PlusTokParserRuleCall_4()); 
    }
    this_UnqualOp_PlusTok_4=ruleUnqualOp_PlusTok
    { 
        $current = $this_UnqualOp_PlusTok_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_QuotientTokParserRuleCall_5()); 
    }
    this_UnqualOp_QuotientTok_5=ruleUnqualOp_QuotientTok
    { 
        $current = $this_UnqualOp_QuotientTok_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_TimesTokParserRuleCall_6()); 
    }
    this_UnqualOp_TimesTok_6=ruleUnqualOp_TimesTok
    { 
        $current = $this_UnqualOp_TimesTok_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_PowerTokParserRuleCall_7()); 
    }
    this_UnqualOp_PowerTok_7=ruleUnqualOp_PowerTok
    { 
        $current = $this_UnqualOp_PowerTok_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleArrowOp
entryRuleArrowOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrowOpRule()); }
	 iv_ruleArrowOp=ruleArrowOp 
	 { $current=$iv_ruleArrowOp.current; } 
	 EOF 
;

// Rule ArrowOp
ruleArrowOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getArrowOpAccess().getQualOp_ArrowTokParserRuleCall()); 
    }
    this_QualOp_ArrowTok_0=ruleQualOp_ArrowTok
    { 
        $current = $this_QualOp_ArrowTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleLatticeOp
entryRuleLatticeOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatticeOpRule()); }
	 iv_ruleLatticeOp=ruleLatticeOp 
	 { $current=$iv_ruleLatticeOp.current; } 
	 EOF 
;

// Rule LatticeOp
ruleLatticeOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getLatticeOpAccess().getQualOp_LatticeTokParserRuleCall()); 
    }
    this_QualOp_LatticeTok_0=ruleQualOp_LatticeTok
    { 
        $current = $this_QualOp_LatticeTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleRelationOp
entryRuleRelationOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationOpRule()); } 
	 iv_ruleRelationOp=ruleRelationOp 
	 { $current=$iv_ruleRelationOp.current.getText(); }  
	 EOF 
;

// Rule RelationOp
ruleRelationOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRelationOpAccess().getQualOp_RelationTokParserRuleCall()); 
    }
    this_QualOp_RelationTok_0=ruleQualOp_RelationTok    {
		$current.merge(this_QualOp_RelationTok_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleSegOp
entryRuleSegOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegOpRule()); }
	 iv_ruleSegOp=ruleSegOp 
	 { $current=$iv_ruleSegOp.current; } 
	 EOF 
;

// Rule SegOp
ruleSegOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSegOpAccess().getQualOp_SegTokParserRuleCall()); 
    }
    this_QualOp_SegTok_0=ruleQualOp_SegTok
    { 
        $current = $this_QualOp_SegTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePlusOp
entryRulePlusOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlusOpRule()); }
	 iv_rulePlusOp=rulePlusOp 
	 { $current=$iv_rulePlusOp.current; } 
	 EOF 
;

// Rule PlusOp
rulePlusOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPlusOpAccess().getQualOp_PlusTokParserRuleCall()); 
    }
    this_QualOp_PlusTok_0=ruleQualOp_PlusTok
    { 
        $current = $this_QualOp_PlusTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleQuotientOp
entryRuleQuotientOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuotientOpRule()); }
	 iv_ruleQuotientOp=ruleQuotientOp 
	 { $current=$iv_ruleQuotientOp.current; } 
	 EOF 
;

// Rule QuotientOp
ruleQuotientOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getQuotientOpAccess().getQualOp_QuotientTokParserRuleCall()); 
    }
    this_QualOp_QuotientTok_0=ruleQualOp_QuotientTok
    { 
        $current = $this_QualOp_QuotientTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTimesOp
entryRuleTimesOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimesOpRule()); }
	 iv_ruleTimesOp=ruleTimesOp 
	 { $current=$iv_ruleTimesOp.current; } 
	 EOF 
;

// Rule TimesOp
ruleTimesOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTimesOpAccess().getQualOp_TimesTokParserRuleCall()); 
    }
    this_QualOp_TimesTok_0=ruleQualOp_TimesTok
    { 
        $current = $this_QualOp_TimesTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePowerOp
entryRulePowerOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPowerOpRule()); }
	 iv_rulePowerOp=rulePowerOp 
	 { $current=$iv_rulePowerOp.current; } 
	 EOF 
;

// Rule PowerOp
rulePowerOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPowerOpAccess().getQualOp_PowerTokParserRuleCall()); 
    }
    this_QualOp_PowerTok_0=ruleQualOp_PowerTok
    { 
        $current = $this_QualOp_PowerTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleArrowTok
entryRuleArrowTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrowTokRule()); } 
	 iv_ruleArrowTok=ruleArrowTok 
	 { $current=$iv_ruleArrowTok.current.getText(); }  
	 EOF 
;

// Rule ArrowTok
ruleArrowTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_RARROW_0=RULE_KW_RARROW    {
		$current.merge(this_KW_RARROW_0);
    }

    { 
    newLeafNode(this_KW_RARROW_0, grammarAccess.getArrowTokAccess().getKW_RARROWTerminalRuleCall_0()); 
    }

    |    this_KW_LARROW_1=RULE_KW_LARROW    {
		$current.merge(this_KW_LARROW_1);
    }

    { 
    newLeafNode(this_KW_LARROW_1, grammarAccess.getArrowTokAccess().getKW_LARROWTerminalRuleCall_1()); 
    }

    |    this_KW_MAPSTAR_2=RULE_KW_MAPSTAR    {
		$current.merge(this_KW_MAPSTAR_2);
    }

    { 
    newLeafNode(this_KW_MAPSTAR_2, grammarAccess.getArrowTokAccess().getKW_MAPSTARTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLatticeTok
entryRuleLatticeTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatticeTokRule()); } 
	 iv_ruleLatticeTok=ruleLatticeTok 
	 { $current=$iv_ruleLatticeTok.current.getText(); }  
	 EOF 
;

// Rule LatticeTok
ruleLatticeTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_VEE_0=RULE_KW_VEE    {
		$current.merge(this_KW_VEE_0);
    }

    { 
    newLeafNode(this_KW_VEE_0, grammarAccess.getLatticeTokAccess().getKW_VEETerminalRuleCall_0()); 
    }

    |    this_KW_WEDGE_1=RULE_KW_WEDGE    {
		$current.merge(this_KW_WEDGE_1);
    }

    { 
    newLeafNode(this_KW_WEDGE_1, grammarAccess.getLatticeTokAccess().getKW_WEDGETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRelationTok
entryRuleRelationTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationTokRule()); } 
	 iv_ruleRelationTok=ruleRelationTok 
	 { $current=$iv_ruleRelationTok.current.getText(); }  
	 EOF 
;

// Rule RelationTok
ruleRelationTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_EQ_0=RULE_KW_EQ    {
		$current.merge(this_KW_EQ_0);
    }

    { 
    newLeafNode(this_KW_EQ_0, grammarAccess.getRelationTokAccess().getKW_EQTerminalRuleCall_0()); 
    }

    |    this_KW_TILDEE_1=RULE_KW_TILDEE    {
		$current.merge(this_KW_TILDEE_1);
    }

    { 
    newLeafNode(this_KW_TILDEE_1, grammarAccess.getRelationTokAccess().getKW_TILDEETerminalRuleCall_1()); 
    }

    |    this_KW_HATE_2=RULE_KW_HATE    {
		$current.merge(this_KW_HATE_2);
    }

    { 
    newLeafNode(this_KW_HATE_2, grammarAccess.getRelationTokAccess().getKW_HATETerminalRuleCall_2()); 
    }

    |    this_KW_GE_3=RULE_KW_GE    {
		$current.merge(this_KW_GE_3);
    }

    { 
    newLeafNode(this_KW_GE_3, grammarAccess.getRelationTokAccess().getKW_GETerminalRuleCall_3()); 
    }

    |    this_KW_GT_4=RULE_KW_GT    {
		$current.merge(this_KW_GT_4);
    }

    { 
    newLeafNode(this_KW_GT_4, grammarAccess.getRelationTokAccess().getKW_GTTerminalRuleCall_4()); 
    }

    |    this_KW_2GT_5=RULE_KW_2GT    {
		$current.merge(this_KW_2GT_5);
    }

    { 
    newLeafNode(this_KW_2GT_5, grammarAccess.getRelationTokAccess().getKW_2GTTerminalRuleCall_5()); 
    }

    |    this_KW_LE_6=RULE_KW_LE    {
		$current.merge(this_KW_LE_6);
    }

    { 
    newLeafNode(this_KW_LE_6, grammarAccess.getRelationTokAccess().getKW_LETerminalRuleCall_6()); 
    }

    |    this_KW_LT_7=RULE_KW_LT    {
		$current.merge(this_KW_LT_7);
    }

    { 
    newLeafNode(this_KW_LT_7, grammarAccess.getRelationTokAccess().getKW_LTTerminalRuleCall_7()); 
    }

    |    this_KW_2LT_8=RULE_KW_2LT    {
		$current.merge(this_KW_2LT_8);
    }

    { 
    newLeafNode(this_KW_2LT_8, grammarAccess.getRelationTokAccess().getKW_2LTTerminalRuleCall_8()); 
    }

    |
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getIsKeyword_9()); 
    }

    |
	kw='isnt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getIsntKeyword_10()); 
    }

    |
	kw='case' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getCaseKeyword_11()); 
    }
)
    ;





// Entry rule entryRuleSegTok
entryRuleSegTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegTokRule()); } 
	 iv_ruleSegTok=ruleSegTok 
	 { $current=$iv_ruleSegTok.current.getText(); }  
	 EOF 
;

// Rule SegTok
ruleSegTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_2DOT_0=RULE_KW_2DOT    {
		$current.merge(this_KW_2DOT_0);
    }

    { 
    newLeafNode(this_KW_2DOT_0, grammarAccess.getSegTokAccess().getKW_2DOTTerminalRuleCall_0()); 
    }

    |
	kw='by' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSegTokAccess().getByKeyword_1()); 
    }
)
    ;





// Entry rule entryRulePlusTok
entryRulePlusTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlusTokRule()); } 
	 iv_rulePlusTok=rulePlusTok 
	 { $current=$iv_rulePlusTok.current.getText(); }  
	 EOF 
;

// Rule PlusTok
rulePlusTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_PLUS_0=RULE_KW_PLUS    {
		$current.merge(this_KW_PLUS_0);
    }

    { 
    newLeafNode(this_KW_PLUS_0, grammarAccess.getPlusTokAccess().getKW_PLUSTerminalRuleCall_0()); 
    }

    |    this_KW_MINUS_1=RULE_KW_MINUS    {
		$current.merge(this_KW_MINUS_1);
    }

    { 
    newLeafNode(this_KW_MINUS_1, grammarAccess.getPlusTokAccess().getKW_MINUSTerminalRuleCall_1()); 
    }

    |    this_KW_PLUSMINUS_2=RULE_KW_PLUSMINUS    {
		$current.merge(this_KW_PLUSMINUS_2);
    }

    { 
    newLeafNode(this_KW_PLUSMINUS_2, grammarAccess.getPlusTokAccess().getKW_PLUSMINUSTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleQuotientTok
entryRuleQuotientTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuotientTokRule()); } 
	 iv_ruleQuotientTok=ruleQuotientTok 
	 { $current=$iv_ruleQuotientTok.current.getText(); }  
	 EOF 
;

// Rule QuotientTok
ruleQuotientTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='mod' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getModKeyword_0()); 
    }

    |
	kw='quo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getQuoKeyword_1()); 
    }

    |
	kw='rem' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getRemKeyword_2()); 
    }

    |
	kw='exquo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getExquoKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleTimesTok
entryRuleTimesTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimesTokRule()); } 
	 iv_ruleTimesTok=ruleTimesTok 
	 { $current=$iv_ruleTimesTok.current.getText(); }  
	 EOF 
;

// Rule TimesTok
ruleTimesTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_STAR_0=RULE_KW_STAR    {
		$current.merge(this_KW_STAR_0);
    }

    { 
    newLeafNode(this_KW_STAR_0, grammarAccess.getTimesTokAccess().getKW_STARTerminalRuleCall_0()); 
    }

    |    this_KW_SLASH_1=RULE_KW_SLASH    {
		$current.merge(this_KW_SLASH_1);
    }

    { 
    newLeafNode(this_KW_SLASH_1, grammarAccess.getTimesTokAccess().getKW_SLASHTerminalRuleCall_1()); 
    }

    |    this_KW_BACKSLASH_2=RULE_KW_BACKSLASH    {
		$current.merge(this_KW_BACKSLASH_2);
    }

    { 
    newLeafNode(this_KW_BACKSLASH_2, grammarAccess.getTimesTokAccess().getKW_BACKSLASHTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePowerTok
entryRulePowerTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPowerTokRule()); } 
	 iv_rulePowerTok=rulePowerTok 
	 { $current=$iv_rulePowerTok.current.getText(); }  
	 EOF 
;

// Rule PowerTok
rulePowerTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_2STAR_0=RULE_KW_2STAR    {
		$current.merge(this_KW_2STAR_0);
    }

    { 
    newLeafNode(this_KW_2STAR_0, grammarAccess.getPowerTokAccess().getKW_2STARTerminalRuleCall_0()); 
    }

    |    this_KW_HAT_1=RULE_KW_HAT    {
		$current.merge(this_KW_HAT_1);
    }

    { 
    newLeafNode(this_KW_HAT_1, grammarAccess.getPowerTokAccess().getKW_HATTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getApplicationAccess().getRightJuxtaposedParserRuleCall()); 
    }
    this_RightJuxtaposed_0=ruleRightJuxtaposed
    { 
        $current = $this_RightJuxtaposed_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleRightJuxtaposed
entryRuleRightJuxtaposed returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getRightJuxtaposedRule()); }
	 iv_ruleRightJuxtaposed=ruleRightJuxtaposed 
	 { $current=$iv_ruleRightJuxtaposed.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RightJuxtaposed
ruleRightJuxtaposed returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRightJuxtaposedAccess().getJright_MoleculeParserRuleCall()); 
    }
    this_Jright_Molecule_0=ruleJright_Molecule
    { 
        $current = $this_Jright_Molecule_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLeftJuxtaposed
entryRuleLeftJuxtaposed returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLeftJuxtaposedRule()); }
	 iv_ruleLeftJuxtaposed=ruleLeftJuxtaposed 
	 { $current=$iv_ruleLeftJuxtaposed.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LeftJuxtaposed
ruleLeftJuxtaposed returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getLeftJuxtaposedAccess().getJleft_MoleculeParserRuleCall()); 
    }
    this_Jleft_Molecule_0=ruleJleft_Molecule
    { 
        $current = $this_Jleft_Molecule_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJright_Molecule
entryRuleJright_Molecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getJright_MoleculeRule()); }
	 iv_ruleJright_Molecule=ruleJright_Molecule 
	 { $current=$iv_ruleJright_Molecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jright_Molecule
ruleJright_Molecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJright_MoleculeAccess().getJleft_MoleculeParserRuleCall_0_0()); 
    }
    this_Jleft_Molecule_0=ruleJleft_Molecule
    { 
        $current = $this_Jleft_Molecule_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_0_1_0()); 
	    }
		lv_right_1_0=ruleJright_Atom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJright_MoleculeRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_1_0, 
        		"Jright_Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_2='not' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJright_MoleculeAccess().getNotKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleJright_Atom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJright_MoleculeRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Jright_Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJright_Atom
entryRuleJright_Atom returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getJright_AtomRule()); }
	 iv_ruleJright_Atom=ruleJright_Atom 
	 { $current=$iv_ruleJright_Atom.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jright_Atom
ruleJright_Atom returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJright_AtomAccess().getJleft_AtomParserRuleCall_0_0()); 
    }
    this_Jleft_Atom_0=ruleJleft_Atom
    { 
        $current = $this_Jleft_Atom_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_0_1_0()); 
	    }
		lv_right2_1_0=ruleJright_Atom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJright_AtomRule());
	        }
       		set(
       			$current, 
       			"right2",
        		lv_right2_1_0, 
        		"Jright_Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_2='not' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJright_AtomAccess().getNotKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_1_1_0()); 
	    }
		lv_right2_3_0=ruleJright_Atom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJright_AtomRule());
	        }
       		set(
       			$current, 
       			"right2",
        		lv_right2_3_0, 
        		"Jright_Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJleft_Molecule
entryRuleJleft_Molecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getJleft_MoleculeRule()); }
	 iv_ruleJleft_Molecule=ruleJleft_Molecule 
	 { $current=$iv_ruleJleft_Molecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jleft_Molecule
ruleJleft_Molecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='not' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJleft_MoleculeAccess().getNotKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJleft_MoleculeAccess().getBeBlockEnclosureParserRuleCall_0_1_0()); 
	    }
		lv_be_1_0=ruleBlockEnclosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJleft_MoleculeRule());
	        }
       		set(
       			$current, 
       			"be",
        		lv_be_1_0, 
        		"BlockEnclosure");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getJleft_MoleculeAccess().getMMoleculeParserRuleCall_1_0_0()); 
	    }
		lv_m_2_0=ruleMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJleft_MoleculeRule());
	        }
       		set(
       			$current, 
       			"m",
        		lv_m_2_0, 
        		"Molecule");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_KW_DOT_3=RULE_KW_DOT
    { 
    newLeafNode(this_KW_DOT_3, grammarAccess.getJleft_MoleculeAccess().getKW_DOTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJleft_MoleculeAccess().getBmBlockMoleculeParserRuleCall_1_1_1_0()); 
	    }
		lv_bm_4_0=ruleBlockMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJleft_MoleculeRule());
	        }
       		add(
       			$current, 
       			"bm",
        		lv_bm_4_0, 
        		"BlockMolecule");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJleft_Atom
entryRuleJleft_Atom returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getJleft_AtomRule()); }
	 iv_ruleJleft_Atom=ruleJleft_Atom 
	 { $current=$iv_ruleJleft_Atom.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jleft_Atom
ruleJleft_Atom returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='not' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJleft_AtomAccess().getNotKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getJleft_AtomAccess().getBlockEnclosureParserRuleCall_0_1()); 
    }
    this_BlockEnclosure_1=ruleBlockEnclosure
    { 
        $current = $this_BlockEnclosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getJleft_AtomAccess().getAtomParserRuleCall_1_0()); 
    }
    this_Atom_2=ruleAtom
    { 
        $current = $this_Atom_2.current; 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOT_3=RULE_KW_DOT
    { 
    newLeafNode(this_KW_DOT_3, grammarAccess.getJleft_AtomAccess().getKW_DOTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJleft_AtomAccess().getBm4BlockMoleculeParserRuleCall_1_1_1_0()); 
	    }
		lv_bm4_4_0=ruleBlockMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJleft_AtomRule());
	        }
       		add(
       			$current, 
       			"bm4",
        		lv_bm4_4_0, 
        		"BlockMolecule");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMolecule
entryRuleMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getMoleculeRule()); }
	 iv_ruleMolecule=ruleMolecule 
	 { $current=$iv_ruleMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Molecule
ruleMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((	ruleAtom)=>
    { 
        newCompositeNode(grammarAccess.getMoleculeAccess().getAtomParserRuleCall_0()); 
    }
    this_Atom_0=ruleAtom
    { 
        $current = $this_Atom_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getMoleculeAccess().getEnclosureParserRuleCall_1()); 
    }
    this_Enclosure_1=ruleEnclosure
    { 
        $current = $this_Enclosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleEnclosure
entryRuleEnclosure returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnclosureRule()); }
	 iv_ruleEnclosure=ruleEnclosure 
	 { $current=$iv_ruleEnclosure.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Enclosure
ruleEnclosure returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getParenedParserRuleCall_0()); 
    }
    this_Parened_0=ruleParened
    { 
        $current = $this_Parened_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getBracketedParserRuleCall_1()); 
    }
    this_Bracketed_1=ruleBracketed
    { 
        $current = $this_Bracketed_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getQuotedIdsParserRuleCall_2()); 
    }
    this_QuotedIds_2=ruleQuotedIds
    { 
        $current = $this_QuotedIds_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclMolecule
entryRuleDeclMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclMoleculeRule()); }
	 iv_ruleDeclMolecule=ruleDeclMolecule 
	 { $current=$iv_ruleDeclMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclMolecule
ruleDeclMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclMoleculeAccess().getDeclMoleculeAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclMoleculeAccess().getAApplicationParserRuleCall_0_1_0()); 
	    }
		lv_a_1_0=ruleApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclMoleculeRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_1_0, 
        		"Application");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclMoleculeAccess().getBBlockParserRuleCall_1_0()); 
	    }
		lv_b_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclMoleculeRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlockMolecule
entryRuleBlockMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockMoleculeRule()); }
	 iv_ruleBlockMolecule=ruleBlockMolecule 
	 { $current=$iv_ruleBlockMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockMolecule
ruleBlockMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getAtomParserRuleCall_0()); 
    }
    this_Atom_0=ruleAtom
    { 
        $current = $this_Atom_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getEnclosureParserRuleCall_1()); 
    }
    this_Enclosure_1=ruleEnclosure
    { 
        $current = $this_Enclosure_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getBlockParserRuleCall_2()); 
    }
    this_Block_2=ruleBlock
    { 
        $current = $this_Block_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlockEnclosure
entryRuleBlockEnclosure returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockEnclosureRule()); }
	 iv_ruleBlockEnclosure=ruleBlockEnclosure 
	 { $current=$iv_ruleBlockEnclosure.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockEnclosure
ruleBlockEnclosure returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBlockEnclosureAccess().getEnclosureParserRuleCall_0()); 
    }
    this_Enclosure_0=ruleEnclosure
    { 
        $current = $this_Enclosure_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockEnclosureAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBlockAccess().getCurly_LabeledParserRuleCall()); 
    }
    this_Curly_Labeled_0=ruleCurly_Labeled
    { 
        $current = $this_Curly_Labeled_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleParened
entryRuleParened returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getParenedRule()); }
	 iv_ruleParened=ruleParened 
	 { $current=$iv_ruleParened.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Parened
ruleParened returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=RULE_KW_OPAREN
		{
			newLeafNode(lv_op_0_0, grammarAccess.getParenedAccess().getOpKW_OPARENTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParenedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"KW_OPAREN");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParenedAccess().getEAtomParserRuleCall_1_0()); 
	    }
		lv_e_1_0=ruleAtom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParenedRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_1_0, 
        		"Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_KW_CPAREN_2=RULE_KW_CPAREN
    { 
    newLeafNode(this_KW_CPAREN_2, grammarAccess.getParenedAccess().getKW_CPARENTerminalRuleCall_2()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBracketed
entryRuleBracketed returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBracketedRule()); }
	 iv_ruleBracketed=ruleBracketed 
	 { $current=$iv_ruleBracketed.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Bracketed
ruleBracketed returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=RULE_KW_OBRACK
		{
			newLeafNode(lv_op_0_0, grammarAccess.getBracketedAccess().getOpKW_OBRACKTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBracketedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"KW_OBRACK");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBracketedAccess().getEAtomParserRuleCall_1_0()); 
	    }
		lv_e_1_0=ruleAtom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBracketedRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_1_0, 
        		"Atom");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_KW_CBRACK_2=RULE_KW_CBRACK
    { 
    newLeafNode(this_KW_CBRACK_2, grammarAccess.getBracketedAccess().getKW_CBRACKTerminalRuleCall_2()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQuotedIds
entryRuleQuotedIds returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQuotedIdsRule()); }
	 iv_ruleQuotedIds=ruleQuotedIds 
	 { $current=$iv_ruleQuotedIds.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QuotedIds
ruleQuotedIds returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQuotedIdsAccess().getQuotedIdsAction_0(),
            $current);
    }
)(
(
		lv_op_1_0=RULE_KW_QUOTE
		{
			newLeafNode(lv_op_1_0, grammarAccess.getQuotedIdsAccess().getOpKW_QUOTETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuotedIdsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"KW_QUOTE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuotedIdsAccess().getNNamesParserRuleCall_2_0()); 
	    }
		lv_n_2_0=ruleNames		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuotedIdsRule());
	        }
       		set(
       			$current, 
       			"n",
        		lv_n_2_0, 
        		"Names");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_KW_QUOTE_3=RULE_KW_QUOTE
    { 
    newLeafNode(this_KW_QUOTE_3, grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNames
entryRuleNames returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNamesRule()); }
	 iv_ruleNames=ruleNames 
	 { $current=$iv_ruleNames.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Names
ruleNames returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_firstName_0_0=RULE_TK_ID
		{
			newLeafNode(lv_firstName_0_0, grammarAccess.getNamesAccess().getFirstNameTK_IDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstName",
        		lv_firstName_0_0, 
        		"TK_ID");
	    }

)
)(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getNamesAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		lv_subsequentNames_2_0=RULE_TK_ID
		{
			newLeafNode(lv_subsequentNames_2_0, grammarAccess.getNamesAccess().getSubsequentNamesTK_IDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"subsequentNames",
        		lv_subsequentNames_2_0, 
        		"TK_ID");
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	 iv_ruleAtom=ruleAtom 
	 { $current=$iv_ruleAtom.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Atom
ruleAtom returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAtomAccess().getIdenIdParserRuleCall_0_0()); 
	    }
		lv_iden_0_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomRule());
	        }
       		set(
       			$current, 
       			"iden",
        		lv_iden_0_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomAccess().getLitLiteralParserRuleCall_1_0()); 
	    }
		lv_lit_1_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomRule());
	        }
       		set(
       			$current, 
       			"lit",
        		lv_lit_1_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Name
ruleName returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNameAccess().getNameAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNameAccess().getNameIdParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNameAccess().getNoNakedOpParserRuleCall_1_0()); 
	    }
		lv_no_2_0=ruleNakedOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameRule());
	        }
       		set(
       			$current, 
       			"no",
        		lv_no_2_0, 
        		"NakedOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleId
entryRuleId returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIdRule()); }
	 iv_ruleId=ruleId 
	 { $current=$iv_ruleId.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Id
ruleId returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_AB_Id_0_0=RULE_TK_ID
		{
			newLeafNode(lv_AB_Id_0_0, grammarAccess.getIdAccess().getAB_IdTK_IDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"AB_Id",
        		lv_AB_Id_0_0, 
        		"TK_ID");
	    }

)
)
    |(
(
		lv_op_1_0=RULE_KW_SHARP
		{
			newLeafNode(lv_op_1_0, grammarAccess.getIdAccess().getOpKW_SHARPTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"KW_SHARP");
	    }

)
)
    |(
(
		lv_op_2_0=RULE_KW_TILDE
		{
			newLeafNode(lv_op_2_0, grammarAccess.getIdAccess().getOpKW_TILDETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_TILDE");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); } 
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(    this_TK_INT_0=RULE_TK_INT    {
		$current.merge(this_TK_INT_0);
    }

    { 
    newLeafNode(this_TK_INT_0, grammarAccess.getLiteralAccess().getTK_INTTerminalRuleCall_0()); 
    }

    |    this_TK_STRING_1=RULE_TK_STRING    {
		$current.merge(this_TK_STRING_1);
    }

    { 
    newLeafNode(this_TK_STRING_1, grammarAccess.getLiteralAccess().getTK_STRINGTerminalRuleCall_1()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_ArrowTok
entryRuleUnqualOp_ArrowTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_ArrowTokRule()); }
	 iv_ruleUnqualOp_ArrowTok=ruleUnqualOp_ArrowTok 
	 { $current=$iv_ruleUnqualOp_ArrowTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_ArrowTok
ruleUnqualOp_ArrowTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokParserRuleCall_0()); 
    }
ruleArrowTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_LatticeTok
entryRuleUnqualOp_LatticeTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_LatticeTokRule()); }
	 iv_ruleUnqualOp_LatticeTok=ruleUnqualOp_LatticeTok 
	 { $current=$iv_ruleUnqualOp_LatticeTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_LatticeTok
ruleUnqualOp_LatticeTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokParserRuleCall_0()); 
    }
ruleLatticeTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_RelationTok
entryRuleUnqualOp_RelationTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_RelationTokRule()); }
	 iv_ruleUnqualOp_RelationTok=ruleUnqualOp_RelationTok 
	 { $current=$iv_ruleUnqualOp_RelationTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_RelationTok
ruleUnqualOp_RelationTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokParserRuleCall_0()); 
    }
ruleRelationTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_SegTok
entryRuleUnqualOp_SegTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_SegTokRule()); }
	 iv_ruleUnqualOp_SegTok=ruleUnqualOp_SegTok 
	 { $current=$iv_ruleUnqualOp_SegTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_SegTok
ruleUnqualOp_SegTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_SegTokAccess().getSegTokParserRuleCall_0()); 
    }
ruleSegTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_SegTokAccess().getSegTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_PlusTok
entryRuleUnqualOp_PlusTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_PlusTokRule()); }
	 iv_ruleUnqualOp_PlusTok=ruleUnqualOp_PlusTok 
	 { $current=$iv_ruleUnqualOp_PlusTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PlusTok
ruleUnqualOp_PlusTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokParserRuleCall_0()); 
    }
rulePlusTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_QuotientTok
entryRuleUnqualOp_QuotientTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_QuotientTokRule()); }
	 iv_ruleUnqualOp_QuotientTok=ruleUnqualOp_QuotientTok 
	 { $current=$iv_ruleUnqualOp_QuotientTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_QuotientTok
ruleUnqualOp_QuotientTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokParserRuleCall_0()); 
    }
ruleQuotientTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_TimesTok
entryRuleUnqualOp_TimesTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_TimesTokRule()); }
	 iv_ruleUnqualOp_TimesTok=ruleUnqualOp_TimesTok 
	 { $current=$iv_ruleUnqualOp_TimesTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_TimesTok
ruleUnqualOp_TimesTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokParserRuleCall_0()); 
    }
ruleTimesTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_PowerTok
entryRuleUnqualOp_PowerTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_PowerTokRule()); }
	 iv_ruleUnqualOp_PowerTok=ruleUnqualOp_PowerTok 
	 { $current=$iv_ruleUnqualOp_PowerTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PowerTok
ruleUnqualOp_PowerTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokParserRuleCall_0()); 
    }
rulePowerTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_ArrowTok
entryRuleQualOp_ArrowTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_ArrowTokRule()); }
	 iv_ruleQualOp_ArrowTok=ruleQualOp_ArrowTok 
	 { $current=$iv_ruleQualOp_ArrowTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_ArrowTok
ruleQualOp_ArrowTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_ArrowTokAccess().getQualOp_ArrowTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_ArrowTokAccess().getArrowTokParserRuleCall_1()); 
    }
ruleArrowTok
    { 
        afterParserOrEnumRuleCall();
    }
(((	RULE_KW_DOLLAR(
(
ruleOpQualTail
)
)))=>(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_ArrowTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_ArrowTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_ArrowTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_LatticeTok
entryRuleQualOp_LatticeTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_LatticeTokRule()); }
	 iv_ruleQualOp_LatticeTok=ruleQualOp_LatticeTok 
	 { $current=$iv_ruleQualOp_LatticeTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_LatticeTok
ruleQualOp_LatticeTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_LatticeTokAccess().getQualOp_LatticeTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_LatticeTokAccess().getLatticeTokParserRuleCall_1()); 
    }
ruleLatticeTok
    { 
        afterParserOrEnumRuleCall();
    }
(((	RULE_KW_DOLLAR(
(
ruleOpQualTail
)
)))=>(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_LatticeTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_LatticeTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_LatticeTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_RelationTok
entryRuleQualOp_RelationTok returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_RelationTokRule()); } 
	 iv_ruleQualOp_RelationTok=ruleQualOp_RelationTok 
	 { $current=$iv_ruleQualOp_RelationTok.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_RelationTok
ruleQualOp_RelationTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp99' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualOp_RelationTokAccess().getTemp99Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_SegTok
entryRuleQualOp_SegTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_SegTokRule()); }
	 iv_ruleQualOp_SegTok=ruleQualOp_SegTok 
	 { $current=$iv_ruleQualOp_SegTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_SegTok
ruleQualOp_SegTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_SegTokAccess().getQualOp_SegTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_SegTokAccess().getSegTokParserRuleCall_1()); 
    }
ruleSegTok
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_SegTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_SegTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_SegTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_PlusTok
entryRuleQualOp_PlusTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_PlusTokRule()); }
	 iv_ruleQualOp_PlusTok=ruleQualOp_PlusTok 
	 { $current=$iv_ruleQualOp_PlusTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PlusTok
ruleQualOp_PlusTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_PlusTokAccess().getQualOp_PlusTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_PlusTokAccess().getPlusTokParserRuleCall_1()); 
    }
rulePlusTok
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_PlusTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_PlusTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_PlusTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_QuotientTok
entryRuleQualOp_QuotientTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_QuotientTokRule()); }
	 iv_ruleQualOp_QuotientTok=ruleQualOp_QuotientTok 
	 { $current=$iv_ruleQualOp_QuotientTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_QuotientTok
ruleQualOp_QuotientTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_QuotientTokAccess().getQualOp_QuotientTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_QuotientTokAccess().getQuotientTokParserRuleCall_1()); 
    }
ruleQuotientTok
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_QuotientTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_QuotientTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_QuotientTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_TimesTok
entryRuleQualOp_TimesTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_TimesTokRule()); }
	 iv_ruleQualOp_TimesTok=ruleQualOp_TimesTok 
	 { $current=$iv_ruleQualOp_TimesTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_TimesTok
ruleQualOp_TimesTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_TimesTokAccess().getQualOp_TimesTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_TimesTokAccess().getTimesTokParserRuleCall_1()); 
    }
ruleTimesTok
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_TimesTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_TimesTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_TimesTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_PowerTok
entryRuleQualOp_PowerTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_PowerTokRule()); }
	 iv_ruleQualOp_PowerTok=ruleQualOp_PowerTok 
	 { $current=$iv_ruleQualOp_PowerTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PowerTok
ruleQualOp_PowerTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualOp_PowerTokAccess().getQualOp_PowerTokAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getQualOp_PowerTokAccess().getPowerTokParserRuleCall_1()); 
    }
rulePowerTok
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_PowerTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOp_PowerTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); 
	    }
		lv_oqt_3_0=ruleOpQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOp_PowerTokRule());
	        }
       		set(
       			$current, 
       			"oqt",
        		lv_oqt_3_0, 
        		"OpQualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePreDocument
entryRulePreDocument returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreDocumentRule()); } 
	 iv_rulePreDocument=rulePreDocument 
	 { $current=$iv_rulePreDocument.current.getText(); }  
	 EOF 
;

// Rule PreDocument
rulePreDocument returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TK_PREDOC_0=RULE_TK_PREDOC    {
		$current.merge(this_TK_PREDOC_0);
    }

    { 
    newLeafNode(this_TK_PREDOC_0, grammarAccess.getPreDocumentAccess().getTK_PREDOCTerminalRuleCall()); 
    }
)*
    ;





// Entry rule entryRulePostDocument
entryRulePostDocument returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostDocumentRule()); } 
	 iv_rulePostDocument=rulePostDocument 
	 { $current=$iv_rulePostDocument.current.getText(); }  
	 EOF 
;

// Rule PostDocument
rulePostDocument returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TK_POSTDOC_0=RULE_TK_POSTDOC    {
		$current.merge(this_TK_POSTDOC_0);
    }

    { 
    newLeafNode(this_TK_POSTDOC_0, grammarAccess.getPostDocumentAccess().getTK_POSTDOCTerminalRuleCall()); 
    }
)*
    ;





// Entry rule entryRuleenlist1_CommaItem_Comma_AB
entryRuleenlist1_CommaItem_Comma_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_CommaItem_Comma_ABRule()); }
	 iv_ruleenlist1_CommaItem_Comma_AB=ruleenlist1_CommaItem_Comma_AB 
	 { $current=$iv_ruleenlist1_CommaItem_Comma_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_CommaItem_Comma_AB
ruleenlist1_CommaItem_Comma_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_CommaItem_Comma_ABAccess().getEnlister1_CommaItem_CommaParserRuleCall()); 
    }
    this_enlister1_CommaItem_Comma_0=ruleenlister1_CommaItem_Comma
    { 
        $current = $this_enlister1_CommaItem_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1_Infixed_Comma_AB
entryRuleenlist1_Infixed_Comma_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_Infixed_Comma_ABRule()); }
	 iv_ruleenlist1_Infixed_Comma_AB=ruleenlist1_Infixed_Comma_AB 
	 { $current=$iv_ruleenlist1_Infixed_Comma_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_Infixed_Comma_AB
ruleenlist1_Infixed_Comma_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_Infixed_Comma_ABAccess().getEnlister1_Infixed_CommaParserRuleCall()); 
    }
    this_enlister1_Infixed_Comma_0=ruleenlister1_Infixed_Comma
    { 
        $current = $this_enlister1_Infixed_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1_InfixedExpr_Comma_AB
entryRuleenlist1_InfixedExpr_Comma_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_InfixedExpr_Comma_ABRule()); }
	 iv_ruleenlist1_InfixedExpr_Comma_AB=ruleenlist1_InfixedExpr_Comma_AB 
	 { $current=$iv_ruleenlist1_InfixedExpr_Comma_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_InfixedExpr_Comma_AB
ruleenlist1_InfixedExpr_Comma_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_InfixedExpr_Comma_ABAccess().getEnlister1_InfixedExpr_CommaParserRuleCall()); 
    }
    this_enlister1_InfixedExpr_Comma_0=ruleenlister1_InfixedExpr_Comma
    { 
        $current = $this_enlister1_InfixedExpr_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_CommaItem_Comma
entryRuleenlister1_CommaItem_Comma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaRule()); }
	 iv_ruleenlister1_CommaItem_Comma=ruleenlister1_CommaItem_Comma 
	 { $current=$iv_ruleenlister1_CommaItem_Comma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_CommaItem_Comma
ruleenlister1_CommaItem_Comma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCommaItemParserRuleCall_0()); 
    }
    this_CommaItem_0=ruleCommaItem
    { 
        $current = $this_CommaItem_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_CommaItem_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiCommaItemParserRuleCall_1_1_0()); 
	    }
		lv_ci_2_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1_CommaItem_CommaRule());
	        }
       		add(
       			$current, 
       			"ci",
        		lv_ci_2_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_Infixed_Comma
entryRuleenlister1_Infixed_Comma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaRule()); }
	 iv_ruleenlister1_Infixed_Comma=ruleenlister1_Infixed_Comma 
	 { $current=$iv_ruleenlister1_Infixed_Comma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_Infixed_Comma
ruleenlister1_Infixed_Comma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaAccess().getInfixedParserRuleCall_0()); 
    }
    this_Infixed_0=ruleInfixed
    { 
        $current = $this_Infixed_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_Infixed_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaAccess().getI2InfixedParserRuleCall_1_1_0()); 
	    }
		lv_i2_2_0=ruleInfixed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1_Infixed_CommaRule());
	        }
       		add(
       			$current, 
       			"i2",
        		lv_i2_2_0, 
        		"Infixed");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_InfixedExpr_Comma
entryRuleenlister1_InfixedExpr_Comma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaRule()); }
	 iv_ruleenlister1_InfixedExpr_Comma=ruleenlister1_InfixedExpr_Comma 
	 { $current=$iv_ruleenlister1_InfixedExpr_Comma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_InfixedExpr_Comma
ruleenlister1_InfixedExpr_Comma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getInfixedExprParserRuleCall_0()); 
    }
    this_InfixedExpr_0=ruleInfixedExpr
    { 
        $current = $this_InfixedExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getIeInfixedExprParserRuleCall_1_1_0()); 
	    }
		lv_ie_2_0=ruleInfixedExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1_InfixedExpr_CommaRule());
	        }
       		add(
       			$current, 
       			"ie",
        		lv_ie_2_0, 
        		"InfixedExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1a_Labeled_Semicolon_AB
entryRuleenlist1a_Labeled_Semicolon_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1a_Labeled_Semicolon_ABRule()); }
	 iv_ruleenlist1a_Labeled_Semicolon_AB=ruleenlist1a_Labeled_Semicolon_AB 
	 { $current=$iv_ruleenlist1a_Labeled_Semicolon_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1a_Labeled_Semicolon_AB
ruleenlist1a_Labeled_Semicolon_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1a_Labeled_Semicolon_ABAccess().getEnlister1a_Labeled_SemicolonParserRuleCall()); 
    }
    this_enlister1a_Labeled_Semicolon_0=ruleenlister1a_Labeled_Semicolon
    { 
        $current = $this_enlister1a_Labeled_Semicolon_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1a_Labeled_Semicolon
entryRuleenlister1a_Labeled_Semicolon returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonRule()); }
	 iv_ruleenlister1a_Labeled_Semicolon=ruleenlister1a_Labeled_Semicolon 
	 { $current=$iv_ruleenlister1a_Labeled_Semicolon.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1a_Labeled_Semicolon
ruleenlister1a_Labeled_Semicolon returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_0_0()); 
	    }
		lv_statemnts_0_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1a_Labeled_SemicolonRule());
	        }
       		add(
       			$current, 
       			"statemnts",
        		lv_statemnts_0_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_KW_SEMICOLON_1=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_1, grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_1_1_0()); 
	    }
		lv_statemnts_2_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1a_Labeled_SemicolonRule());
	        }
       		add(
       			$current, 
       			"statemnts",
        		lv_statemnts_2_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
))(this_KW_SEMICOLON_3=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_3, grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_2()); 
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCurly_Labeled
entryRuleCurly_Labeled returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCurly_LabeledRule()); }
	 iv_ruleCurly_Labeled=ruleCurly_Labeled 
	 { $current=$iv_ruleCurly_Labeled.current; } 
	 EOF 
;

// Rule Curly_Labeled
ruleCurly_Labeled returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_KW_OCURLY_0=RULE_KW_OCURLY
    { 
    newLeafNode(this_KW_OCURLY_0, grammarAccess.getCurly_LabeledAccess().getKW_OCURLYTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCurly_LabeledAccess().getCurlyContents_LabeledParserRuleCall_1()); 
    }
    this_CurlyContents_Labeled_1=ruleCurlyContents_Labeled
    { 
        $current = $this_CurlyContents_Labeled_1.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_CCURLY_2=RULE_KW_CCURLY
    { 
    newLeafNode(this_KW_CCURLY_2, grammarAccess.getCurly_LabeledAccess().getKW_CCURLYTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleCurlyContents_Labeled
entryRuleCurlyContents_Labeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getCurlyContents_LabeledRule()); }
	 iv_ruleCurlyContents_Labeled=ruleCurlyContents_Labeled 
	 { $current=$iv_ruleCurlyContents_Labeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContents_Labeled
ruleCurlyContents_Labeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCurlyContents_LabeledAccess().getCurlyContentsList_LabeledParserRuleCall()); 
    }
    this_CurlyContentsList_Labeled_0=ruleCurlyContentsList_Labeled
    { 
        $current = $this_CurlyContentsList_Labeled_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCurlyContentsList_Labeled
entryRuleCurlyContentsList_Labeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getCurlyContentsList_LabeledRule()); }
	 iv_ruleCurlyContentsList_Labeled=ruleCurlyContentsList_Labeled 
	 { $current=$iv_ruleCurlyContentsList_Labeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContentsList_Labeled
ruleCurlyContentsList_Labeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_0_0()); 
	    }
		lv_statemts_0_0=ruleCurlyContentB_Labeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentsList_LabeledRule());
	        }
       		add(
       			$current, 
       			"statemts",
        		lv_statemts_0_0, 
        		"CurlyContentB_Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_KW_SEMICOLON_1=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_1, grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_1_1_0()); 
	    }
		lv_statemts_2_0=ruleCurlyContentB_Labeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentsList_LabeledRule());
	        }
       		add(
       			$current, 
       			"statemts",
        		lv_statemts_2_0, 
        		"CurlyContentB_Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_KW_SEMICOLON_3=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_3, grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_2()); 
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCurlyContentB_Labeled
entryRuleCurlyContentB_Labeled returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCurlyContentB_LabeledRule()); }
	 iv_ruleCurlyContentB_Labeled=ruleCurlyContentB_Labeled 
	 { $current=$iv_ruleCurlyContentB_Labeled.current; } 
	 EOF 
;

// Rule CurlyContentB_Labeled
ruleCurlyContentB_Labeled returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentB_LabeledAccess().getPredPreDocumentParserRuleCall_0_0()); 
	    }
		lv_pred_0_0=rulePreDocument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentB_LabeledRule());
	        }
       		set(
       			$current, 
       			"pred",
        		lv_pred_0_0, 
        		"PreDocument");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentB_LabeledAccess().getLLabeledParserRuleCall_1_0()); 
	    }
		lv_l_1_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentB_LabeledRule());
	        }
       		set(
       			$current, 
       			"l",
        		lv_l_1_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentB_LabeledAccess().getPdPostDocumentParserRuleCall_2_0()); 
	    }
		lv_pd_2_0=rulePostDocument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentB_LabeledRule());
	        }
       		set(
       			$current, 
       			"pd",
        		lv_pd_2_0, 
        		"PostDocument");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





RULE_TK_ID : ('a'..'z'|'A'..'Z'|'_' .) ('a'..'z'|'A'..'Z'|'_' .|'0'..'9')* '!'? '?'?;

RULE_WS : (' '|'\t')+;

RULE_KW_NEWLINE : ('\r'|'\n');

RULE_TK_PREDOC : '--' ~(('\n'|'\r'))*;

RULE_TK_POSTDOC : '++' ~(('\n'|'\r'))*;

RULE_TK_STRING : '"' ~('"')* '"';

RULE_TK_INT : ('0'..'9')+;

RULE_KW_QUOTE : '\'';

RULE_KW_OPAREN : '(';

RULE_KW_CPAREN : ')';

RULE_KW_OCURLY : '{';

RULE_KW_CCURLY : '}';

RULE_KW_OBRACK : '[';

RULE_KW_CBRACK : ']';

RULE_KW_2LT : '<<';

RULE_KW_2GT : '>>';

RULE_KW_MARROW : '==>';

RULE_KW_BAR : '|';

RULE_KW_DOT : '.';

RULE_KW_2COLON : '::';

RULE_KW_COLONSTAR : ':*';

RULE_KW_COLON : ':';

RULE_KW_AT : '@';

RULE_KW_COMMA : ',';

RULE_KW_SEMICOLON : ';';

RULE_KW_2STAR : '**';

RULE_KW_STAR : '*';

RULE_KW_PLUS : '+';

RULE_KW_MINUS : '-';

RULE_KW_PLUSMINUS : '+-';

RULE_KW_LT : '<';

RULE_KW_GT : '>';

RULE_KW_LE : '<=';

RULE_KW_GE : '>=';

RULE_KW_EQ : '=';

RULE_KW_TILDEE : '~=';

RULE_KW_HATE : '^=';

RULE_KW_TILDE : '~';

RULE_KW_HAT : '^';

RULE_KW_2DOT : '..';

RULE_KW_SHARP : '#';

RULE_KW_AMPERSAND : '&';

RULE_KW_DOLLAR : '$';

RULE_KW_SLASH : '/';

RULE_KW_BACKSLASH : '\\';

RULE_KW_WEDGE : '/\\';

RULE_KW_VEE : '\\/';

RULE_KW_IMPLIES : '=>';

RULE_KW_ASSIGN : ':=';

RULE_KW_2EQ : '==';

RULE_KW_RARROW : '->';

RULE_KW_LARROW : '<-';

RULE_KW_MAPSTO : '+->';

RULE_KW_MAPSTOSTAR : '+->*';

RULE_KW_MAPSTAR : '->*';

RULE_ANY_OTHER : .;


