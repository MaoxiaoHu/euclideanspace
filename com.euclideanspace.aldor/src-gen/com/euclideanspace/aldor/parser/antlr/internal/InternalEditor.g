/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.aldor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.aldor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.aldor.services.EditorGrammarAccess;

}

@parser::members {

 	private EditorGrammarAccess grammarAccess;
 	
    public InternalEditorParser(TokenStream input, EditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getModelAccess().getCurlyContents_LabeledParserRuleCall()); 
    }
    this_CurlyContents_Labeled_0=ruleCurlyContents_Labeled
    { 
        $current = $this_CurlyContents_Labeled_0.current; 
        afterParserOrEnumRuleCall();
    }

;







// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getEnlist1a_Labeled_Semicolon_ABParserRuleCall()); 
    }
    this_enlist1a_Labeled_Semicolon_AB_0=ruleenlist1a_Labeled_Semicolon_AB
    { 
        $current = $this_enlist1a_Labeled_Semicolon_AB_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleLabeled
entryRuleLabeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLabeledRule()); }
	 iv_ruleLabeled=ruleLabeled 
	 { $current=$iv_ruleLabeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Labeled
ruleLabeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getCommaParserRuleCall_0()); 
    }
    this_Comma_0=ruleComma
    { 
        $current = $this_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getDeclarationParserRuleCall_1()); 
    }
    this_Declaration_1=ruleDeclaration
    { 
        $current = $this_Declaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_KW_AT_2=RULE_KW_AT
    { 
    newLeafNode(this_KW_AT_2, grammarAccess.getLabeledAccess().getKW_ATTerminalRuleCall_2_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getLabeledAccess().getAtomParserRuleCall_2_1()); 
    }
    this_Atom_3=ruleAtom
    { 
        $current = $this_Atom_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledAccess().getLabLabeledParserRuleCall_2_2_0()); 
	    }
		lv_lab_4_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledRule());
	        }
       		set(
       			$current, 
       			"lab",
        		lv_lab_4_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='macro' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclarationAccess().getMacroKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getMacroBodyParserRuleCall_0_1()); 
    }
    this_MacroBody_1=ruleMacroBody
    { 
        $current = $this_MacroBody_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='extend' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getExtendKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_1_1()); 
    }
    this_Sig_3=ruleSig
    { 
        $current = $this_Sig_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_4='local' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getLocalKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_2_1()); 
    }
    this_Sig_5=ruleSig
    { 
        $current = $this_Sig_5.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_6='free' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeclarationAccess().getFreeKeyword_3_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_3_1()); 
    }
    this_Sig_7=ruleSig
    { 
        $current = $this_Sig_7.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_8='fluid' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeclarationAccess().getFluidKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_4_1()); 
    }
    this_Sig_9=ruleSig
    { 
        $current = $this_Sig_9.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_10='default' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeclarationAccess().getDefaultKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_5_1()); 
    }
    this_Sig_11=ruleSig
    { 
        $current = $this_Sig_11.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_12='define' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDeclarationAccess().getDefineKeyword_6_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_6_1()); 
    }
    this_Sig_13=ruleSig
    { 
        $current = $this_Sig_13.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_14='fix' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDeclarationAccess().getFixKeyword_7_0());
    }

    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_7_1()); 
    }
    this_Sig_15=ruleSig
    { 
        $current = $this_Sig_15.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_16='inline' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeclarationAccess().getInlineKeyword_8_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_8_1()); 
    }
    this_Sig_17=ruleSig
    { 
        $current = $this_Sig_17.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_8_2_0()); 
	    }
		lv_fp_18_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_18_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_19='import' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDeclarationAccess().getImportKeyword_9_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getSigParserRuleCall_9_1()); 
    }
    this_Sig_20=ruleSig
    { 
        $current = $this_Sig_20.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_9_2_0()); 
	    }
		lv_fp_21_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_21_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |
    { 
        newCompositeNode(grammarAccess.getDeclarationAccess().getExportDeclParserRuleCall_10()); 
    }
    this_ExportDecl_22=ruleExportDecl
    { 
        $current = $this_ExportDecl_22.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExportDecl
entryRuleExportDecl returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getExportDeclRule()); }
	 iv_ruleExportDecl=ruleExportDecl 
	 { $current=$iv_ruleExportDecl.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExportDecl
ruleExportDecl returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='export' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExportDeclAccess().getExportKeyword_0_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getExportDeclAccess().getSigParserRuleCall_0_1()); 
    }
    this_Sig_1=ruleSig
    { 
        $current = $this_Sig_1.current; 
        afterParserOrEnumRuleCall();
    }
)?)
    |(((	'export' 
(	ruleSig)?(
(
ruleToPart
)
)))=>(	otherlv_2='export' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExportDeclAccess().getExportKeyword_1_0_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getExportDeclAccess().getSigParserRuleCall_1_0_1()); 
    }
    this_Sig_3=ruleSig
    { 
        $current = $this_Sig_3.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getTpToPartParserRuleCall_1_0_2_0()); 
	    }
		lv_tp_4_0=ruleToPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"tp",
        		lv_tp_4_0, 
        		"ToPart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((	'export' 
(	ruleSig)?(
(
ruleFromPart
)
)))=>(	otherlv_5='export' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExportDeclAccess().getExportKeyword_2_0_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getExportDeclAccess().getSigParserRuleCall_2_0_1()); 
    }
    this_Sig_6=ruleSig
    { 
        $current = $this_Sig_6.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExportDeclAccess().getFpFromPartParserRuleCall_2_0_2_0()); 
	    }
		lv_fp_7_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportDeclRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_7_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleToPart
entryRuleToPart returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getToPartRule()); } 
	 iv_ruleToPart=ruleToPart 
	 { $current=$iv_ruleToPart.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ToPart
ruleToPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
	kw='to' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getToPartAccess().getToKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getToPartAccess().getInfixedParserRuleCall_1()); 
    }
    this_Infixed_1=ruleInfixed    {
		$current.merge(this_Infixed_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFromPart
entryRuleFromPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getFromPartRule()); }
	 iv_ruleFromPart=ruleFromPart 
	 { $current=$iv_ruleFromPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FromPart
ruleFromPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(	otherlv_0='from' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFromPartAccess().getFromKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getFromPartAccess().getEnlist1_Infixed_Comma_ABParserRuleCall_1()); 
    }
    this_enlist1_Infixed_Comma_AB_1=ruleenlist1_Infixed_Comma_AB
    { 
        $current = $this_enlist1_Infixed_Comma_AB_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMacroBody
entryRuleMacroBody returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getMacroBodyRule()); }
	 iv_ruleMacroBody=ruleMacroBody 
	 { $current=$iv_ruleMacroBody.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MacroBody
ruleMacroBody returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_0()); 
    }
    this_Sig_0=ruleSig
    { 
        $current = $this_Sig_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getExportDeclParserRuleCall_1()); 
    }
    this_ExportDecl_1=ruleExportDecl
    { 
        $current = $this_ExportDecl_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_2='import' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMacroBodyAccess().getImportKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_2_1()); 
    }
    this_Sig_3=ruleSig
    { 
        $current = $this_Sig_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMacroBodyAccess().getFpFromPartParserRuleCall_2_2_0()); 
	    }
		lv_fp_4_0=ruleFromPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMacroBodyRule());
	        }
       		set(
       			$current, 
       			"fp",
        		lv_fp_4_0, 
        		"FromPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSig
entryRuleSig returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getSigRule()); }
	 iv_ruleSig=ruleSig 
	 { $current=$iv_ruleSig.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Sig
ruleSig returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSigAccess().getDeclBindingParserRuleCall_0()); 
    }
    this_DeclBinding_0=ruleDeclBinding
    { 
        $current = $this_DeclBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclPart
entryRuleDeclPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclPartRule()); }
	 iv_ruleDeclPart=ruleDeclPart 
	 { $current=$iv_ruleDeclPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclPart
ruleDeclPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((this_KW_COLON_0=RULE_KW_COLON
    { 
    newLeafNode(this_KW_COLON_0, grammarAccess.getDeclPartAccess().getKW_COLONTerminalRuleCall_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_0_1()); 
    }
    this_Type_1=ruleType
    { 
        $current = $this_Type_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(this_KW_COLONSTAR_2=RULE_KW_COLONSTAR
    { 
    newLeafNode(this_KW_COLONSTAR_2, grammarAccess.getDeclPartAccess().getKW_COLONSTARTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_1_1()); 
    }
    this_Type_3=ruleType
    { 
        $current = $this_Type_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleComma
entryRuleComma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCommaRule()); }
	 iv_ruleComma=ruleComma 
	 { $current=$iv_ruleComma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Comma
ruleComma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCommaAccess().getEnlist1_CommaItem_Comma_ABParserRuleCall()); 
    }
    this_enlist1_CommaItem_Comma_AB_0=ruleenlist1_CommaItem_Comma_AB
    { 
        $current = $this_enlist1_CommaItem_Comma_AB_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCommaItem
entryRuleCommaItem returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCommaItemRule()); }
	 iv_ruleCommaItem=ruleCommaItem 
	 { $current=$iv_ruleCommaItem.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CommaItem
ruleCommaItem returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCommaItemAccess().getBinding_AnyStatementParserRuleCall_0()); 
    }
    this_Binding_AnyStatement_0=ruleBinding_AnyStatement
    { 
        $current = $this_Binding_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }
(((	'where' 
(
(
ruleCommaItem
)
)))=>(	otherlv_1='where' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommaItemAccess().getWhereKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommaItemAccess().getCiCommaItemParserRuleCall_1_0_1_0()); 
	    }
		lv_ci_2_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommaItemRule());
	        }
       		set(
       			$current, 
       			"ci",
        		lv_ci_2_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclBinding
entryRuleDeclBinding returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclBindingRule()); }
	 iv_ruleDeclBinding=ruleDeclBinding 
	 { $current=$iv_ruleDeclBinding.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclBinding
ruleDeclBinding returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDeclBindingAccess().getBindingR_InfixedExprsDecl_AnyStatementParserRuleCall()); 
    }
    this_BindingR_InfixedExprsDecl_AnyStatement_0=ruleBindingR_InfixedExprsDecl_AnyStatement
    { 
        $current = $this_BindingR_InfixedExprsDecl_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExprsDecl
entryRuleInfixedExprsDecl returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprsDeclRule()); }
	 iv_ruleInfixedExprsDecl=ruleInfixedExprsDecl 
	 { $current=$iv_ruleInfixedExprsDecl.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprsDecl
ruleInfixedExprsDecl returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInfixedExprsDeclAccess().getInfixedExprsParserRuleCall_0()); 
    }
ruleInfixedExprs
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfixedExprsDeclAccess().getDpDeclPartParserRuleCall_1_0()); 
	    }
		lv_dp_1_0=ruleDeclPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfixedExprsDeclRule());
	        }
       		add(
       			$current, 
       			"dp",
        		lv_dp_1_0, 
        		"DeclPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExprs
entryRuleInfixedExprs returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprsRule()); } 
	 iv_ruleInfixedExprs=ruleInfixedExprs 
	 { $current=$iv_ruleInfixedExprs.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprs
ruleInfixedExprs returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getInfixedExprsAccess().getEnlist1_InfixedExpr_Comma_ABParserRuleCall()); 
    }
    this_enlist1_InfixedExpr_Comma_AB_0=ruleenlist1_InfixedExpr_Comma_AB    {
		$current.merge(this_enlist1_InfixedExpr_Comma_AB_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_AnyStatement
entryRuleBinding_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_AnyStatementRule()); }
	 iv_ruleBinding_AnyStatement=ruleBinding_AnyStatement 
	 { $current=$iv_ruleBinding_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_AnyStatement
ruleBinding_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_AnyStatementAccess().getBindingL_Infixed_AnyStatementParserRuleCall()); 
    }
    this_BindingL_Infixed_AnyStatement_0=ruleBindingL_Infixed_AnyStatement
    { 
        $current = $this_BindingL_Infixed_AnyStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_BalStatement
entryRuleBinding_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_BalStatementRule()); }
	 iv_ruleBinding_BalStatement=ruleBinding_BalStatement 
	 { $current=$iv_ruleBinding_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_BalStatement
ruleBinding_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_BalStatementAccess().getBindingL_Infixed_BalStatementParserRuleCall()); 
    }
    this_BindingL_Infixed_BalStatement_0=ruleBindingL_Infixed_BalStatement
    { 
        $current = $this_BindingL_Infixed_BalStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBinding_Collection
entryRuleBinding_Collection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBinding_CollectionRule()); }
	 iv_ruleBinding_Collection=ruleBinding_Collection 
	 { $current=$iv_ruleBinding_Collection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_Collection
ruleBinding_Collection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBinding_CollectionAccess().getBindingL_Infixed_CollectionParserRuleCall()); 
    }
    this_BindingL_Infixed_Collection_0=ruleBindingL_Infixed_Collection
    { 
        $current = $this_BindingL_Infixed_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_AnyStatement
entryRuleBindingL_Infixed_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementRule()); }
	 iv_ruleBindingL_Infixed_AnyStatement=ruleBindingL_Infixed_AnyStatement 
	 { $current=$iv_ruleBindingL_Infixed_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_AnyStatement
ruleBindingL_Infixed_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getAnyStatementParserRuleCall_0()); 
    }
ruleAnyStatement
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_1_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getAssignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_1_2_0()); 
	    }
		lv_bia_3_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_3_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_2_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_2EQTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_2_2_0()); 
	    }
		lv_bia_6_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_6_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_3_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MARROWTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_3_2_0()); 
	    }
		lv_bia_9_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_9_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_4_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_4_2_0()); 
	    }
		lv_bia_12_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_12_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getInfixedParserRuleCall_5_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBiaBindingL_Infixed_AnyStatementParserRuleCall_5_2_0()); 
	    }
		lv_bia_15_0=ruleBindingL_Infixed_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bia",
        		lv_bia_15_0, 
        		"BindingL_Infixed_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_BalStatement
entryRuleBindingL_Infixed_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementRule()); }
	 iv_ruleBindingL_Infixed_BalStatement=ruleBindingL_Infixed_BalStatement 
	 { $current=$iv_ruleBindingL_Infixed_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_BalStatement
ruleBindingL_Infixed_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBalStatementParserRuleCall_0()); 
    }
ruleBalStatement
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_1_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_BalStatementAccess().getAssignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_1_2_0()); 
	    }
		lv_bib_3_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_3_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_2_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_2EQTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_2_2_0()); 
	    }
		lv_bib_6_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_6_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_3_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MARROWTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_3_2_0()); 
	    }
		lv_bib_9_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_9_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_4_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_4_2_0()); 
	    }
		lv_bib_12_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_12_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_5_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_5_2_0()); 
	    }
		lv_bib_15_0=ruleBindingL_Infixed_BalStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_BalStatementRule());
	        }
       		set(
       			$current, 
       			"bib",
        		lv_bib_15_0, 
        		"BindingL_Infixed_BalStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingL_Infixed_Collection
entryRuleBindingL_Infixed_Collection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionRule()); }
	 iv_ruleBindingL_Infixed_Collection=ruleBindingL_Infixed_Collection 
	 { $current=$iv_ruleBindingL_Infixed_Collection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_Collection
ruleBindingL_Infixed_Collection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getCollectionParserRuleCall_0()); 
    }
    this_Collection_0=ruleCollection
    { 
        $current = $this_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_1_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingL_Infixed_CollectionAccess().getAssignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_1_2_0()); 
	    }
		lv_bic_3_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_3_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_2_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_2EQTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_2_2_0()); 
	    }
		lv_bic_6_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_6_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_3_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MARROWTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_3_2_0()); 
	    }
		lv_bic_9_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_9_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_4_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_4_2_0()); 
	    }
		lv_bic_12_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_12_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_5_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOSTARTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_5_2_0()); 
	    }
		lv_bic_15_0=ruleBindingL_Infixed_Collection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingL_Infixed_CollectionRule());
	        }
       		set(
       			$current, 
       			"bic",
        		lv_bic_15_0, 
        		"BindingL_Infixed_Collection");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBindingR_InfixedExprsDecl_AnyStatement
entryRuleBindingR_InfixedExprsDecl_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule()); }
	 iv_ruleBindingR_InfixedExprsDecl_AnyStatement=ruleBindingR_InfixedExprsDecl_AnyStatement 
	 { $current=$iv_ruleBindingR_InfixedExprsDecl_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingR_InfixedExprsDecl_AnyStatement
ruleBindingR_InfixedExprsDecl_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_0()); 
    }
    this_InfixedExprsDecl_0=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(((	ruleInfixedExprsDecl)=>
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_1_0()); 
    }
    this_InfixedExprsDecl_1=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_2='assign' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAssignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_2_0()); 
	    }
		lv_bas_3_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_3_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleInfixedExprsDecl)=>
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_2_0()); 
    }
    this_InfixedExprsDecl_4=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
)this_KW_2EQ_5=RULE_KW_2EQ
    { 
    newLeafNode(this_KW_2EQ_5, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_2EQTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_2_2_0()); 
	    }
		lv_bas_6_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_6_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleInfixedExprsDecl)=>
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_3_0()); 
    }
    this_InfixedExprsDecl_7=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_7.current; 
        afterParserOrEnumRuleCall();
    }
)this_KW_MARROW_8=RULE_KW_MARROW
    { 
    newLeafNode(this_KW_MARROW_8, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MARROWTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_3_2_0()); 
	    }
		lv_bas_9_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_9_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleInfixedExprsDecl)=>
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_4_0()); 
    }
    this_InfixedExprsDecl_10=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_10.current; 
        afterParserOrEnumRuleCall();
    }
)this_KW_MAPSTO_11=RULE_KW_MAPSTO
    { 
    newLeafNode(this_KW_MAPSTO_11, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_4_2_0()); 
	    }
		lv_bas_12_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_12_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	ruleInfixedExprsDecl)=>
    { 
        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_5_0()); 
    }
    this_InfixedExprsDecl_13=ruleInfixedExprsDecl
    { 
        $current = $this_InfixedExprsDecl_13.current; 
        afterParserOrEnumRuleCall();
    }
)this_KW_MAPSTOSTAR_14=RULE_KW_MAPSTOSTAR
    { 
    newLeafNode(this_KW_MAPSTOSTAR_14, grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_5_2_0()); 
	    }
		lv_bas_15_0=ruleBinding_AnyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule());
	        }
       		set(
       			$current, 
       			"bas",
        		lv_bas_15_0, 
        		"Binding_AnyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAnyStatement
entryRuleAnyStatement returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAnyStatementRule()); } 
	 iv_ruleAnyStatement=ruleAnyStatement 
	 { $current=$iv_ruleAnyStatement.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AnyStatement
ruleAnyStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp19' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyStatementAccess().getTemp19Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBalStatement
entryRuleBalStatement returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBalStatementRule()); } 
	 iv_ruleBalStatement=ruleBalStatement 
	 { $current=$iv_ruleBalStatement.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BalStatement
ruleBalStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp20' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBalStatementAccess().getTemp20Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}









// Entry rule entryRuleGenBound
entryRuleGenBound returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getGenBoundRule()); }
	 iv_ruleGenBound=ruleGenBound 
	 { $current=$iv_ruleGenBound.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule GenBound
ruleGenBound returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(	otherlv_0='to' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGenBoundAccess().getToKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getGenBoundAccess().getCommaItemParserRuleCall_1()); 
    }
    this_CommaItem_1=ruleCommaItem
    { 
        $current = $this_CommaItem_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGenBoundAccess().getOfKeyword_2());
    }
)?
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleButExpr
entryRuleButExpr returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getButExprRule()); }
	 iv_ruleButExpr=ruleButExpr 
	 { $current=$iv_ruleButExpr.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ButExpr
ruleButExpr returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getButExprAccess().getDbDeclBindingParserRuleCall_0_0()); 
	    }
		lv_db_0_0=ruleDeclBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButExprRule());
	        }
       		set(
       			$current, 
       			"db",
        		lv_db_0_0, 
        		"DeclBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='in' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getButExprAccess().getInKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButExprAccess().getCaCasesParserRuleCall_2_0()); 
	    }
		lv_ca_2_0=ruleCases		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButExprRule());
	        }
       		set(
       			$current, 
       			"ca",
        		lv_ca_2_0, 
        		"Cases");
	        afterParserOrEnumRuleCall();
	    }

)
))?
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCases
entryRuleCases returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCasesRule()); }
	 iv_ruleCases=ruleCases 
	 { $current=$iv_ruleCases.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Cases
ruleCases returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCasesAccess().getBinding_CollectionParserRuleCall()); 
    }
    this_Binding_Collection_0=ruleBinding_Collection
    { 
        $current = $this_Binding_Collection_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAlwaysPart_AnyStatement
entryRuleAlwaysPart_AnyStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementRule()); }
	 iv_ruleAlwaysPart_AnyStatement=ruleAlwaysPart_AnyStatement 
	 { $current=$iv_ruleAlwaysPart_AnyStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_AnyStatement
ruleAlwaysPart_AnyStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='always' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementAccess().getBinding_AnyStatementParserRuleCall_0_1()); 
    }
    this_Binding_AnyStatement_1=ruleBinding_AnyStatement
    { 
        $current = $this_Binding_AnyStatement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='finally' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlwaysPart_AnyStatementAccess().getFinallyKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getAlwaysPart_AnyStatementAccess().getBinding_AnyStatementParserRuleCall_1_1()); 
    }
    this_Binding_AnyStatement_3=ruleBinding_AnyStatement
    { 
        $current = $this_Binding_AnyStatement_3.current; 
        afterParserOrEnumRuleCall();
    }
))?
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAlwaysPart_BalStatement
entryRuleAlwaysPart_BalStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAlwaysPart_BalStatementRule()); }
	 iv_ruleAlwaysPart_BalStatement=ruleAlwaysPart_BalStatement 
	 { $current=$iv_ruleAlwaysPart_BalStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_BalStatement
ruleAlwaysPart_BalStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((	otherlv_0='always' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getAlwaysPart_BalStatementAccess().getBinding_BalStatementParserRuleCall_0_1()); 
    }
    this_Binding_BalStatement_1=ruleBinding_BalStatement
    { 
        $current = $this_Binding_BalStatement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='finally' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlwaysPart_BalStatementAccess().getFinallyKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getAlwaysPart_BalStatementAccess().getBinding_BalStatementParserRuleCall_1_1()); 
    }
    this_Binding_BalStatement_3=ruleBinding_BalStatement
    { 
        $current = $this_Binding_BalStatement_3.current; 
        afterParserOrEnumRuleCall();
    }
))?
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	 iv_ruleCollection=ruleCollection 
	 { $current=$iv_ruleCollection.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Collection
ruleCollection returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCollectionAccess().getInfixedParserRuleCall_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionAccess().getIIteratorsParserRuleCall_1_0()); 
	    }
		lv_i_1_0=ruleIterators		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionRule());
	        }
       		set(
       			$current, 
       			"i",
        		lv_i_1_0, 
        		"Iterators");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterators
entryRuleIterators returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIteratorsRule()); } 
	 iv_ruleIterators=ruleIterators 
	 { $current=$iv_ruleIterators.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators
ruleIterators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getIteratorsAccess().getIterators1ParserRuleCall()); 
    }
    this_Iterators1_0=ruleIterators1    {
		$current.merge(this_Iterators1_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterators1
entryRuleIterators1 returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIterators1Rule()); } 
	 iv_ruleIterators1=ruleIterators1 
	 { $current=$iv_ruleIterators1.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators1
ruleIterators1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp27' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIterators1Access().getTemp27Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleForLhs
entryRuleForLhs returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getForLhsRule()); } 
	 iv_ruleForLhs=ruleForLhs 
	 { $current=$iv_ruleForLhs.current.getText(); }  
	 EOF 
;

// Rule ForLhs
ruleForLhs returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_0()); 
    }
    this_Infixed_0=ruleInfixed    {
		$current.merge(this_Infixed_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |(
	kw='free' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getForLhsAccess().getFreeKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_1_1()); 
    }
    this_Infixed_2=ruleInfixed    {
		$current.merge(this_Infixed_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
	kw='local' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getForLhsAccess().getLocalKeyword_2_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_2_1()); 
    }
    this_Infixed_4=ruleInfixed    {
		$current.merge(this_Infixed_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
	kw='fluid' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getForLhsAccess().getFluidKeyword_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_3_1()); 
    }
    this_Infixed_6=ruleInfixed    {
		$current.merge(this_Infixed_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleSuchthatPart
entryRuleSuchthatPart returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getSuchthatPartRule()); } 
	 iv_ruleSuchthatPart=ruleSuchthatPart 
	 { $current=$iv_ruleSuchthatPart.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SuchthatPart
ruleSuchthatPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
	kw='temp30' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSuchthatPartAccess().getTemp30Keyword_0()); 
    }
    this_KW_BAR_1=RULE_KW_BAR    {
		$current.merge(this_KW_BAR_1);
    }

    { 
    newLeafNode(this_KW_BAR_1, grammarAccess.getSuchthatPartAccess().getKW_BARTerminalRuleCall_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getSuchthatPartAccess().getInfixedParserRuleCall_2()); 
    }
    this_Infixed_2=ruleInfixed    {
		$current.merge(this_Infixed_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixed
entryRuleInfixed returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedRule()); } 
	 iv_ruleInfixed=ruleInfixed 
	 { $current=$iv_ruleInfixed.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Infixed
ruleInfixed returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp31' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInfixedAccess().getTemp31Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInfixedExpr
entryRuleInfixedExpr returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getInfixedExprRule()); } 
	 iv_ruleInfixedExpr=ruleInfixedExpr 
	 { $current=$iv_ruleInfixedExpr.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExpr
ruleInfixedExpr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInfixedExprAccess().getTemp32Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleE4
entryRuleE4 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE4Rule()); }
	 iv_ruleE4=ruleE4 
	 { $current=$iv_ruleE4.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E4
ruleE4 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getLeftE5ParserRuleCall_0_0_0()); 
	    }
		lv_left_0_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE4Access().getE4LeftAction_0_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=	'has' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getE4Access().getOpHasKeyword_0_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE4Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_0, "has");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getOp2RelationOpParserRuleCall_0_1_1_1_0()); 
	    }
		lv_op2_3_0=ruleRelationOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		add(
       			$current, 
       			"op2",
        		lv_op2_3_0, 
        		"RelationOp");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getRightE5ParserRuleCall_0_1_2_0()); 
	    }
		lv_right_4_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
    { 
        newCompositeNode(grammarAccess.getE4Access().getRelationOpParserRuleCall_1_0()); 
    }
ruleRelationOp
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getE4Access().getRightE5ParserRuleCall_1_1_0()); 
	    }
		lv_right_6_0=ruleE5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_6_0, 
        		"E5");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE5
entryRuleE5 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE5Rule()); }
	 iv_ruleE5=ruleE5 
	 { $current=$iv_ruleE5.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E5
ruleE5 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((((
(
ruleE6
)
)((
)(
(
ruleSegOp
)
)(
(
ruleE6
)
))*))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getLeftE6ParserRuleCall_0_0_0_0()); 
	    }
		lv_left_0_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE5Access().getE5LeftAction_0_0_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getOp5SegOpParserRuleCall_0_0_1_1_0()); 
	    }
		lv_op5_2_0=ruleSegOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		add(
       			$current, 
       			"op5",
        		lv_op5_2_0, 
        		"SegOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getRightE6ParserRuleCall_0_0_1_2_0()); 
	    }
		lv_right_3_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getLeftE6ParserRuleCall_1_0_0()); 
	    }
		lv_left_4_0=ruleE6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_4_0, 
        		"E6");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE5Access().getOp5SegOpParserRuleCall_1_1_0()); 
	    }
		lv_op5_5_0=ruleSegOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE5Rule());
	        }
       		add(
       			$current, 
       			"op5",
        		lv_op5_5_0, 
        		"SegOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE6
entryRuleE6 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE6Rule()); }
	 iv_ruleE6=ruleE6 
	 { $current=$iv_ruleE6.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E6
ruleE6 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getLeftE7ParserRuleCall_0_0_0()); 
	    }
		lv_left_0_0=ruleE7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E7");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE6Access().getE6LeftAction_0_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getOp6PlusOpParserRuleCall_0_1_1_0()); 
	    }
		lv_op6_2_0=rulePlusOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		add(
       			$current, 
       			"op6",
        		lv_op6_2_0, 
        		"PlusOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getRightE7ParserRuleCall_0_1_2_0()); 
	    }
		lv_right_3_0=ruleE7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E7");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getOp6PlusOpParserRuleCall_1_0_0()); 
	    }
		lv_op6_4_0=rulePlusOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		add(
       			$current, 
       			"op6",
        		lv_op6_4_0, 
        		"PlusOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE6Access().getRightE7ParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleE7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE6Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"E7");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE7
entryRuleE7 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE7Rule()); }
	 iv_ruleE7=ruleE7 
	 { $current=$iv_ruleE7.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E7
ruleE7 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getLeftE8ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE8		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E8");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE7Access().getE7LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getOp7QuotientOpParserRuleCall_1_1_0()); 
	    }
		lv_op7_2_0=ruleQuotientOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		add(
       			$current, 
       			"op7",
        		lv_op7_2_0, 
        		"QuotientOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE7Access().getRightE8ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE8		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE7Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E8");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE8
entryRuleE8 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE8Rule()); }
	 iv_ruleE8=ruleE8 
	 { $current=$iv_ruleE8.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E8
ruleE8 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getLeftE9ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE9		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E9");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE8Access().getE8LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getOp8TimesOpParserRuleCall_1_1_0()); 
	    }
		lv_op8_2_0=ruleTimesOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		add(
       			$current, 
       			"op8",
        		lv_op8_2_0, 
        		"TimesOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE8Access().getRightE9ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE9		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE8Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E9");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE9
entryRuleE9 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE9Rule()); }
	 iv_ruleE9=ruleE9 
	 { $current=$iv_ruleE9.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E9
ruleE9 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getLeftE11_E12ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE11_E12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E11_E12");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE9Access().getE9LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getOp9PowerOpParserRuleCall_1_1_0()); 
	    }
		lv_op9_2_0=rulePowerOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		add(
       			$current, 
       			"op9",
        		lv_op9_2_0, 
        		"PowerOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE9Access().getRightE11_E12ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE11_E12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE9Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E11_E12");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE11_E12
entryRuleE11_E12 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE11_E12Rule()); }
	 iv_ruleE11_E12=ruleE11_E12 
	 { $current=$iv_ruleE11_E12.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E11_E12
ruleE11_E12 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE11_E12Access().getLeftE12ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_E12Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E12");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE11_E12Access().getE11_E12LeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_KW_2COLON
		{
			newLeafNode(lv_op_2_0, grammarAccess.getE11_E12Access().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_2COLON");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_KW_AT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getE11_E12Access().getOpKW_ATTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"KW_AT");
	    }

)
)
    |(
(
		lv_op_4_0=	'pretend' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE11_E12Rule());
	        }
       		addWithLastConsumed($current, "op", lv_op_4_0, "pretend");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getE11_E12Access().getRightE12ParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleE12		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE11_E12Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"E12");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTypeAccess().getE11_E12ParserRuleCall()); 
    }
    this_E11_E12_0=ruleE11_E12
    { 
        $current = $this_E11_E12_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE12
entryRuleE12 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE12Rule()); }
	 iv_ruleE12=ruleE12 
	 { $current=$iv_ruleE12.current; } 
	 EOF 
;

// Rule E12
ruleE12 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getLeftE13ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE13		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E13");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE12Access().getE12LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getOpArrowOpParserRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleArrowOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		add(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"ArrowOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE12Access().getRightE13ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleE13		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE12Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"E13");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleE13
entryRuleE13 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE13Rule()); }
	 iv_ruleE13=ruleE13 
	 { $current=$iv_ruleE13.current; } 
	 EOF 
;

// Rule E13
ruleE13 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getE13Access().getLeftE14ParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleE14		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE13Rule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"E14");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getE13Access().getE13LeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_KW_DOLLAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getE13Access().getOpKW_DOLLARTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE13Rule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_DOLLAR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getE13Access().getRightQualTailParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleQualTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getE13Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"QualTail");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleQualTail
entryRuleQualTail returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualTailRule()); } 
	 iv_ruleQualTail=ruleQualTail 
	 { $current=$iv_ruleQualTail.current.getText(); }  
	 EOF 
;

// Rule QualTail
ruleQualTail returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualTailAccess().getLeftJuxtaposedParserRuleCall_0()); 
    }
    this_LeftJuxtaposed_0=ruleLeftJuxtaposed    {
		$current.merge(this_LeftJuxtaposed_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |((( ruleLeftJuxtaposed)=>
    { 
        newCompositeNode(grammarAccess.getQualTailAccess().getLeftJuxtaposedParserRuleCall_1_0()); 
    }
    this_LeftJuxtaposed_1=ruleLeftJuxtaposed    {
		$current.merge(this_LeftJuxtaposed_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)    this_KW_DOLLAR_2=RULE_KW_DOLLAR    {
		$current.merge(this_KW_DOLLAR_2);
    }

    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualTailAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualTailAccess().getQualTailParserRuleCall_1_2()); 
    }
    this_QualTail_3=ruleQualTail    {
		$current.merge(this_QualTail_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleOpQualTail
entryRuleOpQualTail returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getOpQualTailRule()); }
	 iv_ruleOpQualTail=ruleOpQualTail 
	 { $current=$iv_ruleOpQualTail.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OpQualTail
ruleOpQualTail returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpQualTailAccess().getNameMoleculeParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpQualTailRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Molecule");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((((
(
ruleMolecule
)
)	RULE_KW_DOLLAR	ruleOpQualTail))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getOpQualTailAccess().getNameMoleculeParserRuleCall_1_0_0_0()); 
	    }
		lv_name_1_0=ruleMolecule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpQualTailRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Molecule");
	        afterParserOrEnumRuleCall();
	    }

)
)this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getOpQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getOpQualTailAccess().getOpQualTailParserRuleCall_1_0_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE14
entryRuleE14 returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE14Rule()); }
	 iv_ruleE14=ruleE14 
	 { $current=$iv_ruleE14.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E14
ruleE14 returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_0()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }

    |(((	ruleE15)=>
    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_1_0()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getE14Access().getWithKeyword_1_1());
    }

    { 
        newCompositeNode(grammarAccess.getE14Access().getDeclMoleculeParserRuleCall_1_2()); 
    }
    this_DeclMolecule_3=ruleDeclMolecule
    { 
        $current = $this_DeclMolecule_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(((	ruleE15)=>
    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_2_0()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_5='add' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getE14Access().getAddKeyword_2_1());
    }

    { 
        newCompositeNode(grammarAccess.getE14Access().getDeclMoleculeParserRuleCall_2_2()); 
    }
    this_DeclMolecule_6=ruleDeclMolecule
    { 
        $current = $this_DeclMolecule_6.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(((	ruleE15)=>
    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_3_0()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
)	otherlv_8='except' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getE14Access().getExceptKeyword_3_1());
    }

    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_3_2()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
)
    |(((	ruleE15)=>
    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_4_0()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
)	otherlv_11='throw' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getE14Access().getThrowKeyword_4_1());
    }

    { 
        newCompositeNode(grammarAccess.getE14Access().getE15ParserRuleCall_4_2()); 
    }
ruleE15
    { 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleE15
entryRuleE15 returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getE15Rule()); } 
	 iv_ruleE15=ruleE15 
	 { $current=$iv_ruleE15.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E15
ruleE15 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getE15Access().getApplicationParserRuleCall()); 
    }
    this_Application_0=ruleApplication    {
		$current.merge(this_Application_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleOp
entryRuleOp returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getOpRule()); }
	 iv_ruleOp=ruleOp 
	 { $current=$iv_ruleOp.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Op
ruleOp returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOpAccess().getArrowOpParserRuleCall_0()); 
    }
    this_ArrowOp_0=ruleArrowOp
    { 
        $current = $this_ArrowOp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getLatticeOpParserRuleCall_1()); 
    }
    this_LatticeOp_1=ruleLatticeOp
    { 
        $current = $this_LatticeOp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getRelationOpParserRuleCall_2()); 
    }
ruleRelationOp
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getSegOpParserRuleCall_3()); 
    }
    this_SegOp_3=ruleSegOp
    { 
        $current = $this_SegOp_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getPlusOpParserRuleCall_4()); 
    }
    this_PlusOp_4=rulePlusOp
    { 
        $current = $this_PlusOp_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getQuotientOpParserRuleCall_5()); 
    }
    this_QuotientOp_5=ruleQuotientOp
    { 
        $current = $this_QuotientOp_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getTimesOpParserRuleCall_6()); 
    }
    this_TimesOp_6=ruleTimesOp
    { 
        $current = $this_TimesOp_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOpAccess().getPowerOpParserRuleCall_7()); 
    }
    this_PowerOp_7=rulePowerOp
    { 
        $current = $this_PowerOp_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNakedOp
entryRuleNakedOp returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNakedOpRule()); }
	 iv_ruleNakedOp=ruleNakedOp 
	 { $current=$iv_ruleNakedOp.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NakedOp
ruleNakedOp returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_ArrowTokParserRuleCall_0()); 
    }
    this_UnqualOp_ArrowTok_0=ruleUnqualOp_ArrowTok
    { 
        $current = $this_UnqualOp_ArrowTok_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_LatticeTokParserRuleCall_1()); 
    }
    this_UnqualOp_LatticeTok_1=ruleUnqualOp_LatticeTok
    { 
        $current = $this_UnqualOp_LatticeTok_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_RelationTokParserRuleCall_2()); 
    }
    this_UnqualOp_RelationTok_2=ruleUnqualOp_RelationTok
    { 
        $current = $this_UnqualOp_RelationTok_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_SegTokParserRuleCall_3()); 
    }
    this_UnqualOp_SegTok_3=ruleUnqualOp_SegTok
    { 
        $current = $this_UnqualOp_SegTok_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_PlusTokParserRuleCall_4()); 
    }
    this_UnqualOp_PlusTok_4=ruleUnqualOp_PlusTok
    { 
        $current = $this_UnqualOp_PlusTok_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_QuotientTokParserRuleCall_5()); 
    }
    this_UnqualOp_QuotientTok_5=ruleUnqualOp_QuotientTok
    { 
        $current = $this_UnqualOp_QuotientTok_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_TimesTokParserRuleCall_6()); 
    }
    this_UnqualOp_TimesTok_6=ruleUnqualOp_TimesTok
    { 
        $current = $this_UnqualOp_TimesTok_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNakedOpAccess().getUnqualOp_PowerTokParserRuleCall_7()); 
    }
    this_UnqualOp_PowerTok_7=ruleUnqualOp_PowerTok
    { 
        $current = $this_UnqualOp_PowerTok_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleArrowOp
entryRuleArrowOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrowOpRule()); }
	 iv_ruleArrowOp=ruleArrowOp 
	 { $current=$iv_ruleArrowOp.current; } 
	 EOF 
;

// Rule ArrowOp
ruleArrowOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getArrowOpAccess().getQualOp_ArrowTokParserRuleCall()); 
    }
    this_QualOp_ArrowTok_0=ruleQualOp_ArrowTok
    { 
        $current = $this_QualOp_ArrowTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleLatticeOp
entryRuleLatticeOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatticeOpRule()); }
	 iv_ruleLatticeOp=ruleLatticeOp 
	 { $current=$iv_ruleLatticeOp.current; } 
	 EOF 
;

// Rule LatticeOp
ruleLatticeOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getLatticeOpAccess().getQualOp_LatticeTokParserRuleCall()); 
    }
    this_QualOp_LatticeTok_0=ruleQualOp_LatticeTok
    { 
        $current = $this_QualOp_LatticeTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleRelationOp
entryRuleRelationOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationOpRule()); } 
	 iv_ruleRelationOp=ruleRelationOp 
	 { $current=$iv_ruleRelationOp.current.getText(); }  
	 EOF 
;

// Rule RelationOp
ruleRelationOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRelationOpAccess().getQualOp_RelationTokParserRuleCall()); 
    }
    this_QualOp_RelationTok_0=ruleQualOp_RelationTok    {
		$current.merge(this_QualOp_RelationTok_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleSegOp
entryRuleSegOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegOpRule()); }
	 iv_ruleSegOp=ruleSegOp 
	 { $current=$iv_ruleSegOp.current; } 
	 EOF 
;

// Rule SegOp
ruleSegOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSegOpAccess().getQualOp_SegTokParserRuleCall()); 
    }
    this_QualOp_SegTok_0=ruleQualOp_SegTok
    { 
        $current = $this_QualOp_SegTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePlusOp
entryRulePlusOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlusOpRule()); }
	 iv_rulePlusOp=rulePlusOp 
	 { $current=$iv_rulePlusOp.current; } 
	 EOF 
;

// Rule PlusOp
rulePlusOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPlusOpAccess().getQualOp_PlusTokParserRuleCall()); 
    }
    this_QualOp_PlusTok_0=ruleQualOp_PlusTok
    { 
        $current = $this_QualOp_PlusTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleQuotientOp
entryRuleQuotientOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuotientOpRule()); }
	 iv_ruleQuotientOp=ruleQuotientOp 
	 { $current=$iv_ruleQuotientOp.current; } 
	 EOF 
;

// Rule QuotientOp
ruleQuotientOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getQuotientOpAccess().getQualOp_QuotientTokParserRuleCall()); 
    }
    this_QualOp_QuotientTok_0=ruleQualOp_QuotientTok
    { 
        $current = $this_QualOp_QuotientTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTimesOp
entryRuleTimesOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimesOpRule()); }
	 iv_ruleTimesOp=ruleTimesOp 
	 { $current=$iv_ruleTimesOp.current; } 
	 EOF 
;

// Rule TimesOp
ruleTimesOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTimesOpAccess().getQualOp_TimesTokParserRuleCall()); 
    }
    this_QualOp_TimesTok_0=ruleQualOp_TimesTok
    { 
        $current = $this_QualOp_TimesTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePowerOp
entryRulePowerOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPowerOpRule()); }
	 iv_rulePowerOp=rulePowerOp 
	 { $current=$iv_rulePowerOp.current; } 
	 EOF 
;

// Rule PowerOp
rulePowerOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPowerOpAccess().getQualOp_PowerTokParserRuleCall()); 
    }
    this_QualOp_PowerTok_0=ruleQualOp_PowerTok
    { 
        $current = $this_QualOp_PowerTok_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleArrowTok
entryRuleArrowTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrowTokRule()); } 
	 iv_ruleArrowTok=ruleArrowTok 
	 { $current=$iv_ruleArrowTok.current.getText(); }  
	 EOF 
;

// Rule ArrowTok
ruleArrowTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_RARROW_0=RULE_KW_RARROW    {
		$current.merge(this_KW_RARROW_0);
    }

    { 
    newLeafNode(this_KW_RARROW_0, grammarAccess.getArrowTokAccess().getKW_RARROWTerminalRuleCall_0()); 
    }

    |    this_KW_LARROW_1=RULE_KW_LARROW    {
		$current.merge(this_KW_LARROW_1);
    }

    { 
    newLeafNode(this_KW_LARROW_1, grammarAccess.getArrowTokAccess().getKW_LARROWTerminalRuleCall_1()); 
    }

    |    this_KW_MAPSTAR_2=RULE_KW_MAPSTAR    {
		$current.merge(this_KW_MAPSTAR_2);
    }

    { 
    newLeafNode(this_KW_MAPSTAR_2, grammarAccess.getArrowTokAccess().getKW_MAPSTARTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLatticeTok
entryRuleLatticeTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatticeTokRule()); } 
	 iv_ruleLatticeTok=ruleLatticeTok 
	 { $current=$iv_ruleLatticeTok.current.getText(); }  
	 EOF 
;

// Rule LatticeTok
ruleLatticeTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_VEE_0=RULE_KW_VEE    {
		$current.merge(this_KW_VEE_0);
    }

    { 
    newLeafNode(this_KW_VEE_0, grammarAccess.getLatticeTokAccess().getKW_VEETerminalRuleCall_0()); 
    }

    |    this_KW_WEDGE_1=RULE_KW_WEDGE    {
		$current.merge(this_KW_WEDGE_1);
    }

    { 
    newLeafNode(this_KW_WEDGE_1, grammarAccess.getLatticeTokAccess().getKW_WEDGETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRelationTok
entryRuleRelationTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationTokRule()); } 
	 iv_ruleRelationTok=ruleRelationTok 
	 { $current=$iv_ruleRelationTok.current.getText(); }  
	 EOF 
;

// Rule RelationTok
ruleRelationTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_EQ_0=RULE_KW_EQ    {
		$current.merge(this_KW_EQ_0);
    }

    { 
    newLeafNode(this_KW_EQ_0, grammarAccess.getRelationTokAccess().getKW_EQTerminalRuleCall_0()); 
    }

    |    this_KW_TILDEE_1=RULE_KW_TILDEE    {
		$current.merge(this_KW_TILDEE_1);
    }

    { 
    newLeafNode(this_KW_TILDEE_1, grammarAccess.getRelationTokAccess().getKW_TILDEETerminalRuleCall_1()); 
    }

    |    this_KW_HATE_2=RULE_KW_HATE    {
		$current.merge(this_KW_HATE_2);
    }

    { 
    newLeafNode(this_KW_HATE_2, grammarAccess.getRelationTokAccess().getKW_HATETerminalRuleCall_2()); 
    }

    |    this_KW_GE_3=RULE_KW_GE    {
		$current.merge(this_KW_GE_3);
    }

    { 
    newLeafNode(this_KW_GE_3, grammarAccess.getRelationTokAccess().getKW_GETerminalRuleCall_3()); 
    }

    |    this_KW_GT_4=RULE_KW_GT    {
		$current.merge(this_KW_GT_4);
    }

    { 
    newLeafNode(this_KW_GT_4, grammarAccess.getRelationTokAccess().getKW_GTTerminalRuleCall_4()); 
    }

    |    this_KW_2GT_5=RULE_KW_2GT    {
		$current.merge(this_KW_2GT_5);
    }

    { 
    newLeafNode(this_KW_2GT_5, grammarAccess.getRelationTokAccess().getKW_2GTTerminalRuleCall_5()); 
    }

    |    this_KW_LE_6=RULE_KW_LE    {
		$current.merge(this_KW_LE_6);
    }

    { 
    newLeafNode(this_KW_LE_6, grammarAccess.getRelationTokAccess().getKW_LETerminalRuleCall_6()); 
    }

    |    this_KW_LT_7=RULE_KW_LT    {
		$current.merge(this_KW_LT_7);
    }

    { 
    newLeafNode(this_KW_LT_7, grammarAccess.getRelationTokAccess().getKW_LTTerminalRuleCall_7()); 
    }

    |    this_KW_2LT_8=RULE_KW_2LT    {
		$current.merge(this_KW_2LT_8);
    }

    { 
    newLeafNode(this_KW_2LT_8, grammarAccess.getRelationTokAccess().getKW_2LTTerminalRuleCall_8()); 
    }

    |
	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getIsKeyword_9()); 
    }

    |
	kw='isnt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getIsntKeyword_10()); 
    }

    |
	kw='case' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationTokAccess().getCaseKeyword_11()); 
    }
)
    ;





// Entry rule entryRuleSegTok
entryRuleSegTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegTokRule()); } 
	 iv_ruleSegTok=ruleSegTok 
	 { $current=$iv_ruleSegTok.current.getText(); }  
	 EOF 
;

// Rule SegTok
ruleSegTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_2DOT_0=RULE_KW_2DOT    {
		$current.merge(this_KW_2DOT_0);
    }

    { 
    newLeafNode(this_KW_2DOT_0, grammarAccess.getSegTokAccess().getKW_2DOTTerminalRuleCall_0()); 
    }

    |
	kw='by' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSegTokAccess().getByKeyword_1()); 
    }
)
    ;





// Entry rule entryRulePlusTok
entryRulePlusTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlusTokRule()); } 
	 iv_rulePlusTok=rulePlusTok 
	 { $current=$iv_rulePlusTok.current.getText(); }  
	 EOF 
;

// Rule PlusTok
rulePlusTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_PLUS_0=RULE_KW_PLUS    {
		$current.merge(this_KW_PLUS_0);
    }

    { 
    newLeafNode(this_KW_PLUS_0, grammarAccess.getPlusTokAccess().getKW_PLUSTerminalRuleCall_0()); 
    }

    |    this_KW_MINUS_1=RULE_KW_MINUS    {
		$current.merge(this_KW_MINUS_1);
    }

    { 
    newLeafNode(this_KW_MINUS_1, grammarAccess.getPlusTokAccess().getKW_MINUSTerminalRuleCall_1()); 
    }

    |    this_KW_PLUSMINUS_2=RULE_KW_PLUSMINUS    {
		$current.merge(this_KW_PLUSMINUS_2);
    }

    { 
    newLeafNode(this_KW_PLUSMINUS_2, grammarAccess.getPlusTokAccess().getKW_PLUSMINUSTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleQuotientTok
entryRuleQuotientTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuotientTokRule()); } 
	 iv_ruleQuotientTok=ruleQuotientTok 
	 { $current=$iv_ruleQuotientTok.current.getText(); }  
	 EOF 
;

// Rule QuotientTok
ruleQuotientTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='mod' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getModKeyword_0()); 
    }

    |
	kw='quo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getQuoKeyword_1()); 
    }

    |
	kw='rem' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getRemKeyword_2()); 
    }

    |
	kw='exquo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQuotientTokAccess().getExquoKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleTimesTok
entryRuleTimesTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimesTokRule()); } 
	 iv_ruleTimesTok=ruleTimesTok 
	 { $current=$iv_ruleTimesTok.current.getText(); }  
	 EOF 
;

// Rule TimesTok
ruleTimesTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_STAR_0=RULE_KW_STAR    {
		$current.merge(this_KW_STAR_0);
    }

    { 
    newLeafNode(this_KW_STAR_0, grammarAccess.getTimesTokAccess().getKW_STARTerminalRuleCall_0()); 
    }

    |    this_KW_SLASH_1=RULE_KW_SLASH    {
		$current.merge(this_KW_SLASH_1);
    }

    { 
    newLeafNode(this_KW_SLASH_1, grammarAccess.getTimesTokAccess().getKW_SLASHTerminalRuleCall_1()); 
    }

    |    this_KW_BACKSLASH_2=RULE_KW_BACKSLASH    {
		$current.merge(this_KW_BACKSLASH_2);
    }

    { 
    newLeafNode(this_KW_BACKSLASH_2, grammarAccess.getTimesTokAccess().getKW_BACKSLASHTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePowerTok
entryRulePowerTok returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPowerTokRule()); } 
	 iv_rulePowerTok=rulePowerTok 
	 { $current=$iv_rulePowerTok.current.getText(); }  
	 EOF 
;

// Rule PowerTok
rulePowerTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_2STAR_0=RULE_KW_2STAR    {
		$current.merge(this_KW_2STAR_0);
    }

    { 
    newLeafNode(this_KW_2STAR_0, grammarAccess.getPowerTokAccess().getKW_2STARTerminalRuleCall_0()); 
    }

    |    this_KW_HAT_1=RULE_KW_HAT    {
		$current.merge(this_KW_HAT_1);
    }

    { 
    newLeafNode(this_KW_HAT_1, grammarAccess.getPowerTokAccess().getKW_HATTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleApplication
entryRuleApplication returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getApplicationRule()); } 
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Application
ruleApplication returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp52' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getApplicationAccess().getTemp52Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleLeftJuxtaposed
entryRuleLeftJuxtaposed returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLeftJuxtaposedRule()); } 
	 iv_ruleLeftJuxtaposed=ruleLeftJuxtaposed 
	 { $current=$iv_ruleLeftJuxtaposed.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LeftJuxtaposed
ruleLeftJuxtaposed returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp54' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLeftJuxtaposedAccess().getTemp54Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}













// Entry rule entryRuleMolecule
entryRuleMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getMoleculeRule()); }
	 iv_ruleMolecule=ruleMolecule 
	 { $current=$iv_ruleMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Molecule
ruleMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMoleculeAccess().getAtomParserRuleCall_0()); 
    }
    this_Atom_0=ruleAtom
    { 
        $current = $this_Atom_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoleculeAccess().getEnclosureParserRuleCall_1()); 
    }
    this_Enclosure_1=ruleEnclosure
    { 
        $current = $this_Enclosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleEnclosure
entryRuleEnclosure returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnclosureRule()); }
	 iv_ruleEnclosure=ruleEnclosure 
	 { $current=$iv_ruleEnclosure.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Enclosure
ruleEnclosure returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getParenedParserRuleCall_0()); 
    }
    this_Parened_0=ruleParened
    { 
        $current = $this_Parened_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getBracketedParserRuleCall_1()); 
    }
    this_Bracketed_1=ruleBracketed
    { 
        $current = $this_Bracketed_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnclosureAccess().getQuotedIdsParserRuleCall_2()); 
    }
    this_QuotedIds_2=ruleQuotedIds
    { 
        $current = $this_QuotedIds_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDeclMolecule
entryRuleDeclMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getDeclMoleculeRule()); }
	 iv_ruleDeclMolecule=ruleDeclMolecule 
	 { $current=$iv_ruleDeclMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclMolecule
ruleDeclMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getDeclMoleculeAccess().getApplicationParserRuleCall_0()); 
    }
ruleApplication
    { 
        afterParserOrEnumRuleCall();
    }
)?
    |
    { 
        newCompositeNode(grammarAccess.getDeclMoleculeAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlockMolecule
entryRuleBlockMolecule returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockMoleculeRule()); }
	 iv_ruleBlockMolecule=ruleBlockMolecule 
	 { $current=$iv_ruleBlockMolecule.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockMolecule
ruleBlockMolecule returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getAtomParserRuleCall_0()); 
    }
    this_Atom_0=ruleAtom
    { 
        $current = $this_Atom_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getEnclosureParserRuleCall_1()); 
    }
    this_Enclosure_1=ruleEnclosure
    { 
        $current = $this_Enclosure_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockMoleculeAccess().getBlockParserRuleCall_2()); 
    }
    this_Block_2=ruleBlock
    { 
        $current = $this_Block_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlockEnclosure
entryRuleBlockEnclosure returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockEnclosureRule()); }
	 iv_ruleBlockEnclosure=ruleBlockEnclosure 
	 { $current=$iv_ruleBlockEnclosure.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockEnclosure
ruleBlockEnclosure returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBlockEnclosureAccess().getEnclosureParserRuleCall_0()); 
    }
    this_Enclosure_0=ruleEnclosure
    { 
        $current = $this_Enclosure_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBlockEnclosureAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBlockAccess().getCurly_LabeledParserRuleCall()); 
    }
    this_Curly_Labeled_0=ruleCurly_Labeled
    { 
        $current = $this_Curly_Labeled_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleParened
entryRuleParened returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getParenedRule()); }
	 iv_ruleParened=ruleParened 
	 { $current=$iv_ruleParened.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Parened
ruleParened returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((this_KW_OPAREN_0=RULE_KW_OPAREN
    { 
    newLeafNode(this_KW_OPAREN_0, grammarAccess.getParenedAccess().getKW_OPARENTerminalRuleCall_0_0()); 
    }
this_KW_CPAREN_1=RULE_KW_CPAREN
    { 
    newLeafNode(this_KW_CPAREN_1, grammarAccess.getParenedAccess().getKW_CPARENTerminalRuleCall_0_1()); 
    }
)
    |(this_KW_OPAREN_2=RULE_KW_OPAREN
    { 
    newLeafNode(this_KW_OPAREN_2, grammarAccess.getParenedAccess().getKW_OPARENTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getParenedAccess().getExpressionParserRuleCall_1_1()); 
    }
    this_Expression_3=ruleExpression
    { 
        $current = $this_Expression_3.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_CPAREN_4=RULE_KW_CPAREN
    { 
    newLeafNode(this_KW_CPAREN_4, grammarAccess.getParenedAccess().getKW_CPARENTerminalRuleCall_1_2()); 
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBracketed
entryRuleBracketed returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getBracketedRule()); }
	 iv_ruleBracketed=ruleBracketed 
	 { $current=$iv_ruleBracketed.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Bracketed
ruleBracketed returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((this_KW_OBRACK_0=RULE_KW_OBRACK
    { 
    newLeafNode(this_KW_OBRACK_0, grammarAccess.getBracketedAccess().getKW_OBRACKTerminalRuleCall_0_0()); 
    }
this_KW_CBRACK_1=RULE_KW_CBRACK
    { 
    newLeafNode(this_KW_CBRACK_1, grammarAccess.getBracketedAccess().getKW_CBRACKTerminalRuleCall_0_1()); 
    }
)
    |(this_KW_OBRACK_2=RULE_KW_OBRACK
    { 
    newLeafNode(this_KW_OBRACK_2, grammarAccess.getBracketedAccess().getKW_OBRACKTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getBracketedAccess().getExpressionParserRuleCall_1_1()); 
    }
    this_Expression_3=ruleExpression
    { 
        $current = $this_Expression_3.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_CBRACK_4=RULE_KW_CBRACK
    { 
    newLeafNode(this_KW_CBRACK_4, grammarAccess.getBracketedAccess().getKW_CBRACKTerminalRuleCall_1_2()); 
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQuotedIds
entryRuleQuotedIds returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQuotedIdsRule()); }
	 iv_ruleQuotedIds=ruleQuotedIds 
	 { $current=$iv_ruleQuotedIds.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QuotedIds
ruleQuotedIds returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((this_KW_QUOTE_0=RULE_KW_QUOTE
    { 
    newLeafNode(this_KW_QUOTE_0, grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_0_0()); 
    }
this_KW_QUOTE_1=RULE_KW_QUOTE
    { 
    newLeafNode(this_KW_QUOTE_1, grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_0_1()); 
    }
)
    |(this_KW_QUOTE_2=RULE_KW_QUOTE
    { 
    newLeafNode(this_KW_QUOTE_2, grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getQuotedIdsAccess().getNamesParserRuleCall_1_1()); 
    }
    this_Names_3=ruleNames
    { 
        $current = $this_Names_3.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_QUOTE_4=RULE_KW_QUOTE
    { 
    newLeafNode(this_KW_QUOTE_4, grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_1_2()); 
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNames
entryRuleNames returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNamesRule()); }
	 iv_ruleNames=ruleNames 
	 { $current=$iv_ruleNames.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Names
ruleNames returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_firstName_0_0=RULE_TK_ID
		{
			newLeafNode(lv_firstName_0_0, grammarAccess.getNamesAccess().getFirstNameTK_IDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstName",
        		lv_firstName_0_0, 
        		"TK_ID");
	    }

)
)(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getNamesAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		lv_subsequentNames_2_0=RULE_TK_ID
		{
			newLeafNode(lv_subsequentNames_2_0, grammarAccess.getNamesAccess().getSubsequentNamesTK_IDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"subsequentNames",
        		lv_subsequentNames_2_0, 
        		"TK_ID");
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	 iv_ruleAtom=ruleAtom 
	 { $current=$iv_ruleAtom.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Atom
ruleAtom returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAtomAccess().getIdIdParserRuleCall_0_0()); 
	    }
		lv_id_0_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomAccess().getLitLiteralParserRuleCall_1_0()); 
	    }
		lv_lit_1_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomRule());
	        }
       		set(
       			$current, 
       			"lit",
        		lv_lit_1_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Name
ruleName returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNameAccess().getIdParserRuleCall_0()); 
    }
    this_Id_0=ruleId
    { 
        $current = $this_Id_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNameAccess().getNakedOpParserRuleCall_1()); 
    }
    this_NakedOp_1=ruleNakedOp
    { 
        $current = $this_NakedOp_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleId
entryRuleId returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getIdRule()); }
	 iv_ruleId=ruleId 
	 { $current=$iv_ruleId.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Id
ruleId returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		lv_AB_Id_0_0=RULE_TK_ID
		{
			newLeafNode(lv_AB_Id_0_0, grammarAccess.getIdAccess().getAB_IdTK_IDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"AB_Id",
        		lv_AB_Id_0_0, 
        		"TK_ID");
	    }

)
)
    |(
(
		lv_op_1_0=RULE_KW_SHARP
		{
			newLeafNode(lv_op_1_0, grammarAccess.getIdAccess().getOpKW_SHARPTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"KW_SHARP");
	    }

)
)
    |(
(
		lv_op_2_0=RULE_KW_TILDE
		{
			newLeafNode(lv_op_2_0, grammarAccess.getIdAccess().getOpKW_TILDETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"KW_TILDE");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); } 
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(    this_TK_INT_0=RULE_TK_INT    {
		$current.merge(this_TK_INT_0);
    }

    { 
    newLeafNode(this_TK_INT_0, grammarAccess.getLiteralAccess().getTK_INTTerminalRuleCall_0()); 
    }

    |    this_TK_STRING_1=RULE_TK_STRING    {
		$current.merge(this_TK_STRING_1);
    }

    { 
    newLeafNode(this_TK_STRING_1, grammarAccess.getLiteralAccess().getTK_STRINGTerminalRuleCall_1()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_ArrowTok
entryRuleUnqualOp_ArrowTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_ArrowTokRule()); }
	 iv_ruleUnqualOp_ArrowTok=ruleUnqualOp_ArrowTok 
	 { $current=$iv_ruleUnqualOp_ArrowTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_ArrowTok
ruleUnqualOp_ArrowTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokParserRuleCall_0()); 
    }
ruleArrowTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_LatticeTok
entryRuleUnqualOp_LatticeTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_LatticeTokRule()); }
	 iv_ruleUnqualOp_LatticeTok=ruleUnqualOp_LatticeTok 
	 { $current=$iv_ruleUnqualOp_LatticeTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_LatticeTok
ruleUnqualOp_LatticeTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokParserRuleCall_0()); 
    }
ruleLatticeTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_RelationTok
entryRuleUnqualOp_RelationTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_RelationTokRule()); }
	 iv_ruleUnqualOp_RelationTok=ruleUnqualOp_RelationTok 
	 { $current=$iv_ruleUnqualOp_RelationTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_RelationTok
ruleUnqualOp_RelationTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokParserRuleCall_0()); 
    }
ruleRelationTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_SegTok
entryRuleUnqualOp_SegTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_SegTokRule()); }
	 iv_ruleUnqualOp_SegTok=ruleUnqualOp_SegTok 
	 { $current=$iv_ruleUnqualOp_SegTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_SegTok
ruleUnqualOp_SegTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_SegTokAccess().getSegTokParserRuleCall_0()); 
    }
ruleSegTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_SegTokAccess().getSegTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_PlusTok
entryRuleUnqualOp_PlusTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_PlusTokRule()); }
	 iv_ruleUnqualOp_PlusTok=ruleUnqualOp_PlusTok 
	 { $current=$iv_ruleUnqualOp_PlusTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PlusTok
ruleUnqualOp_PlusTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokParserRuleCall_0()); 
    }
rulePlusTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_QuotientTok
entryRuleUnqualOp_QuotientTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_QuotientTokRule()); }
	 iv_ruleUnqualOp_QuotientTok=ruleUnqualOp_QuotientTok 
	 { $current=$iv_ruleUnqualOp_QuotientTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_QuotientTok
ruleUnqualOp_QuotientTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokParserRuleCall_0()); 
    }
ruleQuotientTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_TimesTok
entryRuleUnqualOp_TimesTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_TimesTokRule()); }
	 iv_ruleUnqualOp_TimesTok=ruleUnqualOp_TimesTok 
	 { $current=$iv_ruleUnqualOp_TimesTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_TimesTok
ruleUnqualOp_TimesTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokParserRuleCall_0()); 
    }
ruleTimesTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnqualOp_PowerTok
entryRuleUnqualOp_PowerTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getUnqualOp_PowerTokRule()); }
	 iv_ruleUnqualOp_PowerTok=ruleUnqualOp_PowerTok 
	 { $current=$iv_ruleUnqualOp_PowerTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PowerTok
ruleUnqualOp_PowerTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokParserRuleCall_0()); 
    }
rulePowerTok
    { 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokAction_1(),
            $current);
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_ArrowTok
entryRuleQualOp_ArrowTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_ArrowTokRule()); }
	 iv_ruleQualOp_ArrowTok=ruleQualOp_ArrowTok 
	 { $current=$iv_ruleQualOp_ArrowTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_ArrowTok
ruleQualOp_ArrowTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_ArrowTokAccess().getArrowTokParserRuleCall_0()); 
    }
ruleArrowTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_ArrowTokAccess().getArrowTokParserRuleCall_1_0()); 
    }
ruleArrowTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_ArrowTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_ArrowTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_LatticeTok
entryRuleQualOp_LatticeTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_LatticeTokRule()); }
	 iv_ruleQualOp_LatticeTok=ruleQualOp_LatticeTok 
	 { $current=$iv_ruleQualOp_LatticeTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_LatticeTok
ruleQualOp_LatticeTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_LatticeTokAccess().getLatticeTokParserRuleCall_0()); 
    }
ruleLatticeTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_LatticeTokAccess().getLatticeTokParserRuleCall_1_0()); 
    }
ruleLatticeTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_LatticeTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_LatticeTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_RelationTok
entryRuleQualOp_RelationTok returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_RelationTokRule()); } 
	 iv_ruleQualOp_RelationTok=ruleQualOp_RelationTok 
	 { $current=$iv_ruleQualOp_RelationTok.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_RelationTok
ruleQualOp_RelationTok returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

	kw='temp99' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualOp_RelationTokAccess().getTemp99Keyword()); 
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_SegTok
entryRuleQualOp_SegTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_SegTokRule()); }
	 iv_ruleQualOp_SegTok=ruleQualOp_SegTok 
	 { $current=$iv_ruleQualOp_SegTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_SegTok
ruleQualOp_SegTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_SegTokAccess().getSegTokParserRuleCall_0()); 
    }
ruleSegTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_SegTokAccess().getSegTokParserRuleCall_1_0()); 
    }
ruleSegTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_SegTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_SegTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_PlusTok
entryRuleQualOp_PlusTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_PlusTokRule()); }
	 iv_ruleQualOp_PlusTok=ruleQualOp_PlusTok 
	 { $current=$iv_ruleQualOp_PlusTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PlusTok
ruleQualOp_PlusTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_PlusTokAccess().getPlusTokParserRuleCall_0()); 
    }
rulePlusTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_PlusTokAccess().getPlusTokParserRuleCall_1_0()); 
    }
rulePlusTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_PlusTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_PlusTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_QuotientTok
entryRuleQualOp_QuotientTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_QuotientTokRule()); }
	 iv_ruleQualOp_QuotientTok=ruleQualOp_QuotientTok 
	 { $current=$iv_ruleQualOp_QuotientTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_QuotientTok
ruleQualOp_QuotientTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_QuotientTokAccess().getQuotientTokParserRuleCall_0()); 
    }
ruleQuotientTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_QuotientTokAccess().getQuotientTokParserRuleCall_1_0()); 
    }
ruleQuotientTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_QuotientTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_QuotientTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_TimesTok
entryRuleQualOp_TimesTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_TimesTokRule()); }
	 iv_ruleQualOp_TimesTok=ruleQualOp_TimesTok 
	 { $current=$iv_ruleQualOp_TimesTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_TimesTok
ruleQualOp_TimesTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_TimesTokAccess().getTimesTokParserRuleCall_0()); 
    }
ruleTimesTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_TimesTokAccess().getTimesTokParserRuleCall_1_0()); 
    }
ruleTimesTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_TimesTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_TimesTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualOp_PowerTok
entryRuleQualOp_PowerTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getQualOp_PowerTokRule()); }
	 iv_ruleQualOp_PowerTok=ruleQualOp_PowerTok 
	 { $current=$iv_ruleQualOp_PowerTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PowerTok
ruleQualOp_PowerTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualOp_PowerTokAccess().getPowerTokParserRuleCall_0()); 
    }
rulePowerTok
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQualOp_PowerTokAccess().getPowerTokParserRuleCall_1_0()); 
    }
rulePowerTok
    { 
        afterParserOrEnumRuleCall();
    }
this_KW_DOLLAR_2=RULE_KW_DOLLAR
    { 
    newLeafNode(this_KW_DOLLAR_2, grammarAccess.getQualOp_PowerTokAccess().getKW_DOLLARTerminalRuleCall_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualOp_PowerTokAccess().getOpQualTailParserRuleCall_1_2()); 
    }
    this_OpQualTail_3=ruleOpQualTail
    { 
        $current = $this_OpQualTail_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}









// Entry rule entryRulePreDocumentList
entryRulePreDocumentList returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getPreDocumentListRule()); } 
	 iv_rulePreDocumentList=rulePreDocumentList 
	 { $current=$iv_rulePreDocumentList.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PreDocumentList
rulePreDocumentList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(    this_TK_PREDOC_0=RULE_TK_PREDOC    {
		$current.merge(this_TK_PREDOC_0);
    }

    { 
    newLeafNode(this_TK_PREDOC_0, grammarAccess.getPreDocumentListAccess().getTK_PREDOCTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getPreDocumentListAccess().getPreDocumentListParserRuleCall_1()); 
    }
    this_PreDocumentList_1=rulePreDocumentList    {
		$current.merge(this_PreDocumentList_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePostDocumentList
entryRulePostDocumentList returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getPostDocumentListRule()); } 
	 iv_rulePostDocumentList=rulePostDocumentList 
	 { $current=$iv_rulePostDocumentList.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PostDocumentList
rulePostDocumentList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(    this_TK_POSTDOC_0=RULE_TK_POSTDOC    {
		$current.merge(this_TK_POSTDOC_0);
    }

    { 
    newLeafNode(this_TK_POSTDOC_0, grammarAccess.getPostDocumentListAccess().getTK_POSTDOCTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getPostDocumentListAccess().getPostDocumentListParserRuleCall_1()); 
    }
    this_PostDocumentList_1=rulePostDocumentList    {
		$current.merge(this_PostDocumentList_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1_CommaItem_Comma_AB
entryRuleenlist1_CommaItem_Comma_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_CommaItem_Comma_ABRule()); }
	 iv_ruleenlist1_CommaItem_Comma_AB=ruleenlist1_CommaItem_Comma_AB 
	 { $current=$iv_ruleenlist1_CommaItem_Comma_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_CommaItem_Comma_AB
ruleenlist1_CommaItem_Comma_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_CommaItem_Comma_ABAccess().getEnlister1_CommaItem_CommaParserRuleCall()); 
    }
    this_enlister1_CommaItem_Comma_0=ruleenlister1_CommaItem_Comma
    { 
        $current = $this_enlister1_CommaItem_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1_Infixed_Comma_AB
entryRuleenlist1_Infixed_Comma_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_Infixed_Comma_ABRule()); }
	 iv_ruleenlist1_Infixed_Comma_AB=ruleenlist1_Infixed_Comma_AB 
	 { $current=$iv_ruleenlist1_Infixed_Comma_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_Infixed_Comma_AB
ruleenlist1_Infixed_Comma_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_Infixed_Comma_ABAccess().getEnlister1_Infixed_CommaParserRuleCall()); 
    }
    this_enlister1_Infixed_Comma_0=ruleenlister1_Infixed_Comma
    { 
        $current = $this_enlister1_Infixed_Comma_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1_InfixedExpr_Comma_AB
entryRuleenlist1_InfixedExpr_Comma_AB returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1_InfixedExpr_Comma_ABRule()); } 
	 iv_ruleenlist1_InfixedExpr_Comma_AB=ruleenlist1_InfixedExpr_Comma_AB 
	 { $current=$iv_ruleenlist1_InfixedExpr_Comma_AB.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_InfixedExpr_Comma_AB
ruleenlist1_InfixedExpr_Comma_AB returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1_InfixedExpr_Comma_ABAccess().getEnlister1_InfixedExpr_CommaParserRuleCall()); 
    }
    this_enlister1_InfixedExpr_Comma_0=ruleenlister1_InfixedExpr_Comma    {
		$current.merge(this_enlister1_InfixedExpr_Comma_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_CommaItem_Comma
entryRuleenlister1_CommaItem_Comma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaRule()); }
	 iv_ruleenlister1_CommaItem_Comma=ruleenlister1_CommaItem_Comma 
	 { $current=$iv_ruleenlister1_CommaItem_Comma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_CommaItem_Comma
ruleenlister1_CommaItem_Comma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCommaItemParserRuleCall_0()); 
    }
    this_CommaItem_0=ruleCommaItem
    { 
        $current = $this_CommaItem_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_CommaItem_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiCommaItemParserRuleCall_1_1_0()); 
	    }
		lv_ci_2_0=ruleCommaItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1_CommaItem_CommaRule());
	        }
       		set(
       			$current, 
       			"ci",
        		lv_ci_2_0, 
        		"CommaItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_Infixed_Comma
entryRuleenlister1_Infixed_Comma returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaRule()); }
	 iv_ruleenlister1_Infixed_Comma=ruleenlister1_Infixed_Comma 
	 { $current=$iv_ruleenlister1_Infixed_Comma.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_Infixed_Comma
ruleenlister1_Infixed_Comma returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaAccess().getInfixedParserRuleCall_0()); 
    }
ruleInfixed
    { 
        afterParserOrEnumRuleCall();
    }
(this_KW_COMMA_1=RULE_KW_COMMA
    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_Infixed_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1_Infixed_CommaAccess().getIInfixedParserRuleCall_1_1_0()); 
	    }
		lv_i_2_0=ruleInfixed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1_Infixed_CommaRule());
	        }
       		set(
       			$current, 
       			"i",
        		lv_i_2_0, 
        		"Infixed");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1_InfixedExpr_Comma
entryRuleenlister1_InfixedExpr_Comma returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaRule()); } 
	 iv_ruleenlister1_InfixedExpr_Comma=ruleenlister1_InfixedExpr_Comma 
	 { $current=$iv_ruleenlister1_InfixedExpr_Comma.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_InfixedExpr_Comma
ruleenlister1_InfixedExpr_Comma returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getInfixedExprParserRuleCall_0()); 
    }
    this_InfixedExpr_0=ruleInfixedExpr    {
		$current.merge(this_InfixedExpr_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(    this_KW_COMMA_1=RULE_KW_COMMA    {
		$current.merge(this_KW_COMMA_1);
    }

    { 
    newLeafNode(this_KW_COMMA_1, grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getInfixedExprParserRuleCall_1_1()); 
    }
    this_InfixedExpr_2=ruleInfixedExpr    {
		$current.merge(this_InfixedExpr_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlist1a_Labeled_Semicolon_AB
entryRuleenlist1a_Labeled_Semicolon_AB returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlist1a_Labeled_Semicolon_ABRule()); }
	 iv_ruleenlist1a_Labeled_Semicolon_AB=ruleenlist1a_Labeled_Semicolon_AB 
	 { $current=$iv_ruleenlist1a_Labeled_Semicolon_AB.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1a_Labeled_Semicolon_AB
ruleenlist1a_Labeled_Semicolon_AB returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getEnlist1a_Labeled_Semicolon_ABAccess().getEnlister1a_Labeled_SemicolonParserRuleCall()); 
    }
    this_enlister1a_Labeled_Semicolon_0=ruleenlister1a_Labeled_Semicolon
    { 
        $current = $this_enlister1a_Labeled_Semicolon_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleenlister1a_Labeled_Semicolon
entryRuleenlister1a_Labeled_Semicolon returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
	}
	:
	{ newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonRule()); }
	 iv_ruleenlister1a_Labeled_Semicolon=ruleenlister1a_Labeled_Semicolon 
	 { $current=$iv_ruleenlister1a_Labeled_Semicolon.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1a_Labeled_Semicolon
ruleenlister1a_Labeled_Semicolon returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_0_0()); 
	    }
		lv_statemnts_0_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1a_Labeled_SemicolonRule());
	        }
       		add(
       			$current, 
       			"statemnts",
        		lv_statemnts_0_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_KW_SEMICOLON_1=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_1, grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_1_1_0()); 
	    }
		lv_statemnts_2_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnlister1a_Labeled_SemicolonRule());
	        }
       		add(
       			$current, 
       			"statemnts",
        		lv_statemnts_2_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
))(this_KW_SEMICOLON_3=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_3, grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_2()); 
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCurly_Labeled
entryRuleCurly_Labeled returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCurly_LabeledRule()); }
	 iv_ruleCurly_Labeled=ruleCurly_Labeled 
	 { $current=$iv_ruleCurly_Labeled.current; } 
	 EOF 
;

// Rule Curly_Labeled
ruleCurly_Labeled returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_KW_OCURLY_0=RULE_KW_OCURLY
    { 
    newLeafNode(this_KW_OCURLY_0, grammarAccess.getCurly_LabeledAccess().getKW_OCURLYTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCurly_LabeledAccess().getCurlyContents_LabeledParserRuleCall_1()); 
    }
    this_CurlyContents_Labeled_1=ruleCurlyContents_Labeled
    { 
        $current = $this_CurlyContents_Labeled_1.current; 
        afterParserOrEnumRuleCall();
    }
this_KW_CCURLY_2=RULE_KW_CCURLY
    { 
    newLeafNode(this_KW_CCURLY_2, grammarAccess.getCurly_LabeledAccess().getKW_CCURLYTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleCurlyContents_Labeled
entryRuleCurlyContents_Labeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getCurlyContents_LabeledRule()); }
	 iv_ruleCurlyContents_Labeled=ruleCurlyContents_Labeled 
	 { $current=$iv_ruleCurlyContents_Labeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContents_Labeled
ruleCurlyContents_Labeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCurlyContents_LabeledAccess().getCurlyContentsList_LabeledParserRuleCall()); 
    }
    this_CurlyContentsList_Labeled_0=ruleCurlyContentsList_Labeled
    { 
        $current = $this_CurlyContentsList_Labeled_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCurlyContentsList_Labeled
entryRuleCurlyContentsList_Labeled returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getCurlyContentsList_LabeledRule()); }
	 iv_ruleCurlyContentsList_Labeled=ruleCurlyContentsList_Labeled 
	 { $current=$iv_ruleCurlyContentsList_Labeled.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContentsList_Labeled
ruleCurlyContentsList_Labeled returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsLabeledParserRuleCall_0_0()); 
	    }
		lv_statemts_0_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentsList_LabeledRule());
	        }
       		add(
       			$current, 
       			"statemts",
        		lv_statemts_0_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_KW_SEMICOLON_1=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_1, grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsLabeledParserRuleCall_1_1_0()); 
	    }
		lv_statemts_2_0=ruleLabeled		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurlyContentsList_LabeledRule());
	        }
       		add(
       			$current, 
       			"statemts",
        		lv_statemts_2_0, 
        		"Labeled");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_KW_SEMICOLON_3=RULE_KW_SEMICOLON
    { 
    newLeafNode(this_KW_SEMICOLON_3, grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_2()); 
    }
)?)
;
finally {
	myHiddenTokenState.restore();
}







RULE_TK_ID : ('a'..'z'|'A'..'Z'|'_' .) ('a'..'z'|'A'..'Z'|'_' .|'0'..'9')* '!'? '?'?;

RULE_WS : (' '|'\t')+;

RULE_KW_NEWLINE : ('\r'|'\n');

RULE_TK_PREDOC : '--' ~(('\n'|'\r'))*;

RULE_TK_POSTDOC : '++' ~(('\n'|'\r'))*;

RULE_MACROVALUE : '===>' ~(('\n'|'\r'))*;

RULE_TK_STRING : '"' ~('"')* '"';

RULE_TK_INT : ('0'..'9')+;

RULE_KW_QUOTE : '\'';

RULE_KW_OPAREN : '(';

RULE_KW_CPAREN : ')';

RULE_KW_OCURLY : '{';

RULE_KW_CCURLY : '}';

RULE_KW_OBRACK : '[';

RULE_KW_CBRACK : ']';

RULE_KW_2LT : '<<';

RULE_KW_2GT : '>>';

RULE_KW_MARROW : '==>';

RULE_KW_BAR : '|';

RULE_KW_DOT : '.';

RULE_KW_2COLON : '::';

RULE_KW_COLONSTAR : ':*';

RULE_KW_COLON : ':';

RULE_KW_AT : '@';

RULE_KW_COMMA : ',';

RULE_KW_SEMICOLON : ';';

RULE_KW_2STAR : '**';

RULE_KW_STAR : '*';

RULE_KW_PLUS : '+';

RULE_KW_MINUS : '-';

RULE_KW_PLUSMINUS : '+-';

RULE_KW_LT : '<';

RULE_KW_GT : '>';

RULE_KW_LE : '<=';

RULE_KW_GE : '>=';

RULE_KW_EQ : '=';

RULE_KW_TILDEE : '~=';

RULE_KW_HATE : '^=';

RULE_KW_TILDE : '~';

RULE_KW_HAT : '^';

RULE_KW_2DOT : '..';

RULE_KW_SHARP : '#';

RULE_KW_AMPERSAND : '&';

RULE_KW_DOLLAR : '$';

RULE_KW_SLASH : '/';

RULE_KW_BACKSLASH : '\\';

RULE_SLASHSLASH : '//';

RULE_BACKSLASHBACKSLASH : '\\\\';

RULE_KW_WEDGE : '/\\';

RULE_KW_VEE : '\\/';

RULE_TIMESDOLAR : '*$';

RULE_DIVDOLAR : '/$';

RULE_PLUSDOLAR : '+$';

RULE_MINUSDOLAR : '-$';

RULE_EQUALSDOLAR : '=$';

RULE_KW_IMPLIES : '=>';

RULE_KW_ASSIGN : ':=';

RULE_KW_2EQ : '==';

RULE_KW_RARROW : '->';

RULE_KW_LARROW : '<-';

RULE_KW_MAPSTO : '+->';

RULE_KW_MAPSTOSTAR : '+->*';

RULE_KW_MAPSTAR : '->*';

RULE_PERCENT : '%';

RULE_PRIMEPERCENT : '\'%';

RULE_ELLIPSIS : '...';

RULE_SUMLIST : '+/';

RULE_ANY_OTHER : .;


