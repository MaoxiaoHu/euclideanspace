/*
 * generated by Xtext
 */
package com.euclideanspace.euclid;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.xbase.jvmmodel.IJvmModelInferrer;

import com.euclideanspace.euclid.jvmmodel.EditorJvmModelInferrer;
//import com.euclideanspace.euclid.naming.EditorQualifiedNameProvider;
import com.euclideanspace.euclid.scoping.EditorImportedNamespaceScopeProvider;
import com.google.inject.Binder;
import com.google.inject.name.Names;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class EditorRuntimeModule extends com.euclideanspace.euclid.AbstractEditorRuntimeModule {
	@Override
	public void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(org.eclipse.xtext.scoping.IScopeProvider.class)
		  .annotatedWith(Names.named(
			org.eclipse.xtext.scoping.impl.
			 AbstractDeclarativeScopeProvider.NAMED_DELEGATE
		   )).to(EditorImportedNamespaceScopeProvider.class);
	}
	
//	@Override
//	public Class<? extends IdentifiableSimpleNameProvider> bindIdentifiableSimpleNameProvider() {
//	  return XtendIdentifiableSimpleNameProvider.class;
//	}

/*	public Class<? extends IJvmModelInferrer> bindIJvmModelInferrer() {
	  return EditorJvmModelInferrer.class;
	}

	@Override
	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
	  return EditorQualifiedNameProvider.class;
	}
*/


}
