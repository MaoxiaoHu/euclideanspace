/*
* generated by Xtext
*/
package com.euclideanspace.euclid.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class EditorGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class FileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "File");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPackageAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPackageQualifiedNameParserRuleCall_0_1_0 = (RuleCall)cPackageAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cEuclidTypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEuclidTypesTypeParserRuleCall_2_0 = (RuleCall)cEuclidTypesAssignment_2.eContents().get(0);
		
		//File returns EuclidFile:
		//	("package" package=QualifiedName ";"?)? imports+=Import* euclidTypes+=Type*;
		public ParserRule getRule() { return rule; }

		//("package" package=QualifiedName ";"?)? imports+=Import* euclidTypes+=Type*
		public Group getGroup() { return cGroup; }

		//("package" package=QualifiedName ";"?)?
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//package=QualifiedName
		public Assignment getPackageAssignment_0_1() { return cPackageAssignment_0_1; }

		//QualifiedName
		public RuleCall getPackageQualifiedNameParserRuleCall_0_1_0() { return cPackageQualifiedNameParserRuleCall_0_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//euclidTypes+=Type*
		public Assignment getEuclidTypesAssignment_2() { return cEuclidTypesAssignment_2; }

		//Type
		public RuleCall getEuclidTypesTypeParserRuleCall_2_0() { return cEuclidTypesTypeParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cImportedTypeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cImportedTypeJvmTypeCrossReference_1_0_0 = (CrossReference)cImportedTypeAssignment_1_0.eContents().get(0);
		private final RuleCall cImportedTypeJvmTypeQualifiedNameParserRuleCall_1_0_0_1 = (RuleCall)cImportedTypeJvmTypeCrossReference_1_0_0.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWildCardParserRuleCall_1_1_0 = (RuleCall)cImportedNamespaceAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Import returns EuclidImport:
		//	"import" //  (static?='static' extension?='extension'? importedType=[types::JvmType|QualifiedName] '.' '*')
		//	(importedType=[types::JvmType|QualifiedName] //   importedNamespace=QualifiedName
		//	| importedNamespace=QualifiedNameWildCard) ";"?;
		public ParserRule getRule() { return rule; }

		//"import" //  (static?='static' extension?='extension'? importedType=[types::JvmType|QualifiedName] '.' '*')
		//(importedType=[types::JvmType|QualifiedName] //   importedNamespace=QualifiedName
		//| importedNamespace=QualifiedNameWildCard) ";"?
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		////  (static?='static' extension?='extension'? importedType=[types::JvmType|QualifiedName] '.' '*')
		//importedType=[types::JvmType|QualifiedName] //   importedNamespace=QualifiedName
		//| importedNamespace=QualifiedNameWildCard
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		////  (static?='static' extension?='extension'? importedType=[types::JvmType|QualifiedName] '.' '*')
		//importedType=[types::JvmType|QualifiedName]
		public Assignment getImportedTypeAssignment_1_0() { return cImportedTypeAssignment_1_0; }

		//[types::JvmType|QualifiedName]
		public CrossReference getImportedTypeJvmTypeCrossReference_1_0_0() { return cImportedTypeJvmTypeCrossReference_1_0_0; }

		//QualifiedName
		public RuleCall getImportedTypeJvmTypeQualifiedNameParserRuleCall_1_0_0_1() { return cImportedTypeJvmTypeQualifiedNameParserRuleCall_1_0_0_1; }

		//importedNamespace=QualifiedNameWildCard
		public Assignment getImportedNamespaceAssignment_1_1() { return cImportedNamespaceAssignment_1_1; }

		//QualifiedNameWildCard
		public RuleCall getImportedNamespaceQualifiedNameWildCardParserRuleCall_1_1_0() { return cImportedNamespaceQualifiedNameWildCardParserRuleCall_1_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class QualifiedNameWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWildCard:
		//	QualifiedName "." "*";
		public ParserRule getRule() { return rule; }

		//QualifiedName "." "*"
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEuclidTypeDeclarationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cEuclidClassAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Keyword cPublicKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cAbstractAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_2_0_2_0 = (Keyword)cAbstractAssignment_2_0_2.eContents().get(0);
		private final Keyword cClassKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final Assignment cNameAssignment_2_0_4 = (Assignment)cGroup_2_0.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_2_0_4_0 = (RuleCall)cNameAssignment_2_0_4.eContents().get(0);
		private final Group cGroup_2_0_5 = (Group)cGroup_2_0.eContents().get(5);
		private final Keyword cLessThanSignKeyword_2_0_5_0 = (Keyword)cGroup_2_0_5.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_0_5_1 = (Assignment)cGroup_2_0_5.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_0_5_1_0 = (RuleCall)cTypeParametersAssignment_2_0_5_1.eContents().get(0);
		private final Group cGroup_2_0_5_2 = (Group)cGroup_2_0_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_5_2_0 = (Keyword)cGroup_2_0_5_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_0_5_2_1 = (Assignment)cGroup_2_0_5_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_0_5_2_1_0 = (RuleCall)cTypeParametersAssignment_2_0_5_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_0_5_3 = (Keyword)cGroup_2_0_5.eContents().get(3);
		private final Group cGroup_2_0_6 = (Group)cGroup_2_0.eContents().get(6);
		private final Keyword cExtendsKeyword_2_0_6_0 = (Keyword)cGroup_2_0_6.eContents().get(0);
		private final Assignment cExtendsAssignment_2_0_6_1 = (Assignment)cGroup_2_0_6.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_6_1_0 = (RuleCall)cExtendsAssignment_2_0_6_1.eContents().get(0);
		private final Group cGroup_2_0_7 = (Group)cGroup_2_0.eContents().get(7);
		private final Keyword cImplementsKeyword_2_0_7_0 = (Keyword)cGroup_2_0_7.eContents().get(0);
		private final Assignment cImplementsAssignment_2_0_7_1 = (Assignment)cGroup_2_0_7.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_1_0 = (RuleCall)cImplementsAssignment_2_0_7_1.eContents().get(0);
		private final Group cGroup_2_0_7_2 = (Group)cGroup_2_0_7.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_7_2_0 = (Keyword)cGroup_2_0_7_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_0_7_2_1 = (Assignment)cGroup_2_0_7_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_2_1_0 = (RuleCall)cImplementsAssignment_2_0_7_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_8 = (Keyword)cGroup_2_0.eContents().get(8);
		private final Assignment cMembersAssignment_2_0_9 = (Assignment)cGroup_2_0.eContents().get(9);
		private final RuleCall cMembersMemberParserRuleCall_2_0_9_0 = (RuleCall)cMembersAssignment_2_0_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_10 = (Keyword)cGroup_2_0.eContents().get(10);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cEuclidInterfaceAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Keyword cPublicKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cAbstractAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_2_1_2_0 = (Keyword)cAbstractAssignment_2_1_2.eContents().get(0);
		private final Keyword cInterfaceKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Assignment cNameAssignment_2_1_4 = (Assignment)cGroup_2_1.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_2_1_4_0 = (RuleCall)cNameAssignment_2_1_4.eContents().get(0);
		private final Group cGroup_2_1_5 = (Group)cGroup_2_1.eContents().get(5);
		private final Keyword cLessThanSignKeyword_2_1_5_0 = (Keyword)cGroup_2_1_5.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_1 = (Assignment)cGroup_2_1_5.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_1.eContents().get(0);
		private final Group cGroup_2_1_5_2 = (Group)cGroup_2_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_2_0 = (Keyword)cGroup_2_1_5_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_2_1 = (Assignment)cGroup_2_1_5_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1_5_3 = (Keyword)cGroup_2_1_5.eContents().get(3);
		private final Group cGroup_2_1_6 = (Group)cGroup_2_1.eContents().get(6);
		private final Keyword cImplementsKeyword_2_1_6_0 = (Keyword)cGroup_2_1_6.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_6_1 = (Assignment)cGroup_2_1_6.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0 = (RuleCall)cImplementsAssignment_2_1_6_1.eContents().get(0);
		private final Group cGroup_2_1_6_2 = (Group)cGroup_2_1_6.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_6_2_0 = (Keyword)cGroup_2_1_6_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_6_2_1 = (Assignment)cGroup_2_1_6_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0 = (RuleCall)cImplementsAssignment_2_1_6_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1_7 = (Keyword)cGroup_2_1.eContents().get(7);
		private final Assignment cDeclarationsAssignment_2_1_8 = (Assignment)cGroup_2_1.eContents().get(8);
		private final RuleCall cDeclarationsDeclarationParserRuleCall_2_1_8_0 = (RuleCall)cDeclarationsAssignment_2_1_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_9 = (Keyword)cGroup_2_1.eContents().get(9);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cEuclidEnumAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Keyword cPublicKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cAbstractAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final Keyword cAbstractAbstractKeyword_2_2_2_0 = (Keyword)cAbstractAssignment_2_2_2.eContents().get(0);
		private final Keyword cEnumKeyword_2_2_3 = (Keyword)cGroup_2_2.eContents().get(3);
		private final Assignment cNameAssignment_2_2_4 = (Assignment)cGroup_2_2.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_2_2_4_0 = (RuleCall)cNameAssignment_2_2_4.eContents().get(0);
		private final Group cGroup_2_2_5 = (Group)cGroup_2_2.eContents().get(5);
		private final Keyword cLessThanSignKeyword_2_2_5_0 = (Keyword)cGroup_2_2_5.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_5_1 = (Assignment)cGroup_2_2_5.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0 = (RuleCall)cTypeParametersAssignment_2_2_5_1.eContents().get(0);
		private final Group cGroup_2_2_5_2 = (Group)cGroup_2_2_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_5_2_0 = (Keyword)cGroup_2_2_5_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_5_2_1 = (Assignment)cGroup_2_2_5_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_5_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_2_5_3 = (Keyword)cGroup_2_2_5.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_2_2_6 = (Keyword)cGroup_2_2.eContents().get(6);
		private final Assignment cEnumConstantsAssignment_2_2_7 = (Assignment)cGroup_2_2.eContents().get(7);
		private final RuleCall cEnumConstantsIDTerminalRuleCall_2_2_7_0 = (RuleCall)cEnumConstantsAssignment_2_2_7.eContents().get(0);
		private final Group cGroup_2_2_8 = (Group)cGroup_2_2.eContents().get(8);
		private final Keyword cCommaKeyword_2_2_8_0 = (Keyword)cGroup_2_2_8.eContents().get(0);
		private final Assignment cEnumConstantsAssignment_2_2_8_1 = (Assignment)cGroup_2_2_8.eContents().get(1);
		private final RuleCall cEnumConstantsIDTerminalRuleCall_2_2_8_1_0 = (RuleCall)cEnumConstantsAssignment_2_2_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_9 = (Keyword)cGroup_2_2.eContents().get(9);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cEuclidAnnotationTypeAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Keyword cAnnotationKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Assignment cNameAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_3_2_0 = (RuleCall)cNameAssignment_2_3_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3_3 = (Keyword)cGroup_2_3.eContents().get(3);
		private final Assignment cMembersAssignment_2_3_4 = (Assignment)cGroup_2_3.eContents().get(4);
		private final RuleCall cMembersAnnotationFieldParserRuleCall_2_3_4_0 = (RuleCall)cMembersAssignment_2_3_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3_5 = (Keyword)cGroup_2_3.eContents().get(5);
		
		/// *
		// * This is a top level element such as:
		// * class {EuclidClass}
		// * interface {EuclidInterface}
		// * enum {EuclidEnum}
		// * / Type returns EuclidTypeDeclaration:
		//	{EuclidTypeDeclaration} annotations+=XAnnotation* ({EuclidClass.annotationInfo=current} "public"?
		//	abstract?="abstract"? "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//	typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
		//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
		//	| {EuclidInterface.annotationInfo=current} "public"? abstract?="abstract"? "interface" name=ValidID ("<"
		//	typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("implements"
		//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{"
		//	declarations+=Declaration* "}" | {EuclidEnum.annotationInfo=current} "public"? abstract?="abstract"? "enum"
		//	name=ValidID ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "{" enumConstants+=ID
		//	("," enumConstants+=ID)* "}" | {EuclidAnnotationType.annotationInfo=current} "annotation" name=ValidID "{"
		//	members+=AnnotationField* "}");
		public ParserRule getRule() { return rule; }

		//{EuclidTypeDeclaration} annotations+=XAnnotation* ({EuclidClass.annotationInfo=current} "public"? abstract?="abstract"?
		//"class" name=ValidID ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("extends"
		//extends=JvmParameterizedTypeReference)? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}" | {EuclidInterface.annotationInfo=current}
		//"public"? abstract?="abstract"? "interface" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" declarations+=Declaration* "}" | {EuclidEnum.annotationInfo=current}
		//"public"? abstract?="abstract"? "enum" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? "{" enumConstants+=ID ("," enumConstants+=ID)* "}" |
		//{EuclidAnnotationType.annotationInfo=current} "annotation" name=ValidID "{" members+=AnnotationField* "}")
		public Group getGroup() { return cGroup; }

		//{EuclidTypeDeclaration}
		public Action getEuclidTypeDeclarationAction_0() { return cEuclidTypeDeclarationAction_0; }

		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }

		//{EuclidClass.annotationInfo=current} "public"? abstract?="abstract"? "class" name=ValidID ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("extends"
		//extends=JvmParameterizedTypeReference)? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}" | {EuclidInterface.annotationInfo=current}
		//"public"? abstract?="abstract"? "interface" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" declarations+=Declaration* "}" | {EuclidEnum.annotationInfo=current}
		//"public"? abstract?="abstract"? "enum" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? "{" enumConstants+=ID ("," enumConstants+=ID)* "}" |
		//{EuclidAnnotationType.annotationInfo=current} "annotation" name=ValidID "{" members+=AnnotationField* "}"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//{EuclidClass.annotationInfo=current} "public"? abstract?="abstract"? "class" name=ValidID ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("extends"
		//extends=JvmParameterizedTypeReference)? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
		public Group getGroup_2_0() { return cGroup_2_0; }

		//{EuclidClass.annotationInfo=current}
		public Action getEuclidClassAnnotationInfoAction_2_0_0() { return cEuclidClassAnnotationInfoAction_2_0_0; }

		//"public"?
		public Keyword getPublicKeyword_2_0_1() { return cPublicKeyword_2_0_1; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_2_0_2() { return cAbstractAssignment_2_0_2; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_2_0_2_0() { return cAbstractAbstractKeyword_2_0_2_0; }

		//"class"
		public Keyword getClassKeyword_2_0_3() { return cClassKeyword_2_0_3; }

		//name=ValidID
		public Assignment getNameAssignment_2_0_4() { return cNameAssignment_2_0_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_4_0() { return cNameValidIDParserRuleCall_2_0_4_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_0_5() { return cGroup_2_0_5; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0_5_0() { return cLessThanSignKeyword_2_0_5_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_0_5_1() { return cTypeParametersAssignment_2_0_5_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_0_5_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_0_5_2() { return cGroup_2_0_5_2; }

		//","
		public Keyword getCommaKeyword_2_0_5_2_0() { return cCommaKeyword_2_0_5_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_0_5_2_1() { return cTypeParametersAssignment_2_0_5_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_0_5_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_0_5_3() { return cGreaterThanSignKeyword_2_0_5_3; }

		//("extends" extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_0_6() { return cGroup_2_0_6; }

		//"extends"
		public Keyword getExtendsKeyword_2_0_6_0() { return cExtendsKeyword_2_0_6_0; }

		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_0_6_1() { return cExtendsAssignment_2_0_6_1; }

		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_6_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_6_1_0; }

		//("implements" implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_0_7() { return cGroup_2_0_7; }

		//"implements"
		public Keyword getImplementsKeyword_2_0_7_0() { return cImplementsKeyword_2_0_7_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_0_7_1() { return cImplementsAssignment_2_0_7_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_1_0; }

		//("," implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_0_7_2() { return cGroup_2_0_7_2; }

		//","
		public Keyword getCommaKeyword_2_0_7_2_0() { return cCommaKeyword_2_0_7_2_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_0_7_2_1() { return cImplementsAssignment_2_0_7_2_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_8() { return cLeftCurlyBracketKeyword_2_0_8; }

		//members+=Member*
		public Assignment getMembersAssignment_2_0_9() { return cMembersAssignment_2_0_9; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_2_0_9_0() { return cMembersMemberParserRuleCall_2_0_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_0_10() { return cRightCurlyBracketKeyword_2_0_10; }

		//{EuclidInterface.annotationInfo=current} "public"? abstract?="abstract"? "interface" name=ValidID ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("implements"
		//implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{"
		//declarations+=Declaration* "}"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//{EuclidInterface.annotationInfo=current}
		public Action getEuclidInterfaceAnnotationInfoAction_2_1_0() { return cEuclidInterfaceAnnotationInfoAction_2_1_0; }

		//"public"?
		public Keyword getPublicKeyword_2_1_1() { return cPublicKeyword_2_1_1; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_2_1_2() { return cAbstractAssignment_2_1_2; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_2_1_2_0() { return cAbstractAbstractKeyword_2_1_2_0; }

		//"interface"
		public Keyword getInterfaceKeyword_2_1_3() { return cInterfaceKeyword_2_1_3; }

		//name=ValidID
		public Assignment getNameAssignment_2_1_4() { return cNameAssignment_2_1_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_1_4_0() { return cNameValidIDParserRuleCall_2_1_4_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_1_5() { return cGroup_2_1_5; }

		//"<"
		public Keyword getLessThanSignKeyword_2_1_5_0() { return cLessThanSignKeyword_2_1_5_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_1() { return cTypeParametersAssignment_2_1_5_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_5_2() { return cGroup_2_1_5_2; }

		//","
		public Keyword getCommaKeyword_2_1_5_2_0() { return cCommaKeyword_2_1_5_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_2_1() { return cTypeParametersAssignment_2_1_5_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_1_5_3() { return cGreaterThanSignKeyword_2_1_5_3; }

		//("implements" implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_1_6() { return cGroup_2_1_6; }

		//"implements"
		public Keyword getImplementsKeyword_2_1_6_0() { return cImplementsKeyword_2_1_6_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_6_1() { return cImplementsAssignment_2_1_6_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0; }

		//("," implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_1_6_2() { return cGroup_2_1_6_2; }

		//","
		public Keyword getCommaKeyword_2_1_6_2_0() { return cCommaKeyword_2_1_6_2_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_6_2_1() { return cImplementsAssignment_2_1_6_2_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_7() { return cLeftCurlyBracketKeyword_2_1_7; }

		//declarations+=Declaration*
		public Assignment getDeclarationsAssignment_2_1_8() { return cDeclarationsAssignment_2_1_8; }

		//Declaration
		public RuleCall getDeclarationsDeclarationParserRuleCall_2_1_8_0() { return cDeclarationsDeclarationParserRuleCall_2_1_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_9() { return cRightCurlyBracketKeyword_2_1_9; }

		//{EuclidEnum.annotationInfo=current} "public"? abstract?="abstract"? "enum" name=ValidID ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "{" enumConstants+=ID (","
		//enumConstants+=ID)* "}"
		public Group getGroup_2_2() { return cGroup_2_2; }

		//{EuclidEnum.annotationInfo=current}
		public Action getEuclidEnumAnnotationInfoAction_2_2_0() { return cEuclidEnumAnnotationInfoAction_2_2_0; }

		//"public"?
		public Keyword getPublicKeyword_2_2_1() { return cPublicKeyword_2_2_1; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_2_2_2() { return cAbstractAssignment_2_2_2; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_2_2_2_0() { return cAbstractAbstractKeyword_2_2_2_0; }

		//"enum"
		public Keyword getEnumKeyword_2_2_3() { return cEnumKeyword_2_2_3; }

		//name=ValidID
		public Assignment getNameAssignment_2_2_4() { return cNameAssignment_2_2_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_4_0() { return cNameValidIDParserRuleCall_2_2_4_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_2_5() { return cGroup_2_2_5; }

		//"<"
		public Keyword getLessThanSignKeyword_2_2_5_0() { return cLessThanSignKeyword_2_2_5_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_5_1() { return cTypeParametersAssignment_2_2_5_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_2_5_2() { return cGroup_2_2_5_2; }

		//","
		public Keyword getCommaKeyword_2_2_5_2_0() { return cCommaKeyword_2_2_5_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_5_2_1() { return cTypeParametersAssignment_2_2_5_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_2_5_3() { return cGreaterThanSignKeyword_2_2_5_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_6() { return cLeftCurlyBracketKeyword_2_2_6; }

		//enumConstants+=ID
		public Assignment getEnumConstantsAssignment_2_2_7() { return cEnumConstantsAssignment_2_2_7; }

		//ID
		public RuleCall getEnumConstantsIDTerminalRuleCall_2_2_7_0() { return cEnumConstantsIDTerminalRuleCall_2_2_7_0; }

		//("," enumConstants+=ID)*
		public Group getGroup_2_2_8() { return cGroup_2_2_8; }

		//","
		public Keyword getCommaKeyword_2_2_8_0() { return cCommaKeyword_2_2_8_0; }

		//enumConstants+=ID
		public Assignment getEnumConstantsAssignment_2_2_8_1() { return cEnumConstantsAssignment_2_2_8_1; }

		//ID
		public RuleCall getEnumConstantsIDTerminalRuleCall_2_2_8_1_0() { return cEnumConstantsIDTerminalRuleCall_2_2_8_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2_9() { return cRightCurlyBracketKeyword_2_2_9; }

		//{EuclidAnnotationType.annotationInfo=current} "annotation" name=ValidID "{" members+=AnnotationField* "}"
		public Group getGroup_2_3() { return cGroup_2_3; }

		//{EuclidAnnotationType.annotationInfo=current}
		public Action getEuclidAnnotationTypeAnnotationInfoAction_2_3_0() { return cEuclidAnnotationTypeAnnotationInfoAction_2_3_0; }

		//"annotation"
		public Keyword getAnnotationKeyword_2_3_1() { return cAnnotationKeyword_2_3_1; }

		//name=ValidID
		public Assignment getNameAssignment_2_3_2() { return cNameAssignment_2_3_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_2_0() { return cNameValidIDParserRuleCall_2_3_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_3_3() { return cLeftCurlyBracketKeyword_2_3_3; }

		//members+=AnnotationField*
		public Assignment getMembersAssignment_2_3_4() { return cMembersAssignment_2_3_4; }

		//AnnotationField
		public RuleCall getMembersAnnotationFieldParserRuleCall_2_3_4_0() { return cMembersAnnotationFieldParserRuleCall_2_3_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3_5() { return cRightCurlyBracketKeyword_2_3_5; }
	}

	public class AnnotationFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_0_0 = (RuleCall)cTypeAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_0 = (Alternatives)cGroup_1_1.eContents().get(0);
		private final Assignment cFinalAssignment_1_1_0_0 = (Assignment)cAlternatives_1_1_0.eContents().get(0);
		private final Keyword cFinalValKeyword_1_1_0_0_0 = (Keyword)cFinalAssignment_1_1_0_0.eContents().get(0);
		private final Keyword cVarKeyword_1_1_0_1 = (Keyword)cAlternatives_1_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_1_1_0 = (RuleCall)cTypeAssignment_1_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInitialValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInitialValueXExpressionParserRuleCall_3_1_0 = (RuleCall)cInitialValueAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AnnotationField returns EuclidField:
		//	annotations+=XAnnotation* (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID ("="
		//	initialValue=XExpression)? ";"?;
		public ParserRule getRule() { return rule; }

		//annotations+=XAnnotation* (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID ("="
		//initialValue=XExpression)? ";"?
		public Group getGroup() { return cGroup; }

		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_0_0() { return cAnnotationsXAnnotationParserRuleCall_0_0; }

		//type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_1_0() { return cTypeAssignment_1_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_0_0() { return cTypeJvmTypeReferenceParserRuleCall_1_0_0; }

		//(final?="val" | "var") type=JvmTypeReference?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//final?="val" | "var"
		public Alternatives getAlternatives_1_1_0() { return cAlternatives_1_1_0; }

		//final?="val"
		public Assignment getFinalAssignment_1_1_0_0() { return cFinalAssignment_1_1_0_0; }

		//"val"
		public Keyword getFinalValKeyword_1_1_0_0_0() { return cFinalValKeyword_1_1_0_0_0; }

		//"var"
		public Keyword getVarKeyword_1_1_0_1() { return cVarKeyword_1_1_0_1; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_1_1_1() { return cTypeAssignment_1_1_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_1_1_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//("=" initialValue=XExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//initialValue=XExpression
		public Assignment getInitialValueAssignment_3_1() { return cInitialValueAssignment_3_1; }

		//XExpression
		public RuleCall getInitialValueXExpressionParserRuleCall_3_1_0() { return cInitialValueXExpressionParserRuleCall_3_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Member");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEuclidMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cEuclidFieldAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_2_0_1_0 = (RuleCall)cVisibilityAssignment_2_0_1.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2 = (Alternatives)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_0_2_0 = (Group)cAlternatives_2_0_2.eContents().get(0);
		private final Assignment cExtensionAssignment_2_0_2_0_0 = (Assignment)cGroup_2_0_2_0.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_2_0_2_0_0_0 = (Keyword)cExtensionAssignment_2_0_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_0_1 = (Alternatives)cGroup_2_0_2_0.eContents().get(1);
		private final Assignment cFinalAssignment_2_0_2_0_1_0 = (Assignment)cAlternatives_2_0_2_0_1.eContents().get(0);
		private final Keyword cFinalValKeyword_2_0_2_0_1_0_0 = (Keyword)cFinalAssignment_2_0_2_0_1_0.eContents().get(0);
		private final Keyword cVarKeyword_2_0_2_0_1_1 = (Keyword)cAlternatives_2_0_2_0_1.eContents().get(1);
		private final Assignment cTypeAssignment_2_0_2_0_2 = (Assignment)cGroup_2_0_2_0.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0 = (RuleCall)cTypeAssignment_2_0_2_0_2.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_0_3 = (Assignment)cGroup_2_0_2_0.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_0_3_0 = (RuleCall)cNameAssignment_2_0_2_0_3.eContents().get(0);
		private final Group cGroup_2_0_2_1 = (Group)cAlternatives_2_0_2.eContents().get(1);
		private final Assignment cStaticAssignment_2_0_2_1_0 = (Assignment)cGroup_2_0_2_1.eContents().get(0);
		private final Keyword cStaticStaticKeyword_2_0_2_1_0_0 = (Keyword)cStaticAssignment_2_0_2_1_0.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_1_1 = (Alternatives)cGroup_2_0_2_1.eContents().get(1);
		private final Assignment cTypeAssignment_2_0_2_1_1_0 = (Assignment)cAlternatives_2_0_2_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_0_0 = (RuleCall)cTypeAssignment_2_0_2_1_1_0.eContents().get(0);
		private final Group cGroup_2_0_2_1_1_1 = (Group)cAlternatives_2_0_2_1_1.eContents().get(1);
		private final Alternatives cAlternatives_2_0_2_1_1_1_0 = (Alternatives)cGroup_2_0_2_1_1_1.eContents().get(0);
		private final Assignment cFinalAssignment_2_0_2_1_1_1_0_0 = (Assignment)cAlternatives_2_0_2_1_1_1_0.eContents().get(0);
		private final Keyword cFinalValKeyword_2_0_2_1_1_1_0_0_0 = (Keyword)cFinalAssignment_2_0_2_1_1_1_0_0.eContents().get(0);
		private final Keyword cVarKeyword_2_0_2_1_1_1_0_1 = (Keyword)cAlternatives_2_0_2_1_1_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_2_0_2_1_1_1_1 = (Assignment)cGroup_2_0_2_1_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_1_1_0 = (RuleCall)cTypeAssignment_2_0_2_1_1_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_1_2 = (Assignment)cGroup_2_0_2_1.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_1_2_0 = (RuleCall)cNameAssignment_2_0_2_1_2.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cEqualsSignKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cInitialValueXExpressionParserRuleCall_2_0_3_1_0 = (RuleCall)cInitialValueAssignment_2_0_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_4 = (Keyword)cGroup_2_0.eContents().get(4);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cEuclidInnerClassAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Keyword cClassKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cNameAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_1_2_0 = (RuleCall)cNameAssignment_2_1_2.eContents().get(0);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final Keyword cLessThanSignKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_1.eContents().get(0);
		private final Group cGroup_2_1_3_2 = (Group)cGroup_2_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_3_2_0 = (Keyword)cGroup_2_1_3_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_2_1 = (Assignment)cGroup_2_1_3_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1_3_3 = (Keyword)cGroup_2_1_3.eContents().get(3);
		private final Group cGroup_2_1_4 = (Group)cGroup_2_1.eContents().get(4);
		private final Keyword cExtendsKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1_4_1 = (Assignment)cGroup_2_1_4.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0 = (RuleCall)cExtendsAssignment_2_1_4_1.eContents().get(0);
		private final Group cGroup_2_1_5 = (Group)cGroup_2_1.eContents().get(5);
		private final Keyword cImplementsKeyword_2_1_5_0 = (Keyword)cGroup_2_1_5.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_5_1 = (Assignment)cGroup_2_1_5.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0 = (RuleCall)cImplementsAssignment_2_1_5_1.eContents().get(0);
		private final Group cGroup_2_1_5_2 = (Group)cGroup_2_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_2_0 = (Keyword)cGroup_2_1_5_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_5_2_1 = (Assignment)cGroup_2_1_5_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_2_1_0 = (RuleCall)cImplementsAssignment_2_1_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1_6 = (Keyword)cGroup_2_1.eContents().get(6);
		private final Assignment cMembersAssignment_2_1_7 = (Assignment)cGroup_2_1.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_1_7_0 = (RuleCall)cMembersAssignment_2_1_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_8 = (Keyword)cGroup_2_1.eContents().get(8);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cEuclidFunctionAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Alternatives cAlternatives_2_2_1 = (Alternatives)cGroup_2_2.eContents().get(1);
		private final Keyword cDefKeyword_2_2_1_0 = (Keyword)cAlternatives_2_2_1.eContents().get(0);
		private final Assignment cOverrideAssignment_2_2_1_1 = (Assignment)cAlternatives_2_2_1.eContents().get(1);
		private final Keyword cOverrideOverrideKeyword_2_2_1_1_0 = (Keyword)cOverrideAssignment_2_2_1_1.eContents().get(0);
		private final Assignment cVisibilityAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_2_2_2_0 = (RuleCall)cVisibilityAssignment_2_2_2.eContents().get(0);
		private final Assignment cStaticAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final Keyword cStaticStaticKeyword_2_2_3_0 = (Keyword)cStaticAssignment_2_2_3.eContents().get(0);
		private final Assignment cDispatchAssignment_2_2_4 = (Assignment)cGroup_2_2.eContents().get(4);
		private final Keyword cDispatchDispatchKeyword_2_2_4_0 = (Keyword)cDispatchAssignment_2_2_4.eContents().get(0);
		private final Group cGroup_2_2_5 = (Group)cGroup_2_2.eContents().get(5);
		private final Keyword cLessThanSignKeyword_2_2_5_0 = (Keyword)cGroup_2_2_5.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_5_1 = (Assignment)cGroup_2_2_5.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0 = (RuleCall)cTypeParametersAssignment_2_2_5_1.eContents().get(0);
		private final Group cGroup_2_2_5_2 = (Group)cGroup_2_2_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_5_2_0 = (Keyword)cGroup_2_2_5_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_5_2_1 = (Assignment)cGroup_2_2_5_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_5_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_2_5_3 = (Keyword)cGroup_2_2_5.eContents().get(3);
		private final Alternatives cAlternatives_2_2_6 = (Alternatives)cGroup_2_2.eContents().get(6);
		private final Group cGroup_2_2_6_0 = (Group)cAlternatives_2_2_6.eContents().get(0);
		private final Group cGroup_2_2_6_0_0 = (Group)cGroup_2_2_6_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_2_2_6_0_0_0 = (Assignment)cGroup_2_2_6_0_0.eContents().get(0);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_0_0_0_0 = (RuleCall)cReturnTypeAssignment_2_2_6_0_0_0.eContents().get(0);
		private final Assignment cCreateExtensionInfoAssignment_2_2_6_0_0_1 = (Assignment)cGroup_2_2_6_0_0.eContents().get(1);
		private final RuleCall cCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_0_0_1_0 = (RuleCall)cCreateExtensionInfoAssignment_2_2_6_0_0_1.eContents().get(0);
		private final Assignment cNameAssignment_2_2_6_0_0_2 = (Assignment)cGroup_2_2_6_0_0.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_2_6_0_0_2_0 = (RuleCall)cNameAssignment_2_2_6_0_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_2_6_0_0_3 = (Keyword)cGroup_2_2_6_0_0.eContents().get(3);
		private final Group cGroup_2_2_6_1 = (Group)cAlternatives_2_2_6.eContents().get(1);
		private final Group cGroup_2_2_6_1_0 = (Group)cGroup_2_2_6_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_2_2_6_1_0_0 = (Assignment)cGroup_2_2_6_1_0.eContents().get(0);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_1_0_0_0 = (RuleCall)cReturnTypeAssignment_2_2_6_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_2_2_6_1_0_1 = (Assignment)cGroup_2_2_6_1_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_2_6_1_0_1_0 = (RuleCall)cNameAssignment_2_2_6_1_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_2_6_1_0_2 = (Keyword)cGroup_2_2_6_1_0.eContents().get(2);
		private final Group cGroup_2_2_6_2 = (Group)cAlternatives_2_2_6.eContents().get(2);
		private final Group cGroup_2_2_6_2_0 = (Group)cGroup_2_2_6_2.eContents().get(0);
		private final Assignment cCreateExtensionInfoAssignment_2_2_6_2_0_0 = (Assignment)cGroup_2_2_6_2_0.eContents().get(0);
		private final RuleCall cCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_2_0_0_0 = (RuleCall)cCreateExtensionInfoAssignment_2_2_6_2_0_0.eContents().get(0);
		private final Assignment cNameAssignment_2_2_6_2_0_1 = (Assignment)cGroup_2_2_6_2_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_2_6_2_0_1_0 = (RuleCall)cNameAssignment_2_2_6_2_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_2_6_2_0_2 = (Keyword)cGroup_2_2_6_2_0.eContents().get(2);
		private final Group cGroup_2_2_6_3 = (Group)cAlternatives_2_2_6.eContents().get(3);
		private final Assignment cNameAssignment_2_2_6_3_0 = (Assignment)cGroup_2_2_6_3.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_2_2_6_3_0_0 = (RuleCall)cNameAssignment_2_2_6_3_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_2_6_3_1 = (Keyword)cGroup_2_2_6_3.eContents().get(1);
		private final Group cGroup_2_2_7 = (Group)cGroup_2_2.eContents().get(7);
		private final Assignment cParametersAssignment_2_2_7_0 = (Assignment)cGroup_2_2_7.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_2_7_0_0 = (RuleCall)cParametersAssignment_2_2_7_0.eContents().get(0);
		private final Group cGroup_2_2_7_1 = (Group)cGroup_2_2_7.eContents().get(1);
		private final Keyword cCommaKeyword_2_2_7_1_0 = (Keyword)cGroup_2_2_7_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_2_7_1_1 = (Assignment)cGroup_2_2_7_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_2_7_1_1_0 = (RuleCall)cParametersAssignment_2_2_7_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2_8 = (Keyword)cGroup_2_2.eContents().get(8);
		private final Group cGroup_2_2_9 = (Group)cGroup_2_2.eContents().get(9);
		private final Keyword cThrowsKeyword_2_2_9_0 = (Keyword)cGroup_2_2_9.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_2_9_1 = (Assignment)cGroup_2_2_9.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_2_9_1_0 = (RuleCall)cExceptionsAssignment_2_2_9_1.eContents().get(0);
		private final Group cGroup_2_2_9_2 = (Group)cGroup_2_2_9.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_9_2_0 = (Keyword)cGroup_2_2_9_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_2_9_2_1 = (Assignment)cGroup_2_2_9_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_2_9_2_1_0 = (RuleCall)cExceptionsAssignment_2_2_9_2_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2_2_10 = (Assignment)cGroup_2_2.eContents().get(10);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_2_10_0 = (RuleCall)cExpressionAssignment_2_2_10.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cEuclidConstructorAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Assignment cVisibilityAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_2_3_1_0 = (RuleCall)cVisibilityAssignment_2_3_1.eContents().get(0);
		private final Keyword cNewKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Group cGroup_2_3_3 = (Group)cGroup_2_3.eContents().get(3);
		private final Keyword cLessThanSignKeyword_2_3_3_0 = (Keyword)cGroup_2_3_3.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_3_3_1 = (Assignment)cGroup_2_3_3.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_3_3_1_0 = (RuleCall)cTypeParametersAssignment_2_3_3_1.eContents().get(0);
		private final Group cGroup_2_3_3_2 = (Group)cGroup_2_3_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_3_2_0 = (Keyword)cGroup_2_3_3_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_3_3_2_1 = (Assignment)cGroup_2_3_3_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_3_3_2_1_0 = (RuleCall)cTypeParametersAssignment_2_3_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3_3_3 = (Keyword)cGroup_2_3_3.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_2_3_4 = (Keyword)cGroup_2_3.eContents().get(4);
		private final Group cGroup_2_3_5 = (Group)cGroup_2_3.eContents().get(5);
		private final Assignment cParametersAssignment_2_3_5_0 = (Assignment)cGroup_2_3_5.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_3_5_0_0 = (RuleCall)cParametersAssignment_2_3_5_0.eContents().get(0);
		private final Group cGroup_2_3_5_1 = (Group)cGroup_2_3_5.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_5_1_0 = (Keyword)cGroup_2_3_5_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_3_5_1_1 = (Assignment)cGroup_2_3_5_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_3_5_1_1_0 = (RuleCall)cParametersAssignment_2_3_5_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3_6 = (Keyword)cGroup_2_3.eContents().get(6);
		private final Group cGroup_2_3_7 = (Group)cGroup_2_3.eContents().get(7);
		private final Keyword cThrowsKeyword_2_3_7_0 = (Keyword)cGroup_2_3_7.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_3_7_1 = (Assignment)cGroup_2_3_7.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_3_7_1_0 = (RuleCall)cExceptionsAssignment_2_3_7_1.eContents().get(0);
		private final Group cGroup_2_3_7_2 = (Group)cGroup_2_3_7.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_7_2_0 = (Keyword)cGroup_2_3_7_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_3_7_2_1 = (Assignment)cGroup_2_3_7_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_3_7_2_1_0 = (RuleCall)cExceptionsAssignment_2_3_7_2_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2_3_8 = (Assignment)cGroup_2_3.eContents().get(8);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_3_8_0 = (RuleCall)cExpressionAssignment_2_3_8.eContents().get(0);
		
		/// *
		// * This is an inner element inside a class, interface or enum, such as:
		// * 'val' or 'var' returns EuclidField
		// * 'def' method returns EuclidFunction
		// * inner class returns EuclidInnerClass
		// * / Member returns EuclidMember:
		//	{EuclidMember} annotations+=XAnnotation* ({EuclidField.annotationInfo=current} visibility=Visibility?
		//	(extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? | static?="static"?
		//	(type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ("=" initialValue=XExpression)?
		//	";"? | {EuclidInnerClass.annotationInfo=current} "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//	typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
		//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
		//	| {EuclidFunction.annotationInfo=current} ("def" | override?="override") visibility=Visibility? static?="static"?
		//	dispatch?="dispatch"? ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=>
		//	(returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
		//	(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
		//	name=ValidID "(") (parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference
		//	("," exceptions+=JvmTypeReference)*)? expression=XBlockExpression? | {EuclidConstructor.annotationInfo=current}
		//	visibility=Visibility? "new" ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "("
		//	(parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference (","
		//	exceptions+=JvmTypeReference)*)? expression=XBlockExpression);
		public ParserRule getRule() { return rule; }

		//{EuclidMember} annotations+=XAnnotation* ({EuclidField.annotationInfo=current} visibility=Visibility?
		//(extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? | static?="static"?
		//(type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ("=" initialValue=XExpression)?
		//";"? | {EuclidInnerClass.annotationInfo=current} "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
		//implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}" |
		//{EuclidFunction.annotationInfo=current} ("def" | override?="override") visibility=Visibility? static?="static"?
		//dispatch?="dispatch"? ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=>
		//(returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
		//(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
		//name=ValidID "(") (parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference (","
		//exceptions+=JvmTypeReference)*)? expression=XBlockExpression? | {EuclidConstructor.annotationInfo=current}
		//visibility=Visibility? "new" ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "("
		//(parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference (","
		//exceptions+=JvmTypeReference)*)? expression=XBlockExpression)
		public Group getGroup() { return cGroup; }

		//{EuclidMember}
		public Action getEuclidMemberAction_0() { return cEuclidMemberAction_0; }

		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }

		//{EuclidField.annotationInfo=current} visibility=Visibility? (extension?="extension" (final?="val" | "var")?
		//type=JvmTypeReference name=ValidID? | static?="static"? (type=JvmTypeReference | (final?="val" | "var")
		//type=JvmTypeReference?) name=ValidID) ("=" initialValue=XExpression)? ";"? | {EuclidInnerClass.annotationInfo=current}
		//"class" name=ValidID ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("extends"
		//extends=JvmParameterizedTypeReference)? ("implements" implements+=JvmParameterizedTypeReference (","
		//implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}" | {EuclidFunction.annotationInfo=current} ("def"
		//| override?="override") visibility=Visibility? static?="static"? dispatch?="dispatch"? ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=> (returnType=JvmTypeReference
		//createExtensionInfo=CreateExtensionInfo name=ValidID "(") | => (returnType=JvmTypeReference name=ValidID "(") | =>
		//(createExtensionInfo=CreateExtensionInfo name=ValidID "(") | name=ValidID "(") (parameters+=Parameter (","
		//parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		//expression=XBlockExpression? | {EuclidConstructor.annotationInfo=current} visibility=Visibility? "new" ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "(" (parameters+=Parameter (","
		//parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		//expression=XBlockExpression
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//{EuclidField.annotationInfo=current} visibility=Visibility? (extension?="extension" (final?="val" | "var")?
		//type=JvmTypeReference name=ValidID? | static?="static"? (type=JvmTypeReference | (final?="val" | "var")
		//type=JvmTypeReference?) name=ValidID) ("=" initialValue=XExpression)? ";"?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//{EuclidField.annotationInfo=current}
		public Action getEuclidFieldAnnotationInfoAction_2_0_0() { return cEuclidFieldAnnotationInfoAction_2_0_0; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_2_0_1() { return cVisibilityAssignment_2_0_1; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_2_0_1_0() { return cVisibilityVisibilityEnumRuleCall_2_0_1_0; }

		//extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? | static?="static"?
		//(type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID
		public Alternatives getAlternatives_2_0_2() { return cAlternatives_2_0_2; }

		//extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID?
		public Group getGroup_2_0_2_0() { return cGroup_2_0_2_0; }

		//extension?="extension"
		public Assignment getExtensionAssignment_2_0_2_0_0() { return cExtensionAssignment_2_0_2_0_0; }

		//"extension"
		public Keyword getExtensionExtensionKeyword_2_0_2_0_0_0() { return cExtensionExtensionKeyword_2_0_2_0_0_0; }

		//(final?="val" | "var")?
		public Alternatives getAlternatives_2_0_2_0_1() { return cAlternatives_2_0_2_0_1; }

		//final?="val"
		public Assignment getFinalAssignment_2_0_2_0_1_0() { return cFinalAssignment_2_0_2_0_1_0; }

		//"val"
		public Keyword getFinalValKeyword_2_0_2_0_1_0_0() { return cFinalValKeyword_2_0_2_0_1_0_0; }

		//"var"
		public Keyword getVarKeyword_2_0_2_0_1_1() { return cVarKeyword_2_0_2_0_1_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_0_2() { return cTypeAssignment_2_0_2_0_2; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0; }

		//name=ValidID?
		public Assignment getNameAssignment_2_0_2_0_3() { return cNameAssignment_2_0_2_0_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_0_3_0() { return cNameValidIDParserRuleCall_2_0_2_0_3_0; }

		//static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID
		public Group getGroup_2_0_2_1() { return cGroup_2_0_2_1; }

		//static?="static"?
		public Assignment getStaticAssignment_2_0_2_1_0() { return cStaticAssignment_2_0_2_1_0; }

		//"static"
		public Keyword getStaticStaticKeyword_2_0_2_1_0_0() { return cStaticStaticKeyword_2_0_2_1_0_0; }

		//type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?
		public Alternatives getAlternatives_2_0_2_1_1() { return cAlternatives_2_0_2_1_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_1_1_0() { return cTypeAssignment_2_0_2_1_1_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_0_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_0_0; }

		//(final?="val" | "var") type=JvmTypeReference?
		public Group getGroup_2_0_2_1_1_1() { return cGroup_2_0_2_1_1_1; }

		//final?="val" | "var"
		public Alternatives getAlternatives_2_0_2_1_1_1_0() { return cAlternatives_2_0_2_1_1_1_0; }

		//final?="val"
		public Assignment getFinalAssignment_2_0_2_1_1_1_0_0() { return cFinalAssignment_2_0_2_1_1_1_0_0; }

		//"val"
		public Keyword getFinalValKeyword_2_0_2_1_1_1_0_0_0() { return cFinalValKeyword_2_0_2_1_1_1_0_0_0; }

		//"var"
		public Keyword getVarKeyword_2_0_2_1_1_1_0_1() { return cVarKeyword_2_0_2_1_1_1_0_1; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_2_0_2_1_1_1_1() { return cTypeAssignment_2_0_2_1_1_1_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_1_1_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2_0_2_1_2() { return cNameAssignment_2_0_2_1_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_1_2_0() { return cNameValidIDParserRuleCall_2_0_2_1_2_0; }

		//("=" initialValue=XExpression)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }

		//"="
		public Keyword getEqualsSignKeyword_2_0_3_0() { return cEqualsSignKeyword_2_0_3_0; }

		//initialValue=XExpression
		public Assignment getInitialValueAssignment_2_0_3_1() { return cInitialValueAssignment_2_0_3_1; }

		//XExpression
		public RuleCall getInitialValueXExpressionParserRuleCall_2_0_3_1_0() { return cInitialValueXExpressionParserRuleCall_2_0_3_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_2_0_4() { return cSemicolonKeyword_2_0_4; }

		//{EuclidInnerClass.annotationInfo=current} "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
		//implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//{EuclidInnerClass.annotationInfo=current}
		public Action getEuclidInnerClassAnnotationInfoAction_2_1_0() { return cEuclidInnerClassAnnotationInfoAction_2_1_0; }

		//"class"
		public Keyword getClassKeyword_2_1_1() { return cClassKeyword_2_1_1; }

		//name=ValidID
		public Assignment getNameAssignment_2_1_2() { return cNameAssignment_2_1_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_1_2_0() { return cNameValidIDParserRuleCall_2_1_2_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }

		//"<"
		public Keyword getLessThanSignKeyword_2_1_3_0() { return cLessThanSignKeyword_2_1_3_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_1() { return cTypeParametersAssignment_2_1_3_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_3_2() { return cGroup_2_1_3_2; }

		//","
		public Keyword getCommaKeyword_2_1_3_2_0() { return cCommaKeyword_2_1_3_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_2_1() { return cTypeParametersAssignment_2_1_3_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_1_3_3() { return cGreaterThanSignKeyword_2_1_3_3; }

		//("extends" extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }

		//"extends"
		public Keyword getExtendsKeyword_2_1_4_0() { return cExtendsKeyword_2_1_4_0; }

		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_1_4_1() { return cExtendsAssignment_2_1_4_1; }

		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0; }

		//("implements" implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_1_5() { return cGroup_2_1_5; }

		//"implements"
		public Keyword getImplementsKeyword_2_1_5_0() { return cImplementsKeyword_2_1_5_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_5_1() { return cImplementsAssignment_2_1_5_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0; }

		//("," implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_1_5_2() { return cGroup_2_1_5_2; }

		//","
		public Keyword getCommaKeyword_2_1_5_2_0() { return cCommaKeyword_2_1_5_2_0; }

		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_5_2_1() { return cImplementsAssignment_2_1_5_2_1; }

		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_6() { return cLeftCurlyBracketKeyword_2_1_6; }

		//members+=Member*
		public Assignment getMembersAssignment_2_1_7() { return cMembersAssignment_2_1_7; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_2_1_7_0() { return cMembersMemberParserRuleCall_2_1_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_8() { return cRightCurlyBracketKeyword_2_1_8; }

		//{EuclidFunction.annotationInfo=current} ("def" | override?="override") visibility=Visibility? static?="static"?
		//dispatch?="dispatch"? ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=>
		//(returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
		//(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
		//name=ValidID "(") (parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference (","
		//exceptions+=JvmTypeReference)*)? expression=XBlockExpression?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//{EuclidFunction.annotationInfo=current}
		public Action getEuclidFunctionAnnotationInfoAction_2_2_0() { return cEuclidFunctionAnnotationInfoAction_2_2_0; }

		//"def" | override?="override"
		public Alternatives getAlternatives_2_2_1() { return cAlternatives_2_2_1; }

		//"def"
		public Keyword getDefKeyword_2_2_1_0() { return cDefKeyword_2_2_1_0; }

		//override?="override"
		public Assignment getOverrideAssignment_2_2_1_1() { return cOverrideAssignment_2_2_1_1; }

		//"override"
		public Keyword getOverrideOverrideKeyword_2_2_1_1_0() { return cOverrideOverrideKeyword_2_2_1_1_0; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_2_2_2() { return cVisibilityAssignment_2_2_2; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_2_2_2_0() { return cVisibilityVisibilityEnumRuleCall_2_2_2_0; }

		//static?="static"?
		public Assignment getStaticAssignment_2_2_3() { return cStaticAssignment_2_2_3; }

		//"static"
		public Keyword getStaticStaticKeyword_2_2_3_0() { return cStaticStaticKeyword_2_2_3_0; }

		//dispatch?="dispatch"?
		public Assignment getDispatchAssignment_2_2_4() { return cDispatchAssignment_2_2_4; }

		//"dispatch"
		public Keyword getDispatchDispatchKeyword_2_2_4_0() { return cDispatchDispatchKeyword_2_2_4_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_2_5() { return cGroup_2_2_5; }

		//"<"
		public Keyword getLessThanSignKeyword_2_2_5_0() { return cLessThanSignKeyword_2_2_5_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_5_1() { return cTypeParametersAssignment_2_2_5_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_2_5_2() { return cGroup_2_2_5_2; }

		//","
		public Keyword getCommaKeyword_2_2_5_2_0() { return cCommaKeyword_2_2_5_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_5_2_1() { return cTypeParametersAssignment_2_2_5_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_5_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_2_5_3() { return cGreaterThanSignKeyword_2_2_5_3; }

		//=> (returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
		//(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
		//name=ValidID "("
		public Alternatives getAlternatives_2_2_6() { return cAlternatives_2_2_6; }

		//=> (returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(")
		public Group getGroup_2_2_6_0() { return cGroup_2_2_6_0; }

		//returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "("
		public Group getGroup_2_2_6_0_0() { return cGroup_2_2_6_0_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_2_2_6_0_0_0() { return cReturnTypeAssignment_2_2_6_0_0_0; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_0_0_0_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_0_0_0_0; }

		//createExtensionInfo=CreateExtensionInfo
		public Assignment getCreateExtensionInfoAssignment_2_2_6_0_0_1() { return cCreateExtensionInfoAssignment_2_2_6_0_0_1; }

		//CreateExtensionInfo
		public RuleCall getCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_0_0_1_0() { return cCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_0_0_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2_2_6_0_0_2() { return cNameAssignment_2_2_6_0_0_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_6_0_0_2_0() { return cNameValidIDParserRuleCall_2_2_6_0_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_6_0_0_3() { return cLeftParenthesisKeyword_2_2_6_0_0_3; }

		//=> (returnType=JvmTypeReference name=ValidID "(")
		public Group getGroup_2_2_6_1() { return cGroup_2_2_6_1; }

		//returnType=JvmTypeReference name=ValidID "("
		public Group getGroup_2_2_6_1_0() { return cGroup_2_2_6_1_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_2_2_6_1_0_0() { return cReturnTypeAssignment_2_2_6_1_0_0; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_1_0_0_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_2_2_6_1_0_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_2_2_6_1_0_1() { return cNameAssignment_2_2_6_1_0_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_6_1_0_1_0() { return cNameValidIDParserRuleCall_2_2_6_1_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_6_1_0_2() { return cLeftParenthesisKeyword_2_2_6_1_0_2; }

		//=> (createExtensionInfo=CreateExtensionInfo name=ValidID "(")
		public Group getGroup_2_2_6_2() { return cGroup_2_2_6_2; }

		//createExtensionInfo=CreateExtensionInfo name=ValidID "("
		public Group getGroup_2_2_6_2_0() { return cGroup_2_2_6_2_0; }

		//createExtensionInfo=CreateExtensionInfo
		public Assignment getCreateExtensionInfoAssignment_2_2_6_2_0_0() { return cCreateExtensionInfoAssignment_2_2_6_2_0_0; }

		//CreateExtensionInfo
		public RuleCall getCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_2_0_0_0() { return cCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_2_6_2_0_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_2_2_6_2_0_1() { return cNameAssignment_2_2_6_2_0_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_6_2_0_1_0() { return cNameValidIDParserRuleCall_2_2_6_2_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_6_2_0_2() { return cLeftParenthesisKeyword_2_2_6_2_0_2; }

		//name=ValidID "("
		public Group getGroup_2_2_6_3() { return cGroup_2_2_6_3; }

		//name=ValidID
		public Assignment getNameAssignment_2_2_6_3_0() { return cNameAssignment_2_2_6_3_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_6_3_0_0() { return cNameValidIDParserRuleCall_2_2_6_3_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_6_3_1() { return cLeftParenthesisKeyword_2_2_6_3_1; }

		//(parameters+=Parameter ("," parameters+=Parameter)*)?
		public Group getGroup_2_2_7() { return cGroup_2_2_7; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_2_2_7_0() { return cParametersAssignment_2_2_7_0; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_2_7_0_0() { return cParametersParameterParserRuleCall_2_2_7_0_0; }

		//("," parameters+=Parameter)*
		public Group getGroup_2_2_7_1() { return cGroup_2_2_7_1; }

		//","
		public Keyword getCommaKeyword_2_2_7_1_0() { return cCommaKeyword_2_2_7_1_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_2_2_7_1_1() { return cParametersAssignment_2_2_7_1_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_2_7_1_1_0() { return cParametersParameterParserRuleCall_2_2_7_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2_8() { return cRightParenthesisKeyword_2_2_8; }

		//("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_2_9() { return cGroup_2_2_9; }

		//"throws"
		public Keyword getThrowsKeyword_2_2_9_0() { return cThrowsKeyword_2_2_9_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_2_9_1() { return cExceptionsAssignment_2_2_9_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_2_9_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_2_9_1_0; }

		//("," exceptions+=JvmTypeReference)*
		public Group getGroup_2_2_9_2() { return cGroup_2_2_9_2; }

		//","
		public Keyword getCommaKeyword_2_2_9_2_0() { return cCommaKeyword_2_2_9_2_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_2_9_2_1() { return cExceptionsAssignment_2_2_9_2_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_2_9_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_2_9_2_1_0; }

		//expression=XBlockExpression?
		public Assignment getExpressionAssignment_2_2_10() { return cExpressionAssignment_2_2_10; }

		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_2_10_0() { return cExpressionXBlockExpressionParserRuleCall_2_2_10_0; }

		//{EuclidConstructor.annotationInfo=current} visibility=Visibility? "new" ("<" typeParameters+=JvmTypeParameter (","
		//typeParameters+=JvmTypeParameter)* ">")? "(" (parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws"
		//exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)? expression=XBlockExpression
		public Group getGroup_2_3() { return cGroup_2_3; }

		//{EuclidConstructor.annotationInfo=current}
		public Action getEuclidConstructorAnnotationInfoAction_2_3_0() { return cEuclidConstructorAnnotationInfoAction_2_3_0; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_2_3_1() { return cVisibilityAssignment_2_3_1; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_2_3_1_0() { return cVisibilityVisibilityEnumRuleCall_2_3_1_0; }

		//"new"
		public Keyword getNewKeyword_2_3_2() { return cNewKeyword_2_3_2; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_2_3_3() { return cGroup_2_3_3; }

		//"<"
		public Keyword getLessThanSignKeyword_2_3_3_0() { return cLessThanSignKeyword_2_3_3_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_3_3_1() { return cTypeParametersAssignment_2_3_3_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_3_3_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_3_3_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_3_3_2() { return cGroup_2_3_3_2; }

		//","
		public Keyword getCommaKeyword_2_3_3_2_0() { return cCommaKeyword_2_3_3_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_3_3_2_1() { return cTypeParametersAssignment_2_3_3_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_3_3_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_3_3_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3_3_3() { return cGreaterThanSignKeyword_2_3_3_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_3_4() { return cLeftParenthesisKeyword_2_3_4; }

		//(parameters+=Parameter ("," parameters+=Parameter)*)?
		public Group getGroup_2_3_5() { return cGroup_2_3_5; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_2_3_5_0() { return cParametersAssignment_2_3_5_0; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_3_5_0_0() { return cParametersParameterParserRuleCall_2_3_5_0_0; }

		//("," parameters+=Parameter)*
		public Group getGroup_2_3_5_1() { return cGroup_2_3_5_1; }

		//","
		public Keyword getCommaKeyword_2_3_5_1_0() { return cCommaKeyword_2_3_5_1_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_2_3_5_1_1() { return cParametersAssignment_2_3_5_1_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_3_5_1_1_0() { return cParametersParameterParserRuleCall_2_3_5_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3_6() { return cRightParenthesisKeyword_2_3_6; }

		//("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_3_7() { return cGroup_2_3_7; }

		//"throws"
		public Keyword getThrowsKeyword_2_3_7_0() { return cThrowsKeyword_2_3_7_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_3_7_1() { return cExceptionsAssignment_2_3_7_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_3_7_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_3_7_1_0; }

		//("," exceptions+=JvmTypeReference)*
		public Group getGroup_2_3_7_2() { return cGroup_2_3_7_2; }

		//","
		public Keyword getCommaKeyword_2_3_7_2_0() { return cCommaKeyword_2_3_7_2_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_3_7_2_1() { return cExceptionsAssignment_2_3_7_2_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_3_7_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_3_7_2_1_0; }

		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_3_8() { return cExpressionAssignment_2_3_8; }

		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_3_8_0() { return cExpressionXBlockExpressionParserRuleCall_2_3_8_0; }
	}

	public class DeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Declaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cVisibilityAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0_0 = (RuleCall)cVisibilityAssignment_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cAlternatives_0_1.eContents().get(0);
		private final Assignment cExtensionAssignment_0_1_0_0 = (Assignment)cGroup_0_1_0.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_0_1_0_0_0 = (Keyword)cExtensionAssignment_0_1_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_0_1 = (Alternatives)cGroup_0_1_0.eContents().get(1);
		private final Assignment cFinalAssignment_0_1_0_1_0 = (Assignment)cAlternatives_0_1_0_1.eContents().get(0);
		private final Keyword cFinalValKeyword_0_1_0_1_0_0 = (Keyword)cFinalAssignment_0_1_0_1_0.eContents().get(0);
		private final Keyword cVarKeyword_0_1_0_1_1 = (Keyword)cAlternatives_0_1_0_1.eContents().get(1);
		private final Assignment cTypeAssignment_0_1_0_2 = (Assignment)cGroup_0_1_0.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_1_0_2_0 = (RuleCall)cTypeAssignment_0_1_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_1_0_3 = (Assignment)cGroup_0_1_0.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_0_1_0_3_0 = (RuleCall)cNameAssignment_0_1_0_3.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cAlternatives_0_1.eContents().get(1);
		private final Assignment cStaticAssignment_0_1_1_0 = (Assignment)cGroup_0_1_1.eContents().get(0);
		private final Keyword cStaticStaticKeyword_0_1_1_0_0 = (Keyword)cStaticAssignment_0_1_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1_1_1 = (Alternatives)cGroup_0_1_1.eContents().get(1);
		private final Assignment cTypeAssignment_0_1_1_1_0 = (Assignment)cAlternatives_0_1_1_1.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_1_1_1_0_0 = (RuleCall)cTypeAssignment_0_1_1_1_0.eContents().get(0);
		private final Group cGroup_0_1_1_1_1 = (Group)cAlternatives_0_1_1_1.eContents().get(1);
		private final Alternatives cAlternatives_0_1_1_1_1_0 = (Alternatives)cGroup_0_1_1_1_1.eContents().get(0);
		private final Assignment cFinalAssignment_0_1_1_1_1_0_0 = (Assignment)cAlternatives_0_1_1_1_1_0.eContents().get(0);
		private final Keyword cFinalValKeyword_0_1_1_1_1_0_0_0 = (Keyword)cFinalAssignment_0_1_1_1_1_0_0.eContents().get(0);
		private final Keyword cVarKeyword_0_1_1_1_1_0_1 = (Keyword)cAlternatives_0_1_1_1_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_0_1_1_1_1_1 = (Assignment)cGroup_0_1_1_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_1_1_1_1_1_0 = (RuleCall)cTypeAssignment_0_1_1_1_1_1.eContents().get(0);
		private final Assignment cNameAssignment_0_1_1_2 = (Assignment)cGroup_0_1_1.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_0_1_1_2_0 = (RuleCall)cNameAssignment_0_1_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cDefKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Assignment cOverrideAssignment_1_0_1 = (Assignment)cAlternatives_1_0.eContents().get(1);
		private final Keyword cOverrideOverrideKeyword_1_0_1_0 = (Keyword)cOverrideAssignment_1_0_1.eContents().get(0);
		private final Assignment cVisibilityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_1_1_0 = (RuleCall)cVisibilityAssignment_1_1.eContents().get(0);
		private final Assignment cStaticAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Keyword cStaticStaticKeyword_1_2_0 = (Keyword)cStaticAssignment_1_2.eContents().get(0);
		private final Assignment cDispatchAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final Keyword cDispatchDispatchKeyword_1_3_0 = (Keyword)cDispatchAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cLessThanSignKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_1_4_1_0 = (RuleCall)cTypeParametersAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_4_2 = (Group)cGroup_1_4.eContents().get(2);
		private final Keyword cCommaKeyword_1_4_2_0 = (Keyword)cGroup_1_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_1_4_2_1 = (Assignment)cGroup_1_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_1_4_2_1_0 = (RuleCall)cTypeParametersAssignment_1_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_4_3 = (Keyword)cGroup_1_4.eContents().get(3);
		private final Alternatives cAlternatives_1_5 = (Alternatives)cGroup_1.eContents().get(5);
		private final Group cGroup_1_5_0 = (Group)cAlternatives_1_5.eContents().get(0);
		private final Group cGroup_1_5_0_0 = (Group)cGroup_1_5_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_1_5_0_0_0 = (Assignment)cGroup_1_5_0_0.eContents().get(0);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_1_5_0_0_0_0 = (RuleCall)cReturnTypeAssignment_1_5_0_0_0.eContents().get(0);
		private final Assignment cCreateExtensionInfoAssignment_1_5_0_0_1 = (Assignment)cGroup_1_5_0_0.eContents().get(1);
		private final RuleCall cCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_0_0_1_0 = (RuleCall)cCreateExtensionInfoAssignment_1_5_0_0_1.eContents().get(0);
		private final Assignment cNameAssignment_1_5_0_0_2 = (Assignment)cGroup_1_5_0_0.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_1_5_0_0_2_0 = (RuleCall)cNameAssignment_1_5_0_0_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_5_0_0_3 = (Keyword)cGroup_1_5_0_0.eContents().get(3);
		private final Group cGroup_1_5_1 = (Group)cAlternatives_1_5.eContents().get(1);
		private final Group cGroup_1_5_1_0 = (Group)cGroup_1_5_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_1_5_1_0_0 = (Assignment)cGroup_1_5_1_0.eContents().get(0);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_1_5_1_0_0_0 = (RuleCall)cReturnTypeAssignment_1_5_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_5_1_0_1 = (Assignment)cGroup_1_5_1_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_5_1_0_1_0 = (RuleCall)cNameAssignment_1_5_1_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_5_1_0_2 = (Keyword)cGroup_1_5_1_0.eContents().get(2);
		private final Group cGroup_1_5_2 = (Group)cAlternatives_1_5.eContents().get(2);
		private final Group cGroup_1_5_2_0 = (Group)cGroup_1_5_2.eContents().get(0);
		private final Assignment cCreateExtensionInfoAssignment_1_5_2_0_0 = (Assignment)cGroup_1_5_2_0.eContents().get(0);
		private final RuleCall cCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_2_0_0_0 = (RuleCall)cCreateExtensionInfoAssignment_1_5_2_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_5_2_0_1 = (Assignment)cGroup_1_5_2_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_5_2_0_1_0 = (RuleCall)cNameAssignment_1_5_2_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_5_2_0_2 = (Keyword)cGroup_1_5_2_0.eContents().get(2);
		private final Group cGroup_1_5_3 = (Group)cAlternatives_1_5.eContents().get(3);
		private final Assignment cNameAssignment_1_5_3_0 = (Assignment)cGroup_1_5_3.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_1_5_3_0_0 = (RuleCall)cNameAssignment_1_5_3_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_5_3_1 = (Keyword)cGroup_1_5_3.eContents().get(1);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Assignment cParametersAssignment_1_6_0 = (Assignment)cGroup_1_6.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_1_6_0_0 = (RuleCall)cParametersAssignment_1_6_0.eContents().get(0);
		private final Group cGroup_1_6_1 = (Group)cGroup_1_6.eContents().get(1);
		private final Keyword cCommaKeyword_1_6_1_0 = (Keyword)cGroup_1_6_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_6_1_1 = (Assignment)cGroup_1_6_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_1_6_1_1_0 = (RuleCall)cParametersAssignment_1_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cThrowsKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cExceptionsAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_1_8_1_0 = (RuleCall)cExceptionsAssignment_1_8_1.eContents().get(0);
		private final Group cGroup_1_8_2 = (Group)cGroup_1_8.eContents().get(2);
		private final Keyword cCommaKeyword_1_8_2_0 = (Keyword)cGroup_1_8_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_1_8_2_1 = (Assignment)cGroup_1_8_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_1_8_2_1_0 = (RuleCall)cExceptionsAssignment_1_8_2_1.eContents().get(0);
		
		//Declaration returns EuclidDeclaration: //{EuclidField.annotationInfo = current}
		//	visibility=Visibility? (extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? |
		//	static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ";"? //{EuclidDeclaration} annotations+=XAnnotation*
		//	//{EuclidFunction.annotationInfo = current}
		//	| ("def" | override?="override") visibility=Visibility? static?="static"? dispatch?="dispatch"? ("<"
		//	typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=> (returnType=JvmTypeReference
		//	createExtensionInfo=CreateExtensionInfo name=ValidID "(") | => (returnType=JvmTypeReference name=ValidID "(") | =>
		//	(createExtensionInfo=CreateExtensionInfo name=ValidID "(") | name=ValidID "(") (parameters+=Parameter (","
		//	parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?;
		public ParserRule getRule() { return rule; }

		////{EuclidField.annotationInfo = current}
		//visibility=Visibility? (extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? |
		//static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ";"? //{EuclidDeclaration} annotations+=XAnnotation*
		////{EuclidFunction.annotationInfo = current}
		//| ("def" | override?="override") visibility=Visibility? static?="static"? dispatch?="dispatch"? ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=> (returnType=JvmTypeReference
		//createExtensionInfo=CreateExtensionInfo name=ValidID "(") | => (returnType=JvmTypeReference name=ValidID "(") | =>
		//(createExtensionInfo=CreateExtensionInfo name=ValidID "(") | name=ValidID "(") (parameters+=Parameter (","
		//parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		public Alternatives getAlternatives() { return cAlternatives; }

		////{EuclidField.annotationInfo = current}
		//visibility=Visibility? (extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? |
		//static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ";"?
		public Group getGroup_0() { return cGroup_0; }

		////{EuclidField.annotationInfo = current}
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0_0() { return cVisibilityAssignment_0_0; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0_0; }

		//extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? | static?="static"?
		//(type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID?
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//extension?="extension"
		public Assignment getExtensionAssignment_0_1_0_0() { return cExtensionAssignment_0_1_0_0; }

		//"extension"
		public Keyword getExtensionExtensionKeyword_0_1_0_0_0() { return cExtensionExtensionKeyword_0_1_0_0_0; }

		//(final?="val" | "var")?
		public Alternatives getAlternatives_0_1_0_1() { return cAlternatives_0_1_0_1; }

		//final?="val"
		public Assignment getFinalAssignment_0_1_0_1_0() { return cFinalAssignment_0_1_0_1_0; }

		//"val"
		public Keyword getFinalValKeyword_0_1_0_1_0_0() { return cFinalValKeyword_0_1_0_1_0_0; }

		//"var"
		public Keyword getVarKeyword_0_1_0_1_1() { return cVarKeyword_0_1_0_1_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_0_1_0_2() { return cTypeAssignment_0_1_0_2; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_1_0_2_0() { return cTypeJvmTypeReferenceParserRuleCall_0_1_0_2_0; }

		//name=ValidID?
		public Assignment getNameAssignment_0_1_0_3() { return cNameAssignment_0_1_0_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_1_0_3_0() { return cNameValidIDParserRuleCall_0_1_0_3_0; }

		//static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }

		//static?="static"?
		public Assignment getStaticAssignment_0_1_1_0() { return cStaticAssignment_0_1_1_0; }

		//"static"
		public Keyword getStaticStaticKeyword_0_1_1_0_0() { return cStaticStaticKeyword_0_1_1_0_0; }

		//type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?
		public Alternatives getAlternatives_0_1_1_1() { return cAlternatives_0_1_1_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_0_1_1_1_0() { return cTypeAssignment_0_1_1_1_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_1_1_1_0_0() { return cTypeJvmTypeReferenceParserRuleCall_0_1_1_1_0_0; }

		//(final?="val" | "var") type=JvmTypeReference?
		public Group getGroup_0_1_1_1_1() { return cGroup_0_1_1_1_1; }

		//final?="val" | "var"
		public Alternatives getAlternatives_0_1_1_1_1_0() { return cAlternatives_0_1_1_1_1_0; }

		//final?="val"
		public Assignment getFinalAssignment_0_1_1_1_1_0_0() { return cFinalAssignment_0_1_1_1_1_0_0; }

		//"val"
		public Keyword getFinalValKeyword_0_1_1_1_1_0_0_0() { return cFinalValKeyword_0_1_1_1_1_0_0_0; }

		//"var"
		public Keyword getVarKeyword_0_1_1_1_1_0_1() { return cVarKeyword_0_1_1_1_1_0_1; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_0_1_1_1_1_1() { return cTypeAssignment_0_1_1_1_1_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_1_1_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_0_1_1_1_1_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_0_1_1_2() { return cNameAssignment_0_1_1_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_1_1_2_0() { return cNameValidIDParserRuleCall_0_1_1_2_0; }

		//";"?
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//("def" | override?="override") visibility=Visibility? static?="static"? dispatch?="dispatch"? ("<"
		//typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=> (returnType=JvmTypeReference
		//createExtensionInfo=CreateExtensionInfo name=ValidID "(") | => (returnType=JvmTypeReference name=ValidID "(") | =>
		//(createExtensionInfo=CreateExtensionInfo name=ValidID "(") | name=ValidID "(") (parameters+=Parameter (","
		//parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		public Group getGroup_1() { return cGroup_1; }

		//"def" | override?="override"
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"def"
		public Keyword getDefKeyword_1_0_0() { return cDefKeyword_1_0_0; }

		//override?="override"
		public Assignment getOverrideAssignment_1_0_1() { return cOverrideAssignment_1_0_1; }

		//"override"
		public Keyword getOverrideOverrideKeyword_1_0_1_0() { return cOverrideOverrideKeyword_1_0_1_0; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_1_1() { return cVisibilityAssignment_1_1; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_1_1_0() { return cVisibilityVisibilityEnumRuleCall_1_1_0; }

		//static?="static"?
		public Assignment getStaticAssignment_1_2() { return cStaticAssignment_1_2; }

		//"static"
		public Keyword getStaticStaticKeyword_1_2_0() { return cStaticStaticKeyword_1_2_0; }

		//dispatch?="dispatch"?
		public Assignment getDispatchAssignment_1_3() { return cDispatchAssignment_1_3; }

		//"dispatch"
		public Keyword getDispatchDispatchKeyword_1_3_0() { return cDispatchDispatchKeyword_1_3_0; }

		//("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")?
		public Group getGroup_1_4() { return cGroup_1_4; }

		//"<"
		public Keyword getLessThanSignKeyword_1_4_0() { return cLessThanSignKeyword_1_4_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_1_4_1() { return cTypeParametersAssignment_1_4_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_1_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_1_4_1_0; }

		//("," typeParameters+=JvmTypeParameter)*
		public Group getGroup_1_4_2() { return cGroup_1_4_2; }

		//","
		public Keyword getCommaKeyword_1_4_2_0() { return cCommaKeyword_1_4_2_0; }

		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_1_4_2_1() { return cTypeParametersAssignment_1_4_2_1; }

		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_1_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_1_4_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_1_4_3() { return cGreaterThanSignKeyword_1_4_3; }

		//=> (returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
		//(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
		//name=ValidID "("
		public Alternatives getAlternatives_1_5() { return cAlternatives_1_5; }

		//=> (returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(")
		public Group getGroup_1_5_0() { return cGroup_1_5_0; }

		//returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "("
		public Group getGroup_1_5_0_0() { return cGroup_1_5_0_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_1_5_0_0_0() { return cReturnTypeAssignment_1_5_0_0_0; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_1_5_0_0_0_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_1_5_0_0_0_0; }

		//createExtensionInfo=CreateExtensionInfo
		public Assignment getCreateExtensionInfoAssignment_1_5_0_0_1() { return cCreateExtensionInfoAssignment_1_5_0_0_1; }

		//CreateExtensionInfo
		public RuleCall getCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_0_0_1_0() { return cCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_0_0_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_1_5_0_0_2() { return cNameAssignment_1_5_0_0_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_5_0_0_2_0() { return cNameValidIDParserRuleCall_1_5_0_0_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_5_0_0_3() { return cLeftParenthesisKeyword_1_5_0_0_3; }

		//=> (returnType=JvmTypeReference name=ValidID "(")
		public Group getGroup_1_5_1() { return cGroup_1_5_1; }

		//returnType=JvmTypeReference name=ValidID "("
		public Group getGroup_1_5_1_0() { return cGroup_1_5_1_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_1_5_1_0_0() { return cReturnTypeAssignment_1_5_1_0_0; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_1_5_1_0_0_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_1_5_1_0_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1_5_1_0_1() { return cNameAssignment_1_5_1_0_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_5_1_0_1_0() { return cNameValidIDParserRuleCall_1_5_1_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_5_1_0_2() { return cLeftParenthesisKeyword_1_5_1_0_2; }

		//=> (createExtensionInfo=CreateExtensionInfo name=ValidID "(")
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }

		//createExtensionInfo=CreateExtensionInfo name=ValidID "("
		public Group getGroup_1_5_2_0() { return cGroup_1_5_2_0; }

		//createExtensionInfo=CreateExtensionInfo
		public Assignment getCreateExtensionInfoAssignment_1_5_2_0_0() { return cCreateExtensionInfoAssignment_1_5_2_0_0; }

		//CreateExtensionInfo
		public RuleCall getCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_2_0_0_0() { return cCreateExtensionInfoCreateExtensionInfoParserRuleCall_1_5_2_0_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1_5_2_0_1() { return cNameAssignment_1_5_2_0_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_5_2_0_1_0() { return cNameValidIDParserRuleCall_1_5_2_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_5_2_0_2() { return cLeftParenthesisKeyword_1_5_2_0_2; }

		//name=ValidID "("
		public Group getGroup_1_5_3() { return cGroup_1_5_3; }

		//name=ValidID
		public Assignment getNameAssignment_1_5_3_0() { return cNameAssignment_1_5_3_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_5_3_0_0() { return cNameValidIDParserRuleCall_1_5_3_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_5_3_1() { return cLeftParenthesisKeyword_1_5_3_1; }

		//(parameters+=Parameter ("," parameters+=Parameter)*)?
		public Group getGroup_1_6() { return cGroup_1_6; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_1_6_0() { return cParametersAssignment_1_6_0; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_1_6_0_0() { return cParametersParameterParserRuleCall_1_6_0_0; }

		//("," parameters+=Parameter)*
		public Group getGroup_1_6_1() { return cGroup_1_6_1; }

		//","
		public Keyword getCommaKeyword_1_6_1_0() { return cCommaKeyword_1_6_1_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_1_6_1_1() { return cParametersAssignment_1_6_1_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_1_6_1_1_0() { return cParametersParameterParserRuleCall_1_6_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_7() { return cRightParenthesisKeyword_1_7; }

		//("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?
		public Group getGroup_1_8() { return cGroup_1_8; }

		//"throws"
		public Keyword getThrowsKeyword_1_8_0() { return cThrowsKeyword_1_8_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_1_8_1() { return cExceptionsAssignment_1_8_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_1_8_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_1_8_1_0; }

		//("," exceptions+=JvmTypeReference)*
		public Group getGroup_1_8_2() { return cGroup_1_8_2; }

		//","
		public Keyword getCommaKeyword_1_8_2_0() { return cCommaKeyword_1_8_2_0; }

		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_1_8_2_1() { return cExceptionsAssignment_1_8_2_1; }

		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_1_8_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_1_8_2_1_0; }
	}

	public class CreateExtensionInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreateExtensionInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cCreateExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCreateExpressionXExpressionParserRuleCall_2_0 = (RuleCall)cCreateExpressionAssignment_2.eContents().get(0);
		
		//CreateExtensionInfo:
		//	"create" (name=ValidID ":")? createExpression=XExpression;
		public ParserRule getRule() { return rule; }

		//"create" (name=ValidID ":")? createExpression=XExpression
		public Group getGroup() { return cGroup; }

		//"create"
		public Keyword getCreateKeyword_0() { return cCreateKeyword_0; }

		//(name=ValidID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=ValidID
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0_0() { return cNameValidIDParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//createExpression=XExpression
		public Assignment getCreateExpressionAssignment_2() { return cCreateExpressionAssignment_2; }

		//XExpression
		public RuleCall getCreateExpressionXExpressionParserRuleCall_2_0() { return cCreateExpressionXExpressionParserRuleCall_2_0; }
	}

	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cCreateKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAnnotationKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//ValidID:
		//	ID | "create" | "annotation";
		public ParserRule getRule() { return rule; }

		//ID | "create" | "annotation"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//"create"
		public Keyword getCreateKeyword_1() { return cCreateKeyword_1; }

		//"annotation"
		public Keyword getAnnotationKeyword_2() { return cAnnotationKeyword_2; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cParameterTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cParameterTypeAssignment_1.eContents().get(0);
		private final Assignment cVarArgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cVarArgFullStopFullStopFullStopKeyword_2_0 = (Keyword)cVarArgAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Parameter returns EuclidParameter:
		//	annotations+=XAnnotation* parameterType=JvmTypeReference varArg?="..."? name=ValidID;
		public ParserRule getRule() { return rule; }

		//annotations+=XAnnotation* parameterType=JvmTypeReference varArg?="..."? name=ValidID
		public Group getGroup() { return cGroup; }

		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_0_0() { return cAnnotationsXAnnotationParserRuleCall_0_0; }

		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_1() { return cParameterTypeAssignment_1; }

		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_1_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_1_0; }

		//varArg?="..."?
		public Assignment getVarArgAssignment_2() { return cVarArgAssignment_2; }

		//"..."
		public Keyword getVarArgFullStopFullStopFullStopKeyword_2_0() { return cVarArgFullStopFullStopFullStopKeyword_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }
	}

	public class XStringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XStringLiteral");
		private final RuleCall cSimpleStringLiteralParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XStringLiteral returns xbase::XExpression:
		//	SimpleStringLiteral;
		public ParserRule getRule() { return rule; }

		//SimpleStringLiteral
		public RuleCall getSimpleStringLiteralParserRuleCall() { return cSimpleStringLiteralParserRuleCall; }
	}

	public class SimpleStringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleStringLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXStringLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//SimpleStringLiteral returns xbase::XExpression:
		//	{xbase::XStringLiteral} value=STRING;
		public ParserRule getRule() { return rule; }

		//{xbase::XStringLiteral} value=STRING
		public Group getGroup() { return cGroup; }

		//{xbase::XStringLiteral}
		public Action getXStringLiteralAction_0() { return cXStringLiteralAction_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}
	
	
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPUBLICPublicKeyword_0_0 = (Keyword)cPUBLICEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPROTECTEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPROTECTEDProtectedKeyword_1_0 = (Keyword)cPROTECTEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPRIVATEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPRIVATEPrivateKeyword_2_0 = (Keyword)cPRIVATEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Visibility returns types::JvmVisibility:
		//	PUBLIC="public" | PROTECTED="protected" | PRIVATE="private";
		public EnumRule getRule() { return rule; }

		//PUBLIC="public" | PROTECTED="protected" | PRIVATE="private"
		public Alternatives getAlternatives() { return cAlternatives; }

		//PUBLIC="public"
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_0() { return cPUBLICEnumLiteralDeclaration_0; }

		//"public"
		public Keyword getPUBLICPublicKeyword_0_0() { return cPUBLICPublicKeyword_0_0; }

		//PROTECTED="protected"
		public EnumLiteralDeclaration getPROTECTEDEnumLiteralDeclaration_1() { return cPROTECTEDEnumLiteralDeclaration_1; }

		//"protected"
		public Keyword getPROTECTEDProtectedKeyword_1_0() { return cPROTECTEDProtectedKeyword_1_0; }

		//PRIVATE="private"
		public EnumLiteralDeclaration getPRIVATEEnumLiteralDeclaration_2() { return cPRIVATEEnumLiteralDeclaration_2; }

		//"private"
		public Keyword getPRIVATEPrivateKeyword_2_0() { return cPRIVATEPrivateKeyword_2_0; }
	}
	
	private FileElements pFile;
	private ImportElements pImport;
	private QualifiedNameWildCardElements pQualifiedNameWildCard;
	private TypeElements pType;
	private AnnotationFieldElements pAnnotationField;
	private MemberElements pMember;
	private DeclarationElements pDeclaration;
	private CreateExtensionInfoElements pCreateExtensionInfo;
	private ValidIDElements pValidID;
	private ParameterElements pParameter;
	private VisibilityElements unknownRuleVisibility;
	private XStringLiteralElements pXStringLiteral;
	private SimpleStringLiteralElements pSimpleStringLiteral;
	
	private final Grammar grammar;

	private XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations;

	@Inject
	public EditorGrammarAccess(GrammarProvider grammarProvider,
		XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbaseWithAnnotations = gaXbaseWithAnnotations;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.euclideanspace.euclid.Editor".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseWithAnnotationsGrammarAccess getXbaseWithAnnotationsGrammarAccess() {
		return gaXbaseWithAnnotations;
	}

	
	//File returns EuclidFile:
	//	("package" package=QualifiedName ";"?)? imports+=Import* euclidTypes+=Type*;
	public FileElements getFileAccess() {
		return (pFile != null) ? pFile : (pFile = new FileElements());
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}

	//Import returns EuclidImport:
	//	"import" //  (static?='static' extension?='extension'? importedType=[types::JvmType|QualifiedName] '.' '*')
	//	(importedType=[types::JvmType|QualifiedName] //   importedNamespace=QualifiedName
	//	| importedNamespace=QualifiedNameWildCard) ";"?;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//QualifiedNameWildCard:
	//	QualifiedName "." "*";
	public QualifiedNameWildCardElements getQualifiedNameWildCardAccess() {
		return (pQualifiedNameWildCard != null) ? pQualifiedNameWildCard : (pQualifiedNameWildCard = new QualifiedNameWildCardElements());
	}
	
	public ParserRule getQualifiedNameWildCardRule() {
		return getQualifiedNameWildCardAccess().getRule();
	}

	/// *
	// * This is a top level element such as:
	// * class {EuclidClass}
	// * interface {EuclidInterface}
	// * enum {EuclidEnum}
	// * / Type returns EuclidTypeDeclaration:
	//	{EuclidTypeDeclaration} annotations+=XAnnotation* ({EuclidClass.annotationInfo=current} "public"?
	//	abstract?="abstract"? "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
	//	typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
	//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
	//	| {EuclidInterface.annotationInfo=current} "public"? abstract?="abstract"? "interface" name=ValidID ("<"
	//	typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? ("implements"
	//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{"
	//	declarations+=Declaration* "}" | {EuclidEnum.annotationInfo=current} "public"? abstract?="abstract"? "enum"
	//	name=ValidID ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "{" enumConstants+=ID
	//	("," enumConstants+=ID)* "}" | {EuclidAnnotationType.annotationInfo=current} "annotation" name=ValidID "{"
	//	members+=AnnotationField* "}");
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//AnnotationField returns EuclidField:
	//	annotations+=XAnnotation* (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID ("="
	//	initialValue=XExpression)? ";"?;
	public AnnotationFieldElements getAnnotationFieldAccess() {
		return (pAnnotationField != null) ? pAnnotationField : (pAnnotationField = new AnnotationFieldElements());
	}
	
	public ParserRule getAnnotationFieldRule() {
		return getAnnotationFieldAccess().getRule();
	}

	/// *
	// * This is an inner element inside a class, interface or enum, such as:
	// * 'val' or 'var' returns EuclidField
	// * 'def' method returns EuclidFunction
	// * inner class returns EuclidInnerClass
	// * / Member returns EuclidMember:
	//	{EuclidMember} annotations+=XAnnotation* ({EuclidField.annotationInfo=current} visibility=Visibility?
	//	(extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? | static?="static"?
	//	(type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ("=" initialValue=XExpression)?
	//	";"? | {EuclidInnerClass.annotationInfo=current} "class" name=ValidID ("<" typeParameters+=JvmTypeParameter (","
	//	typeParameters+=JvmTypeParameter)* ">")? ("extends" extends=JvmParameterizedTypeReference)? ("implements"
	//	implements+=JvmParameterizedTypeReference ("," implements+=JvmParameterizedTypeReference)*)? "{" members+=Member* "}"
	//	| {EuclidFunction.annotationInfo=current} ("def" | override?="override") visibility=Visibility? static?="static"?
	//	dispatch?="dispatch"? ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=>
	//	(returnType=JvmTypeReference createExtensionInfo=CreateExtensionInfo name=ValidID "(") | =>
	//	(returnType=JvmTypeReference name=ValidID "(") | => (createExtensionInfo=CreateExtensionInfo name=ValidID "(") |
	//	name=ValidID "(") (parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference
	//	("," exceptions+=JvmTypeReference)*)? expression=XBlockExpression? | {EuclidConstructor.annotationInfo=current}
	//	visibility=Visibility? "new" ("<" typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? "("
	//	(parameters+=Parameter ("," parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference (","
	//	exceptions+=JvmTypeReference)*)? expression=XBlockExpression);
	public MemberElements getMemberAccess() {
		return (pMember != null) ? pMember : (pMember = new MemberElements());
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}

	//Declaration returns EuclidDeclaration: //{EuclidField.annotationInfo = current}
	//	visibility=Visibility? (extension?="extension" (final?="val" | "var")? type=JvmTypeReference name=ValidID? |
	//	static?="static"? (type=JvmTypeReference | (final?="val" | "var") type=JvmTypeReference?) name=ValidID) ";"? //{EuclidDeclaration} annotations+=XAnnotation*
	//	//{EuclidFunction.annotationInfo = current}
	//	| ("def" | override?="override") visibility=Visibility? static?="static"? dispatch?="dispatch"? ("<"
	//	typeParameters+=JvmTypeParameter ("," typeParameters+=JvmTypeParameter)* ">")? (=> (returnType=JvmTypeReference
	//	createExtensionInfo=CreateExtensionInfo name=ValidID "(") | => (returnType=JvmTypeReference name=ValidID "(") | =>
	//	(createExtensionInfo=CreateExtensionInfo name=ValidID "(") | name=ValidID "(") (parameters+=Parameter (","
	//	parameters+=Parameter)*)? ")" ("throws" exceptions+=JvmTypeReference ("," exceptions+=JvmTypeReference)*)?;
	public DeclarationElements getDeclarationAccess() {
		return (pDeclaration != null) ? pDeclaration : (pDeclaration = new DeclarationElements());
	}
	
	public ParserRule getDeclarationRule() {
		return getDeclarationAccess().getRule();
	}

	//CreateExtensionInfo:
	//	"create" (name=ValidID ":")? createExpression=XExpression;
	public CreateExtensionInfoElements getCreateExtensionInfoAccess() {
		return (pCreateExtensionInfo != null) ? pCreateExtensionInfo : (pCreateExtensionInfo = new CreateExtensionInfoElements());
	}
	
	public ParserRule getCreateExtensionInfoRule() {
		return getCreateExtensionInfoAccess().getRule();
	}

	//ValidID:
	//	ID | "create" | "annotation";
	public ValidIDElements getValidIDAccess() {
		return (pValidID != null) ? pValidID : (pValidID = new ValidIDElements());
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//Parameter returns EuclidParameter:
	//	annotations+=XAnnotation* parameterType=JvmTypeReference varArg?="..."? name=ValidID;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//enum Visibility returns types::JvmVisibility:
	//	PUBLIC="public" | PROTECTED="protected" | PRIVATE="private";
	public VisibilityElements getVisibilityAccess() {
		return (unknownRuleVisibility != null) ? unknownRuleVisibility : (unknownRuleVisibility = new VisibilityElements());
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}

	//XStringLiteral returns xbase::XExpression:
	//	SimpleStringLiteral;
	public XStringLiteralElements getXStringLiteralAccess() {
		return (pXStringLiteral != null) ? pXStringLiteral : (pXStringLiteral = new XStringLiteralElements());
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//SimpleStringLiteral returns xbase::XExpression:
	//	{xbase::XStringLiteral} value=STRING;
	public SimpleStringLiteralElements getSimpleStringLiteralAccess() {
		return (pSimpleStringLiteral != null) ? pSimpleStringLiteral : (pSimpleStringLiteral = new SimpleStringLiteralElements());
	}
	
	public ParserRule getSimpleStringLiteralRule() {
		return getSimpleStringLiteralAccess().getRule();
	}

	//XAnnotation:
	//	{XAnnotation} "@" annotationType=[types::JvmAnnotationType|QualifiedName] ("("
	//	(elementValuePairs+=XAnnotationElementValuePair ("," elementValuePairs+=XAnnotationElementValuePair)* |
	//	value=XAnnotationElementValue)? ")")?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}

	//XAnnotationElementValuePair:
	//	element=[types::JvmOperation|ValidID] "=" value=XAnnotationElementValue;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}

	//XAnnotationElementValueStringConcatenation returns xbase::XExpression:
	//	XAnnotationElementValue ({XAnnotationElementValueBinaryOperation.leftOperand=current} operator="+"
	//	rightOperand=XAnnotationElementValue)*;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueStringConcatenationElements getXAnnotationElementValueStringConcatenationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueStringConcatenationAccess();
	}
	
	public ParserRule getXAnnotationElementValueStringConcatenationRule() {
		return getXAnnotationElementValueStringConcatenationAccess().getRule();
	}

	//XAnnotationElementValue returns xbase::XExpression:
	//	XAnnotation | XListLiteral | XStringLiteral | XBooleanLiteral | XNumberLiteral | XTypeLiteral |
	//	XAnnotationValueMemberFieldReference | "(" XAnnotationElementValueStringConcatenation ")";
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}

	//XAnnotationValueMemberFieldReference returns xbase::XExpression:
	//	XAnnotationValueFieldReference ({xbase::XMemberFeatureCall.memberCallTarget=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|IdOrSuper])*;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationValueMemberFieldReferenceElements getXAnnotationValueMemberFieldReferenceAccess() {
		return gaXbaseWithAnnotations.getXAnnotationValueMemberFieldReferenceAccess();
	}
	
	public ParserRule getXAnnotationValueMemberFieldReferenceRule() {
		return getXAnnotationValueMemberFieldReferenceAccess().getRule();
	}

	//XAnnotationValueFieldReference returns xbase::XExpression:
	//	{xbase::XFeatureCall} feature=[types::JvmIdentifiableElement|IdOrSuper];
	public XbaseWithAnnotationsGrammarAccess.XAnnotationValueFieldReferenceElements getXAnnotationValueFieldReferenceAccess() {
		return gaXbaseWithAnnotations.getXAnnotationValueFieldReferenceAccess();
	}
	
	public ParserRule getXAnnotationValueFieldReferenceRule() {
		return getXAnnotationValueFieldReferenceAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbaseWithAnnotations.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbaseWithAnnotations.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbaseWithAnnotations.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbaseWithAnnotations.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbaseWithAnnotations.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbaseWithAnnotations.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbaseWithAnnotations.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbaseWithAnnotations.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbaseWithAnnotations.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbaseWithAnnotations.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbaseWithAnnotations.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbaseWithAnnotations.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<") | "<>" | "?:" | "<=>";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbaseWithAnnotations.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbaseWithAnnotations.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbaseWithAnnotations.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbaseWithAnnotations.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbaseWithAnnotations.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbaseWithAnnotations.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbaseWithAnnotations.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XMemberFeatureCall (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbaseWithAnnotations.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] (=> explicitOperationCall?="("
	//	(memberCallArguments+=XShortClosure | memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")?
	//	memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbaseWithAnnotations.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XFeatureCall | XLiteral | XIfExpression | XForLoopExpression
	//	| XWhileExpression | XDoWhileExpression | XThrowExpression | XReturnExpression | XTryCatchFinallyExpression |
	//	XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbaseWithAnnotations.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbaseWithAnnotations.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbaseWithAnnotations.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbaseWithAnnotations.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbaseWithAnnotations.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbaseWithAnnotations.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbaseWithAnnotations.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbaseWithAnnotations.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbaseWithAnnotations.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbaseWithAnnotations.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> (localVarName=ValidID ":")? switch=XExpression | => ("(" localVarName=ValidID ":")
	//	switch=XExpression ")") "{" cases+=XCasePart+ ("default" ":" default=XExpression)? "}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbaseWithAnnotations.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	typeGuard=JvmTypeReference? ("case" case=XExpression)? ":" then=XExpression;
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbaseWithAnnotations.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	{XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":" forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbaseWithAnnotations.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbaseWithAnnotations.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbaseWithAnnotations.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionInsideBlock ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbaseWithAnnotations.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionInsideBlock returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionInsideBlockElements getXExpressionInsideBlockAccess() {
		return gaXbaseWithAnnotations.getXExpressionInsideBlockAccess();
	}
	
	public ParserRule getXExpressionInsideBlockRule() {
		return getXExpressionInsideBlockAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbaseWithAnnotations.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbaseWithAnnotations.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbaseWithAnnotations.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbaseWithAnnotations.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbaseWithAnnotations.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbaseWithAnnotations.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? ("("
	//	(arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")? arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbaseWithAnnotations.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbaseWithAnnotations.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbaseWithAnnotations.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbaseWithAnnotations.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbaseWithAnnotations.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbaseWithAnnotations.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" => expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbaseWithAnnotations.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbaseWithAnnotations.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbaseWithAnnotations.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbaseWithAnnotations.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbaseWithAnnotations.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbaseWithAnnotations.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbaseWithAnnotations.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbaseWithAnnotations.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbaseWithAnnotations.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbaseWithAnnotations.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbaseWithAnnotations.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbaseWithAnnotations.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbaseWithAnnotations.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbaseWithAnnotations.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbaseWithAnnotations.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbaseWithAnnotations.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbaseWithAnnotations.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbaseWithAnnotations.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedName] "." "*" |
	//	importedType=[JvmDeclaredType|QualifiedName] | importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbaseWithAnnotations.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbaseWithAnnotations.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXbaseWithAnnotations.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbaseWithAnnotations.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbaseWithAnnotations.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbaseWithAnnotations.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbaseWithAnnotations.getANY_OTHERRule();
	} 
}
