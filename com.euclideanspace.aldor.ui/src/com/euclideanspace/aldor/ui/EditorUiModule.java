/*
 * generated by Xtext
 */
package com.euclideanspace.aldor.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;

/**
 * Use this class to register components to be used within the IDE.
 */
public class EditorUiModule extends com.euclideanspace.aldor.ui.AbstractEditorUiModule {
	public EditorUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	/*
	 * I want to customise the lexer.
	 * I have created CustomLexer.java to extend
     * com.euclideanspace.aldor.parser.antlr.internal.InternalEditorLexer.java
     * and here in the UI code I have created CustomUILexer which extends
     * com.euclideanspace.aldor.ui.contentassist.antlr.internal.InternalEditorLexer
	 *
	 * AbstractEditorUiModule seems to contain 3 methods that involve the lexer:
	 * - configureHighlightingLexer
	 * - configureContentAssistLexerProvider
	 * - configureContentAssistLexer
	 * 
	 * So here we override these.
	 */
	@Override
	public void configureHighlightingLexer(com.google.inject.Binder binder) {
		binder.bind(org.eclipse.xtext.parser.antlr.Lexer.class).annotatedWith(
				com.google.inject.name.Names.named(
						org.eclipse.xtext.ui.LexerUIBindings.HIGHLIGHTING)).to(
								com.euclideanspace.aldor.CustomLexer.class);
	}

	@Override
	public void configureContentAssistLexerProvider(com.google.inject.Binder binder) {
		binder.bind(com.euclideanspace.aldor.ui.CustomUILexer.class)
		  .toProvider(org.eclipse.xtext.parser.antlr.LexerProvider.create(
				  com.euclideanspace.aldor.ui.CustomUILexer.class));
	}

	@Override
	public void configureContentAssistLexer(com.google.inject.Binder binder) {
		binder.bind(org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer.class)
		   .annotatedWith(com.google.inject.name.Names.named(
				   org.eclipse.xtext.ui.LexerUIBindings.CONTENT_ASSIST)).to(
						   com.euclideanspace.aldor.ui.CustomUILexer.class);
	}

}
