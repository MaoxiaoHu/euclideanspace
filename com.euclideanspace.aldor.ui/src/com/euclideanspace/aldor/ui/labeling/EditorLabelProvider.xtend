/*
* generated by Xtext
*/
package com.euclideanspace.aldor.ui.labeling;

import com.google.inject.Inject
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.common.types.JvmArrayType;
import org.eclipse.xtext.common.types.JvmFormalParameter;
import org.eclipse.xtext.common.types.JvmGenericArrayTypeReference;
import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;
import org.eclipse.xtext.common.types.JvmType;
import org.eclipse.xtext.common.types.JvmTypeConstraint;
import org.eclipse.xtext.common.types.JvmTypeReference;
import org.eclipse.xtext.common.types.JvmUpperBound;
import org.eclipse.xtext.common.types.JvmWildcardTypeReference;
import com.euclideanspace.aldor.editor.*;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.eclipse.xtext.util.Strings;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class EditorLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def String text(Model ele) {
	  return "Model";
	}

	def String text(Expression ele) {
	  return "Expression";
	}

	def String text(Labeled ele) {
	  return "Labeled";
	}

	def String text(Declaration ele) {
//		if (ele.mb!=null)  return "Declaration :"+ele.mb;
//		if (ele.si!=null)  return "Declaration :"+ele.si;
	  return "Declaration";
	}

	def String text(ExportDecl ele) {
//	  return "ExportDecl:"+ele.s;
	  return "ExportDecl:";
	}

	def String text(ToPart ele) {
	  return "ToPart";
	}

	def String text(FromPart ele) {
	  return "FromPart";
	}

	def String text(MacroBody ele) {
	  return "MacroBody";
	}

	def String text(Sig ele) {
	  return "Sig";
	}

//	def String text(DeclPart ele) {
//	  return "DeclPart";
//	}

	def String text(Comma ele) {
	  return "Comma";
	}

	def String text(CommaItem ele) {
	  return "CommaItem";//+ele.ci;
	}

	def String text(DeclBinding ele) {
	  return "DeclBinding";
	}

	def String text(InfixedExprsDecl ele) {
	  return "InfixedExprsDecl";
	}

	def String text(InfixedExprs ele) {
	  return "InfixedExprs";
	}

	def String text(Binding_AnyStatement ele) {
	  return "Binding_AnyStatement";
	}

	def String text(Binding_BalStatement ele) {
	  return "Binding_BalStatement";
	}

	def String text(Binding_Collection ele) {
	  return "Binding_Collection";
	}

	def String text(BindingL_Infixed_AnyStatement ele) {
		  return "BindingL_Infixed_AnyStatement "+ele.op;
	}

	def String text(BindingL_Infixed_BalStatement ele) {
		  return "BindingL_Infixed_BalStatement "+ele.op;
	}

	def String text(BindingL_Infixed_Collection ele) {
		  return "BindingL_Infixed_Collection "+ele.op;
	}

	def String text(BindingR_InfixedExprsDecl_AnyStatement ele) {
		  return "BindingR_InfixedExprsDecl_AnyStatement";
	}

	def String text(AnyStatement ele) {
		return "AnyStatement";
	}

	def String text(BalStatement ele) {
		return "BalStatement";
	}

	def String text(Flow_AnyStatement ele) {
//		if (ele.getC()!=null)  return "Flow_AnyStatement :"+ele.getC();
//		if (ele.getSt()!=null)  return "Flow_AnyStatement :"+ele.getSt();
		return "Flow_AnyStatement";
	}

	def String text(Flow_BalStatement ele) {
//		if (ele.getC2()!=null)  return "Flow_BalStatement :"+ele.getC2();
//		if (ele.getSt2()!=null)  return "Flow_BalStatement :"+ele.getSt2();
		return "Flow_BalStatement";
	}

	def String text(GenBound ele) {
		return "GenBound";
	}

	def String text(ButExpr ele) {
		return "ButExpr";
	}

	def String text(Cases ele) {
		return "Cases";
	}

	def String text(AlwaysPart_AnyStatement ele) {
		return "AlwaysPart_AnyStatement";
	}

	def String text(AlwaysPart_BalStatement ele) {
		return "AlwaysPart_BalStatement";
	}

	def String text(Collection ele) {
//		  return "Collection :"+ele.getI3();
		  return "Collection";
	}

	def String text(Iterators ele) {
		return "Iterators";
	}

	def String text(Iterators1 ele) {
//		if (ele.itr!=null) return "Iterators1 :"+ele.itr;
		return "Iterators1";
	}

	def String text(Iterator ele) {
		return "Iterator";
	}

	def String text(ForLhs ele) {
		return "ForLhs";
	}

	def String text(SuchthatPart ele) {
		return "SuchthatPart";
	}

	def String text(Infixed ele) {
//		if (ele.getIfx()!=null)  return "Infixed :"+ele.getIfx();
//		return "Infixed : "+ele.getB();
		return "Infixed";
	}

	def String text(InfixedExpr ele) {
		return "InfixedExpr";
	}

	def String text(Expr ele) {
		  //return "E3 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
		  return "Expr";
	}

	def String text(E3 ele) {
		  //return "E3 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
		  return "E3 "+ele.op;
	}

	def String text(E4 ele) {
		  //return "E4 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
		  return "E4 "+ele.op;
	}

	def String text(E5 ele) {
		  //return "E5 :"+ele.getLeft()+" "+ele.getOp5()+" "+ele.getRight();
		  return "E5 "+ele.op;
	}

	def String text(E6 ele) {
		  //return "E6 :"+ele.getLeft()+" "+ele.getOp6()+" "+ele.getRight();
		  return "E6 "+ele.op;
	}

	def String text(E7 ele) {
		  //return "E7 :"+ele.getLeft()+" "+ele.getOp7()+" "+ele.getRight();
		  return "E7 "+ele.op;
	}

	def String text(E8 ele) {
		  //return "E8 :"+ele.getLeft()+" "+ele.getOp8()+" "+ele.getRight();
		  return "E8 "+ele.op;
	}

	def String text(E9 ele) {
		  //return "E9 :"+ele.getLeft()+" "+ele.getOp9()+" "+ele.getRight();
		  return "E9 "+ele.op;
	}

//	def String text(E11_E12 ele) {
		  //return "E11_E12 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
//		  return "E11_E12 ";//+ele.op;
//	}

//	def String text(E11_Op ele) {
		  //return "E11_Op :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
//		  return "E11_Op ";//+ele.op;
//	}

	def String text(E12 ele) {
		  //return "E12 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
		  return "E12 "+ele.op;
	}
	
	def String text(Type ele) {
		  return "Type";//+ele.op;
	}
	
	def String text(QualTail ele) {
		  return "QualTail";//+ele.op;
	}
	
	def String text(OpQualTail ele) {
		  return "OpQualTail ";//+ele.op;
	}

	def String text(E13 ele) {
		  //return "E13 :"+ele.getLeft()+" "+ele.getOp()+" "+ele.getRight();
		  return "E13 "+ele.op;
	}

	def String text(E14 ele) {
		  //return "E14 :"+ele.getE15left()+" "+ele.getDm()+" "+ele.getE15right();
		  return "E14 "+ele.op;
	}

	def String text(Op ele) {
//		  return "Op :"+ele.getAop();
		  return "Op";
	}

	def String text(Application ele) {
		  return "Application";
	}

	def String text(RightJuxtaposed ele) {
		  return "RightJuxtaposed";
	}

	def String text(LeftJuxtaposed ele) {
		  return "LeftJuxtaposed";
	}

  	def String text(Jright_Molecule ele) {
		  return "Jright_Molecule";//+ele.getRight();
	}

    /*
     * when uncommented this causes Unhandled event loop exception
     */
//	def String text(Jright_Atom ele) {
//		  return "Jright_Atom";//+ele.getRight2();
//	}

 	def String text(Jleft_Molecule ele) {
		  return "Jleft_Molecule";//+ele.getM();
	}

    /*
     * when uncommented this causes Unhandled event loop exception
     */
//	def String text(Jleft_Atom ele) {
//		  return "Jleft_Atom";//+ele.getBe();
//	}

	def String text(Molecule ele) {
		  return "Molecule";
	}

	def String text(Enclosure ele) {
		  return "Enclosure";
	}

	def String text(DeclMolecule ele) {
		  return "DeclMolecule";
	}

	def String text(BlockMolecule ele) {
		  return "BlockMolecule";
	}

	def String text(BlockEnclosure ele) {
		  return "BlockEnclosure";
	}

	def String text(Block ele) {
		  return "Block";
	}

	def String text(Parened ele) {
		  return "Parened";//+ele.getOp()+" "+ele.getE();
	}

 	def String text(Bracketed ele) {
		  return "Bracketed";//+ele.getOp()+" "+ele.getE();
	}

	def String text(QuotedIds ele) {
		  return "QuotedIds";//+ele.getOp()+" "+ele.getN();
	}

	def String text(Names ele) {
		  return "Names";//+ele.getFirstName();
	}

	def String text(Atom ele) {
		  return "Atom";
	}

//	def String text(Id ele) {
//		  return "Id";//+ele.getAB_Id();
//	}

//	def String text(QualOp_ArrowTok ele) {
//		  return "QualOp_ArrowTok :"+ele.getOqt();
//	}

//	def String text(QualOp_LatticeTok ele) {
//		  return "QualOp_LatticeTok :"+ele.getOqt();
//	}

//	def String text(QualOp_RelationTok ele) {
//		  return "QualOp_RelationTok :"+ele.getOqt();
//	}

//	def String text(QualOp_SegTok ele) {
//		  return "QualOp_SegTok :"+ele.getOqt();
//	}

//	def String text(QualOp_PlusTok ele) {
//		  return "QualOp_PlusTok :"+ele.getOqt();
//	}

//	def String text(QualOp_QuotientTok ele) {
//		  return "QualOp_QuotientTok :"+ele.getOqt();
//	}

//	def String text(QualOp_TimesTok ele) {
//		  return "QualOp_TimesTok :"+ele.getOqt();
//	}

//	def String text(QualOp_PowerTok ele) {
//		  return "QualOp_PowerTok :"+ele.getOqt();
//	}

	def String text(CurlyContentsList_Labeled ele) {
//		  return "CurlyContentsList_Labeled :"+ele.statemts;
      return "CurlyContentsList_Labeled"
	}

	def String text(CurlyContentB_Labeled ele) {
//		if (ele.getPred()!=null)  return "CurlyContentB_Labeled :"+ele.getPred();
//		if (ele.getL()!=null)  return "CurlyContentB_Labeled :"+ele.getL();
//		return "CurlyContentB_Labeled : "+ele.getPd();
      return "CurlyContentB_Labeled"
	}

}
