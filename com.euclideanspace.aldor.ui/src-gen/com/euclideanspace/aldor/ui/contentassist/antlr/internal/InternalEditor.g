/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.euclideanspace.aldor.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.euclideanspace.aldor.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.euclideanspace.aldor.services.EditorGrammarAccess;

}

@parser::members {
 
 	private EditorGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EditorGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getEnlist1a_Labeled_Semicolon_ABParserRuleCall()); }
	ruleenlist1a_Labeled_Semicolon_AB
{ after(grammarAccess.getExpressionAccess().getEnlist1a_Labeled_Semicolon_ABParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabeled
entryRuleLabeled 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getLabeledRule()); }
	 ruleLabeled
{ after(grammarAccess.getLabeledRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Labeled
ruleLabeled
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabeledAccess().getAlternatives()); }
(rule__Labeled__Alternatives)
{ after(grammarAccess.getLabeledAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Declaration
ruleDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExportDecl
entryRuleExportDecl 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getExportDeclRule()); }
	 ruleExportDecl
{ after(grammarAccess.getExportDeclRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExportDecl
ruleExportDecl
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportDeclAccess().getAlternatives()); }
(rule__ExportDecl__Alternatives)
{ after(grammarAccess.getExportDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleToPart
entryRuleToPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getToPartRule()); }
	 ruleToPart
{ after(grammarAccess.getToPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ToPart
ruleToPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getToPartAccess().getGroup()); }
(rule__ToPart__Group__0)
{ after(grammarAccess.getToPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFromPart
entryRuleFromPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getFromPartRule()); }
	 ruleFromPart
{ after(grammarAccess.getFromPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FromPart
ruleFromPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFromPartAccess().getGroup()); }
(rule__FromPart__Group__0)
{ after(grammarAccess.getFromPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleMacroBody
entryRuleMacroBody 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getMacroBodyRule()); }
	 ruleMacroBody
{ after(grammarAccess.getMacroBodyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MacroBody
ruleMacroBody
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroBodyAccess().getAlternatives()); }
(rule__MacroBody__Alternatives)
{ after(grammarAccess.getMacroBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSig
entryRuleSig 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getSigRule()); }
	 ruleSig
{ after(grammarAccess.getSigRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Sig
ruleSig
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSigAccess().getAlternatives()); }
(rule__Sig__Alternatives)
{ after(grammarAccess.getSigAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDeclPart
entryRuleDeclPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getDeclPartRule()); }
	 ruleDeclPart
{ after(grammarAccess.getDeclPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclPart
ruleDeclPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclPartAccess().getAlternatives()); }
(rule__DeclPart__Alternatives)
{ after(grammarAccess.getDeclPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleComma
entryRuleComma 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getCommaRule()); }
	 ruleComma
{ after(grammarAccess.getCommaRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Comma
ruleComma
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommaAccess().getEnlist1_CommaItem_Comma_ABParserRuleCall()); }
	ruleenlist1_CommaItem_Comma_AB
{ after(grammarAccess.getCommaAccess().getEnlist1_CommaItem_Comma_ABParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCommaItem
entryRuleCommaItem 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getCommaItemRule()); }
	 ruleCommaItem
{ after(grammarAccess.getCommaItemRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CommaItem
ruleCommaItem
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommaItemAccess().getGroup()); }
(rule__CommaItem__Group__0)
{ after(grammarAccess.getCommaItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDeclBinding
entryRuleDeclBinding 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getDeclBindingRule()); }
	 ruleDeclBinding
{ after(grammarAccess.getDeclBindingRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclBinding
ruleDeclBinding
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclBindingAccess().getBindingR_InfixedExprsDecl_AnyStatementParserRuleCall()); }
	ruleBindingR_InfixedExprsDecl_AnyStatement
{ after(grammarAccess.getDeclBindingAccess().getBindingR_InfixedExprsDecl_AnyStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInfixedExprsDecl
entryRuleInfixedExprsDecl 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getInfixedExprsDeclRule()); }
	 ruleInfixedExprsDecl
{ after(grammarAccess.getInfixedExprsDeclRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprsDecl
ruleInfixedExprsDecl
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixedExprsDeclAccess().getGroup()); }
(rule__InfixedExprsDecl__Group__0)
{ after(grammarAccess.getInfixedExprsDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInfixedExprs
entryRuleInfixedExprs 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getInfixedExprsRule()); }
	 ruleInfixedExprs
{ after(grammarAccess.getInfixedExprsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExprs
ruleInfixedExprs
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixedExprsAccess().getEnlist1_InfixedExpr_Comma_ABParserRuleCall()); }
	ruleenlist1_InfixedExpr_Comma_AB
{ after(grammarAccess.getInfixedExprsAccess().getEnlist1_InfixedExpr_Comma_ABParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBinding_AnyStatement
entryRuleBinding_AnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBinding_AnyStatementRule()); }
	 ruleBinding_AnyStatement
{ after(grammarAccess.getBinding_AnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_AnyStatement
ruleBinding_AnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinding_AnyStatementAccess().getBindingL_Infixed_AnyStatementParserRuleCall()); }
	ruleBindingL_Infixed_AnyStatement
{ after(grammarAccess.getBinding_AnyStatementAccess().getBindingL_Infixed_AnyStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBinding_BalStatement
entryRuleBinding_BalStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBinding_BalStatementRule()); }
	 ruleBinding_BalStatement
{ after(grammarAccess.getBinding_BalStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_BalStatement
ruleBinding_BalStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinding_BalStatementAccess().getBindingL_Infixed_BalStatementParserRuleCall()); }
	ruleBindingL_Infixed_BalStatement
{ after(grammarAccess.getBinding_BalStatementAccess().getBindingL_Infixed_BalStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBinding_Collection
entryRuleBinding_Collection 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBinding_CollectionRule()); }
	 ruleBinding_Collection
{ after(grammarAccess.getBinding_CollectionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Binding_Collection
ruleBinding_Collection
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinding_CollectionAccess().getBindingL_Infixed_CollectionParserRuleCall()); }
	ruleBindingL_Infixed_Collection
{ after(grammarAccess.getBinding_CollectionAccess().getBindingL_Infixed_CollectionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBindingL_Infixed_AnyStatement
entryRuleBindingL_Infixed_AnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBindingL_Infixed_AnyStatementRule()); }
	 ruleBindingL_Infixed_AnyStatement
{ after(grammarAccess.getBindingL_Infixed_AnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_AnyStatement
ruleBindingL_Infixed_AnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBas9Assignment()); }
(rule__BindingL_Infixed_AnyStatement__Bas9Assignment)
{ after(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBas9Assignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBindingL_Infixed_BalStatement
entryRuleBindingL_Infixed_BalStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBindingL_Infixed_BalStatementRule()); }
	 ruleBindingL_Infixed_BalStatement
{ after(grammarAccess.getBindingL_Infixed_BalStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_BalStatement
ruleBindingL_Infixed_BalStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAlternatives()); }
(rule__BindingL_Infixed_BalStatement__Alternatives)
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBindingL_Infixed_Collection
entryRuleBindingL_Infixed_Collection 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBindingL_Infixed_CollectionRule()); }
	 ruleBindingL_Infixed_Collection
{ after(grammarAccess.getBindingL_Infixed_CollectionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingL_Infixed_Collection
ruleBindingL_Infixed_Collection
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getAlternatives()); }
(rule__BindingL_Infixed_Collection__Alternatives)
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBindingR_InfixedExprsDecl_AnyStatement
entryRuleBindingR_InfixedExprsDecl_AnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule()); }
	 ruleBindingR_InfixedExprsDecl_AnyStatement
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BindingR_InfixedExprsDecl_AnyStatement
ruleBindingR_InfixedExprsDecl_AnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getGroup()); }
(rule__BindingR_InfixedExprsDecl_AnyStatement__Group__0)
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAnyStatement
entryRuleAnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getAnyStatementRule()); }
	 ruleAnyStatement
{ after(grammarAccess.getAnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AnyStatement
ruleAnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyStatementAccess().getAlternatives()); }
(rule__AnyStatement__Alternatives)
{ after(grammarAccess.getAnyStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBalStatement
entryRuleBalStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBalStatementRule()); }
	 ruleBalStatement
{ after(grammarAccess.getBalStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BalStatement
ruleBalStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBalStatementAccess().getFlow_BalStatementParserRuleCall()); }
	ruleFlow_BalStatement
{ after(grammarAccess.getBalStatementAccess().getFlow_BalStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFlow_AnyStatement
entryRuleFlow_AnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getFlow_AnyStatementRule()); }
	 ruleFlow_AnyStatement
{ after(grammarAccess.getFlow_AnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Flow_AnyStatement
ruleFlow_AnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getAlternatives()); }
(rule__Flow_AnyStatement__Alternatives)
{ after(grammarAccess.getFlow_AnyStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFlow_BalStatement
entryRuleFlow_BalStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getFlow_BalStatementRule()); }
	 ruleFlow_BalStatement
{ after(grammarAccess.getFlow_BalStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Flow_BalStatement
ruleFlow_BalStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getAlternatives()); }
(rule__Flow_BalStatement__Alternatives)
{ after(grammarAccess.getFlow_BalStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleGenBound
entryRuleGenBound 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getGenBoundRule()); }
	 ruleGenBound
{ after(grammarAccess.getGenBoundRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule GenBound
ruleGenBound
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenBoundAccess().getGroup()); }
(rule__GenBound__Group__0)
{ after(grammarAccess.getGenBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleButExpr
entryRuleButExpr 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getButExprRule()); }
	 ruleButExpr
{ after(grammarAccess.getButExprRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ButExpr
ruleButExpr
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getButExprAccess().getGroup()); }
(rule__ButExpr__Group__0)
{ after(grammarAccess.getButExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCases
entryRuleCases 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getCasesRule()); }
	 ruleCases
{ after(grammarAccess.getCasesRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Cases
ruleCases
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCasesAccess().getBinding_CollectionParserRuleCall()); }
	ruleBinding_Collection
{ after(grammarAccess.getCasesAccess().getBinding_CollectionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAlwaysPart_AnyStatement
entryRuleAlwaysPart_AnyStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getAlwaysPart_AnyStatementRule()); }
	 ruleAlwaysPart_AnyStatement
{ after(grammarAccess.getAlwaysPart_AnyStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_AnyStatement
ruleAlwaysPart_AnyStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup()); }
(rule__AlwaysPart_AnyStatement__Group__0)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAlwaysPart_BalStatement
entryRuleAlwaysPart_BalStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getAlwaysPart_BalStatementRule()); }
	 ruleAlwaysPart_BalStatement
{ after(grammarAccess.getAlwaysPart_BalStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AlwaysPart_BalStatement
ruleAlwaysPart_BalStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup()); }
(rule__AlwaysPart_BalStatement__Group__0)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCollection
entryRuleCollection 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getCollectionRule()); }
	 ruleCollection
{ after(grammarAccess.getCollectionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Collection
ruleCollection
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionAccess().getGroup()); }
(rule__Collection__Group__0)
{ after(grammarAccess.getCollectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIterators
entryRuleIterators 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getIteratorsRule()); }
	 ruleIterators
{ after(grammarAccess.getIteratorsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators
ruleIterators
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIteratorsAccess().getIterators1ParserRuleCall()); }
	ruleIterators1
{ after(grammarAccess.getIteratorsAccess().getIterators1ParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIterators1
entryRuleIterators1 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getIterators1Rule()); }
	 ruleIterators1
{ after(grammarAccess.getIterators1Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterators1
ruleIterators1
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterators1Access().getGroup()); }
(rule__Iterators1__Group__0)
{ after(grammarAccess.getIterators1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIterator
entryRuleIterator 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getIteratorRule()); }
	 ruleIterator
{ after(grammarAccess.getIteratorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Iterator
ruleIterator
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIteratorAccess().getAlternatives()); }
(rule__Iterator__Alternatives)
{ after(grammarAccess.getIteratorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleForLhs
entryRuleForLhs 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getForLhsRule()); }
	 ruleForLhs
{ after(grammarAccess.getForLhsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ForLhs
ruleForLhs
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLhsAccess().getGroup()); }
(rule__ForLhs__Group__0)
{ after(grammarAccess.getForLhsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSuchthatPart
entryRuleSuchthatPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getSuchthatPartRule()); }
	 ruleSuchthatPart
{ after(grammarAccess.getSuchthatPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SuchthatPart
ruleSuchthatPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuchthatPartAccess().getGroup()); }
(rule__SuchthatPart__Group__0)
{ after(grammarAccess.getSuchthatPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInfixed
entryRuleInfixed 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getInfixedRule()); }
	 ruleInfixed
{ after(grammarAccess.getInfixedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Infixed
ruleInfixed
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixedAccess().getAlternatives()); }
(rule__Infixed__Alternatives)
{ after(grammarAccess.getInfixedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInfixedExpr
entryRuleInfixedExpr 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getInfixedExprRule()); }
	 ruleInfixedExpr
{ after(grammarAccess.getInfixedExprRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InfixedExpr
ruleInfixedExpr
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixedExprAccess().getAlternatives()); }
(rule__InfixedExpr__Alternatives)
{ after(grammarAccess.getInfixedExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE3
entryRuleE3 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE3Rule()); }
	 ruleE3
{ after(grammarAccess.getE3Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E3
ruleE3
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE3Access().getGroup()); }
(rule__E3__Group__0)
{ after(grammarAccess.getE3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE4
entryRuleE4 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE4Rule()); }
	 ruleE4
{ after(grammarAccess.getE4Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E4
ruleE4
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE4Access().getGroup()); }
(rule__E4__Group__0)
{ after(grammarAccess.getE4Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE5
entryRuleE5 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE5Rule()); }
	 ruleE5
{ after(grammarAccess.getE5Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E5
ruleE5
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE5Access().getGroup()); }
(rule__E5__Group__0)
{ after(grammarAccess.getE5Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE6
entryRuleE6 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE6Rule()); }
	 ruleE6
{ after(grammarAccess.getE6Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E6
ruleE6
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE6Access().getGroup()); }
(rule__E6__Group__0)
{ after(grammarAccess.getE6Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE7
entryRuleE7 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE7Rule()); }
	 ruleE7
{ after(grammarAccess.getE7Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E7
ruleE7
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE7Access().getGroup()); }
(rule__E7__Group__0)
{ after(grammarAccess.getE7Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE8
entryRuleE8 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE8Rule()); }
	 ruleE8
{ after(grammarAccess.getE8Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E8
ruleE8
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE8Access().getGroup()); }
(rule__E8__Group__0)
{ after(grammarAccess.getE8Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE9
entryRuleE9 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE9Rule()); }
	 ruleE9
{ after(grammarAccess.getE9Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E9
ruleE9
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE9Access().getGroup()); }
(rule__E9__Group__0)
{ after(grammarAccess.getE9Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE11_E12
entryRuleE11_E12 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE11_E12Rule()); }
	 ruleE11_E12
{ after(grammarAccess.getE11_E12Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E11_E12
ruleE11_E12
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE11_E12Access().getGroup()); }
(rule__E11_E12__Group__0)
{ after(grammarAccess.getE11_E12Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE11_Op
entryRuleE11_Op 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE11_OpRule()); }
	 ruleE11_Op
{ after(grammarAccess.getE11_OpRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E11_Op
ruleE11_Op
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE11_OpAccess().getGroup()); }
(rule__E11_Op__Group__0)
{ after(grammarAccess.getE11_OpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleType
entryRuleType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Type
ruleType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getE11_E12ParserRuleCall()); }
	ruleE11_E12
{ after(grammarAccess.getTypeAccess().getE11_E12ParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE12
entryRuleE12 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE12Rule()); }
	 ruleE12
{ after(grammarAccess.getE12Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E12
ruleE12
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE12Access().getGroup()); }
(rule__E12__Group__0)
{ after(grammarAccess.getE12Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE13
entryRuleE13 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE13Rule()); }
	 ruleE13
{ after(grammarAccess.getE13Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E13
ruleE13
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE13Access().getGroup()); }
(rule__E13__Group__0)
{ after(grammarAccess.getE13Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualTail
entryRuleQualTail 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualTailRule()); }
	 ruleQualTail
{ after(grammarAccess.getQualTailRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualTail
ruleQualTail
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualTailAccess().getGroup()); }
(rule__QualTail__Group__0)
{ after(grammarAccess.getQualTailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOpQualTail
entryRuleOpQualTail 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getOpQualTailRule()); }
	 ruleOpQualTail
{ after(grammarAccess.getOpQualTailRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OpQualTail
ruleOpQualTail
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpQualTailAccess().getGroup()); }
(rule__OpQualTail__Group__0)
{ after(grammarAccess.getOpQualTailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE14
entryRuleE14 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE14Rule()); }
	 ruleE14
{ after(grammarAccess.getE14Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E14
ruleE14
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE14Access().getAlternatives()); }
(rule__E14__Alternatives)
{ after(grammarAccess.getE14Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleE15
entryRuleE15 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getE15Rule()); }
	 ruleE15
{ after(grammarAccess.getE15Rule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule E15
ruleE15
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getE15Access().getApplicationParserRuleCall()); }
	ruleApplication
{ after(grammarAccess.getE15Access().getApplicationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOp
entryRuleOp 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getOpRule()); }
	 ruleOp
{ after(grammarAccess.getOpRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Op
ruleOp
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAccess().getAlternatives()); }
(rule__Op__Alternatives)
{ after(grammarAccess.getOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNakedOp
entryRuleNakedOp 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getNakedOpRule()); }
	 ruleNakedOp
{ after(grammarAccess.getNakedOpRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NakedOp
ruleNakedOp
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNakedOpAccess().getAlternatives()); }
(rule__NakedOp__Alternatives)
{ after(grammarAccess.getNakedOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleArrowOp
entryRuleArrowOp 
:
{ before(grammarAccess.getArrowOpRule()); }
	 ruleArrowOp
{ after(grammarAccess.getArrowOpRule()); } 
	 EOF 
;

// Rule ArrowOp
ruleArrowOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrowOpAccess().getQualOp_ArrowTokParserRuleCall()); }
	ruleQualOp_ArrowTok
{ after(grammarAccess.getArrowOpAccess().getQualOp_ArrowTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLatticeOp
entryRuleLatticeOp 
:
{ before(grammarAccess.getLatticeOpRule()); }
	 ruleLatticeOp
{ after(grammarAccess.getLatticeOpRule()); } 
	 EOF 
;

// Rule LatticeOp
ruleLatticeOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLatticeOpAccess().getQualOp_LatticeTokParserRuleCall()); }
	ruleQualOp_LatticeTok
{ after(grammarAccess.getLatticeOpAccess().getQualOp_LatticeTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationOp
entryRuleRelationOp 
:
{ before(grammarAccess.getRelationOpRule()); }
	 ruleRelationOp
{ after(grammarAccess.getRelationOpRule()); } 
	 EOF 
;

// Rule RelationOp
ruleRelationOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationOpAccess().getQualOp_RelationTokParserRuleCall()); }
	ruleQualOp_RelationTok
{ after(grammarAccess.getRelationOpAccess().getQualOp_RelationTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSegOp
entryRuleSegOp 
:
{ before(grammarAccess.getSegOpRule()); }
	 ruleSegOp
{ after(grammarAccess.getSegOpRule()); } 
	 EOF 
;

// Rule SegOp
ruleSegOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSegOpAccess().getQualOp_SegTokParserRuleCall()); }
	ruleQualOp_SegTok
{ after(grammarAccess.getSegOpAccess().getQualOp_SegTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusOp
entryRulePlusOp 
:
{ before(grammarAccess.getPlusOpRule()); }
	 rulePlusOp
{ after(grammarAccess.getPlusOpRule()); } 
	 EOF 
;

// Rule PlusOp
rulePlusOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusOpAccess().getQualOp_PlusTokParserRuleCall()); }
	ruleQualOp_PlusTok
{ after(grammarAccess.getPlusOpAccess().getQualOp_PlusTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotientOp
entryRuleQuotientOp 
:
{ before(grammarAccess.getQuotientOpRule()); }
	 ruleQuotientOp
{ after(grammarAccess.getQuotientOpRule()); } 
	 EOF 
;

// Rule QuotientOp
ruleQuotientOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotientOpAccess().getQualOp_QuotientTokParserRuleCall()); }
	ruleQualOp_QuotientTok
{ after(grammarAccess.getQuotientOpAccess().getQualOp_QuotientTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimesOp
entryRuleTimesOp 
:
{ before(grammarAccess.getTimesOpRule()); }
	 ruleTimesOp
{ after(grammarAccess.getTimesOpRule()); } 
	 EOF 
;

// Rule TimesOp
ruleTimesOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimesOpAccess().getQualOp_TimesTokParserRuleCall()); }
	ruleQualOp_TimesTok
{ after(grammarAccess.getTimesOpAccess().getQualOp_TimesTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePowerOp
entryRulePowerOp 
:
{ before(grammarAccess.getPowerOpRule()); }
	 rulePowerOp
{ after(grammarAccess.getPowerOpRule()); } 
	 EOF 
;

// Rule PowerOp
rulePowerOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerOpAccess().getQualOp_PowerTokParserRuleCall()); }
	ruleQualOp_PowerTok
{ after(grammarAccess.getPowerOpAccess().getQualOp_PowerTokParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrowTok
entryRuleArrowTok 
:
{ before(grammarAccess.getArrowTokRule()); }
	 ruleArrowTok
{ after(grammarAccess.getArrowTokRule()); } 
	 EOF 
;

// Rule ArrowTok
ruleArrowTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrowTokAccess().getAlternatives()); }
(rule__ArrowTok__Alternatives)
{ after(grammarAccess.getArrowTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLatticeTok
entryRuleLatticeTok 
:
{ before(grammarAccess.getLatticeTokRule()); }
	 ruleLatticeTok
{ after(grammarAccess.getLatticeTokRule()); } 
	 EOF 
;

// Rule LatticeTok
ruleLatticeTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLatticeTokAccess().getAlternatives()); }
(rule__LatticeTok__Alternatives)
{ after(grammarAccess.getLatticeTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationTok
entryRuleRelationTok 
:
{ before(grammarAccess.getRelationTokRule()); }
	 ruleRelationTok
{ after(grammarAccess.getRelationTokRule()); } 
	 EOF 
;

// Rule RelationTok
ruleRelationTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationTokAccess().getAlternatives()); }
(rule__RelationTok__Alternatives)
{ after(grammarAccess.getRelationTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSegTok
entryRuleSegTok 
:
{ before(grammarAccess.getSegTokRule()); }
	 ruleSegTok
{ after(grammarAccess.getSegTokRule()); } 
	 EOF 
;

// Rule SegTok
ruleSegTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSegTokAccess().getAlternatives()); }
(rule__SegTok__Alternatives)
{ after(grammarAccess.getSegTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusTok
entryRulePlusTok 
:
{ before(grammarAccess.getPlusTokRule()); }
	 rulePlusTok
{ after(grammarAccess.getPlusTokRule()); } 
	 EOF 
;

// Rule PlusTok
rulePlusTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusTokAccess().getAlternatives()); }
(rule__PlusTok__Alternatives)
{ after(grammarAccess.getPlusTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotientTok
entryRuleQuotientTok 
:
{ before(grammarAccess.getQuotientTokRule()); }
	 ruleQuotientTok
{ after(grammarAccess.getQuotientTokRule()); } 
	 EOF 
;

// Rule QuotientTok
ruleQuotientTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotientTokAccess().getAlternatives()); }
(rule__QuotientTok__Alternatives)
{ after(grammarAccess.getQuotientTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimesTok
entryRuleTimesTok 
:
{ before(grammarAccess.getTimesTokRule()); }
	 ruleTimesTok
{ after(grammarAccess.getTimesTokRule()); } 
	 EOF 
;

// Rule TimesTok
ruleTimesTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimesTokAccess().getAlternatives()); }
(rule__TimesTok__Alternatives)
{ after(grammarAccess.getTimesTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePowerTok
entryRulePowerTok 
:
{ before(grammarAccess.getPowerTokRule()); }
	 rulePowerTok
{ after(grammarAccess.getPowerTokRule()); } 
	 EOF 
;

// Rule PowerTok
rulePowerTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerTokAccess().getAlternatives()); }
(rule__PowerTok__Alternatives)
{ after(grammarAccess.getPowerTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplication
entryRuleApplication 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Application
ruleApplication
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplicationAccess().getRightJuxtaposedParserRuleCall()); }
	ruleRightJuxtaposed
{ after(grammarAccess.getApplicationAccess().getRightJuxtaposedParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRightJuxtaposed
entryRuleRightJuxtaposed 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getRightJuxtaposedRule()); }
	 ruleRightJuxtaposed
{ after(grammarAccess.getRightJuxtaposedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RightJuxtaposed
ruleRightJuxtaposed
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightJuxtaposedAccess().getJright_MoleculeParserRuleCall()); }
	ruleJright_Molecule
{ after(grammarAccess.getRightJuxtaposedAccess().getJright_MoleculeParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLeftJuxtaposed
entryRuleLeftJuxtaposed 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getLeftJuxtaposedRule()); }
	 ruleLeftJuxtaposed
{ after(grammarAccess.getLeftJuxtaposedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LeftJuxtaposed
ruleLeftJuxtaposed
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftJuxtaposedAccess().getJleft_MoleculeParserRuleCall()); }
	ruleJleft_Molecule
{ after(grammarAccess.getLeftJuxtaposedAccess().getJleft_MoleculeParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJright_Molecule
entryRuleJright_Molecule 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getJright_MoleculeRule()); }
	 ruleJright_Molecule
{ after(grammarAccess.getJright_MoleculeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jright_Molecule
ruleJright_Molecule
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJright_MoleculeAccess().getAlternatives()); }
(rule__Jright_Molecule__Alternatives)
{ after(grammarAccess.getJright_MoleculeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJright_Atom
entryRuleJright_Atom 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getJright_AtomRule()); }
	 ruleJright_Atom
{ after(grammarAccess.getJright_AtomRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jright_Atom
ruleJright_Atom
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJright_AtomAccess().getAlternatives()); }
(rule__Jright_Atom__Alternatives)
{ after(grammarAccess.getJright_AtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJleft_Molecule
entryRuleJleft_Molecule 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getJleft_MoleculeRule()); }
	 ruleJleft_Molecule
{ after(grammarAccess.getJleft_MoleculeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jleft_Molecule
ruleJleft_Molecule
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getAlternatives()); }
(rule__Jleft_Molecule__Alternatives)
{ after(grammarAccess.getJleft_MoleculeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJleft_Atom
entryRuleJleft_Atom 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getJleft_AtomRule()); }
	 ruleJleft_Atom
{ after(grammarAccess.getJleft_AtomRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Jleft_Atom
ruleJleft_Atom
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJleft_AtomAccess().getAlternatives()); }
(rule__Jleft_Atom__Alternatives)
{ after(grammarAccess.getJleft_AtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleMolecule
entryRuleMolecule 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getMoleculeRule()); }
	 ruleMolecule
{ after(grammarAccess.getMoleculeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Molecule
ruleMolecule
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMoleculeAccess().getAlternatives()); }
(rule__Molecule__Alternatives)
{ after(grammarAccess.getMoleculeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEnclosure
entryRuleEnclosure 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnclosureRule()); }
	 ruleEnclosure
{ after(grammarAccess.getEnclosureRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Enclosure
ruleEnclosure
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnclosureAccess().getAlternatives()); }
(rule__Enclosure__Alternatives)
{ after(grammarAccess.getEnclosureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDeclMolecule
entryRuleDeclMolecule 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getDeclMoleculeRule()); }
	 ruleDeclMolecule
{ after(grammarAccess.getDeclMoleculeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DeclMolecule
ruleDeclMolecule
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclMoleculeAccess().getAlternatives()); }
(rule__DeclMolecule__Alternatives)
{ after(grammarAccess.getDeclMoleculeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBlockMolecule
entryRuleBlockMolecule 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBlockMoleculeRule()); }
	 ruleBlockMolecule
{ after(grammarAccess.getBlockMoleculeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockMolecule
ruleBlockMolecule
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockMoleculeAccess().getAlternatives()); }
(rule__BlockMolecule__Alternatives)
{ after(grammarAccess.getBlockMoleculeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBlockEnclosure
entryRuleBlockEnclosure 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBlockEnclosureRule()); }
	 ruleBlockEnclosure
{ after(grammarAccess.getBlockEnclosureRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BlockEnclosure
ruleBlockEnclosure
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockEnclosureAccess().getAlternatives()); }
(rule__BlockEnclosure__Alternatives)
{ after(grammarAccess.getBlockEnclosureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBlock
entryRuleBlock 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getCurly_LabeledParserRuleCall()); }
	ruleCurly_Labeled
{ after(grammarAccess.getBlockAccess().getCurly_LabeledParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleParened
entryRuleParened 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getParenedRule()); }
	 ruleParened
{ after(grammarAccess.getParenedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Parened
ruleParened
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenedAccess().getGroup()); }
(rule__Parened__Group__0)
{ after(grammarAccess.getParenedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBracketed
entryRuleBracketed 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getBracketedRule()); }
	 ruleBracketed
{ after(grammarAccess.getBracketedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Bracketed
ruleBracketed
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketedAccess().getGroup()); }
(rule__Bracketed__Group__0)
{ after(grammarAccess.getBracketedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQuotedIds
entryRuleQuotedIds 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQuotedIdsRule()); }
	 ruleQuotedIds
{ after(grammarAccess.getQuotedIdsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QuotedIds
ruleQuotedIds
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedIdsAccess().getGroup()); }
(rule__QuotedIds__Group__0)
{ after(grammarAccess.getQuotedIdsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNames
entryRuleNames 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getNamesRule()); }
	 ruleNames
{ after(grammarAccess.getNamesRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Names
ruleNames
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamesAccess().getGroup()); }
(rule__Names__Group__0)
{ after(grammarAccess.getNamesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAtom
entryRuleAtom 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Atom
ruleAtom
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomAccess().getAlternatives()); }
(rule__Atom__Alternatives)
{ after(grammarAccess.getAtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleName
entryRuleName 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Name
ruleName
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getAlternatives()); }
(rule__Name__Alternatives)
{ after(grammarAccess.getNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleId
entryRuleId 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getIdRule()); }
	 ruleId
{ after(grammarAccess.getIdRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Id
ruleId
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdAccess().getNameAssignment()); }
(rule__Id__NameAssignment)
{ after(grammarAccess.getIdAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Literal
ruleLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_ArrowTok
entryRuleUnqualOp_ArrowTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_ArrowTokRule()); }
	 ruleUnqualOp_ArrowTok
{ after(grammarAccess.getUnqualOp_ArrowTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_ArrowTok
ruleUnqualOp_ArrowTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_ArrowTokAccess().getGroup()); }
(rule__UnqualOp_ArrowTok__Group__0)
{ after(grammarAccess.getUnqualOp_ArrowTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_LatticeTok
entryRuleUnqualOp_LatticeTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_LatticeTokRule()); }
	 ruleUnqualOp_LatticeTok
{ after(grammarAccess.getUnqualOp_LatticeTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_LatticeTok
ruleUnqualOp_LatticeTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_LatticeTokAccess().getGroup()); }
(rule__UnqualOp_LatticeTok__Group__0)
{ after(grammarAccess.getUnqualOp_LatticeTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_RelationTok
entryRuleUnqualOp_RelationTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_RelationTokRule()); }
	 ruleUnqualOp_RelationTok
{ after(grammarAccess.getUnqualOp_RelationTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_RelationTok
ruleUnqualOp_RelationTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_RelationTokAccess().getGroup()); }
(rule__UnqualOp_RelationTok__Group__0)
{ after(grammarAccess.getUnqualOp_RelationTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_SegTok
entryRuleUnqualOp_SegTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_SegTokRule()); }
	 ruleUnqualOp_SegTok
{ after(grammarAccess.getUnqualOp_SegTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_SegTok
ruleUnqualOp_SegTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_SegTokAccess().getGroup()); }
(rule__UnqualOp_SegTok__Group__0)
{ after(grammarAccess.getUnqualOp_SegTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_PlusTok
entryRuleUnqualOp_PlusTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_PlusTokRule()); }
	 ruleUnqualOp_PlusTok
{ after(grammarAccess.getUnqualOp_PlusTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PlusTok
ruleUnqualOp_PlusTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_PlusTokAccess().getGroup()); }
(rule__UnqualOp_PlusTok__Group__0)
{ after(grammarAccess.getUnqualOp_PlusTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_QuotientTok
entryRuleUnqualOp_QuotientTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_QuotientTokRule()); }
	 ruleUnqualOp_QuotientTok
{ after(grammarAccess.getUnqualOp_QuotientTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_QuotientTok
ruleUnqualOp_QuotientTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_QuotientTokAccess().getGroup()); }
(rule__UnqualOp_QuotientTok__Group__0)
{ after(grammarAccess.getUnqualOp_QuotientTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_TimesTok
entryRuleUnqualOp_TimesTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_TimesTokRule()); }
	 ruleUnqualOp_TimesTok
{ after(grammarAccess.getUnqualOp_TimesTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_TimesTok
ruleUnqualOp_TimesTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_TimesTokAccess().getGroup()); }
(rule__UnqualOp_TimesTok__Group__0)
{ after(grammarAccess.getUnqualOp_TimesTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnqualOp_PowerTok
entryRuleUnqualOp_PowerTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getUnqualOp_PowerTokRule()); }
	 ruleUnqualOp_PowerTok
{ after(grammarAccess.getUnqualOp_PowerTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnqualOp_PowerTok
ruleUnqualOp_PowerTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualOp_PowerTokAccess().getGroup()); }
(rule__UnqualOp_PowerTok__Group__0)
{ after(grammarAccess.getUnqualOp_PowerTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_ArrowTok
entryRuleQualOp_ArrowTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_ArrowTokRule()); }
	 ruleQualOp_ArrowTok
{ after(grammarAccess.getQualOp_ArrowTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_ArrowTok
ruleQualOp_ArrowTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getGroup()); }
(rule__QualOp_ArrowTok__Group__0)
{ after(grammarAccess.getQualOp_ArrowTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_LatticeTok
entryRuleQualOp_LatticeTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_LatticeTokRule()); }
	 ruleQualOp_LatticeTok
{ after(grammarAccess.getQualOp_LatticeTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_LatticeTok
ruleQualOp_LatticeTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getGroup()); }
(rule__QualOp_LatticeTok__Group__0)
{ after(grammarAccess.getQualOp_LatticeTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_RelationTok
entryRuleQualOp_RelationTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_RelationTokRule()); }
	 ruleQualOp_RelationTok
{ after(grammarAccess.getQualOp_RelationTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_RelationTok
ruleQualOp_RelationTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getGroup()); }
(rule__QualOp_RelationTok__Group__0)
{ after(grammarAccess.getQualOp_RelationTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_SegTok
entryRuleQualOp_SegTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_SegTokRule()); }
	 ruleQualOp_SegTok
{ after(grammarAccess.getQualOp_SegTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_SegTok
ruleQualOp_SegTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getGroup()); }
(rule__QualOp_SegTok__Group__0)
{ after(grammarAccess.getQualOp_SegTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_PlusTok
entryRuleQualOp_PlusTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_PlusTokRule()); }
	 ruleQualOp_PlusTok
{ after(grammarAccess.getQualOp_PlusTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PlusTok
ruleQualOp_PlusTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getGroup()); }
(rule__QualOp_PlusTok__Group__0)
{ after(grammarAccess.getQualOp_PlusTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_QuotientTok
entryRuleQualOp_QuotientTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_QuotientTokRule()); }
	 ruleQualOp_QuotientTok
{ after(grammarAccess.getQualOp_QuotientTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_QuotientTok
ruleQualOp_QuotientTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getGroup()); }
(rule__QualOp_QuotientTok__Group__0)
{ after(grammarAccess.getQualOp_QuotientTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_TimesTok
entryRuleQualOp_TimesTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_TimesTokRule()); }
	 ruleQualOp_TimesTok
{ after(grammarAccess.getQualOp_TimesTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_TimesTok
ruleQualOp_TimesTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getGroup()); }
(rule__QualOp_TimesTok__Group__0)
{ after(grammarAccess.getQualOp_TimesTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQualOp_PowerTok
entryRuleQualOp_PowerTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getQualOp_PowerTokRule()); }
	 ruleQualOp_PowerTok
{ after(grammarAccess.getQualOp_PowerTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualOp_PowerTok
ruleQualOp_PowerTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getGroup()); }
(rule__QualOp_PowerTok__Group__0)
{ after(grammarAccess.getQualOp_PowerTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePreDocument
entryRulePreDocument 
:
{ before(grammarAccess.getPreDocumentRule()); }
	 rulePreDocument
{ after(grammarAccess.getPreDocumentRule()); } 
	 EOF 
;

// Rule PreDocument
rulePreDocument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreDocumentAccess().getTK_PREDOCTerminalRuleCall()); }
(	RULE_TK_PREDOC)*
{ after(grammarAccess.getPreDocumentAccess().getTK_PREDOCTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostDocument
entryRulePostDocument 
:
{ before(grammarAccess.getPostDocumentRule()); }
	 rulePostDocument
{ after(grammarAccess.getPostDocumentRule()); } 
	 EOF 
;

// Rule PostDocument
rulePostDocument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostDocumentAccess().getTK_POSTDOCTerminalRuleCall()); }
(	RULE_TK_POSTDOC)*
{ after(grammarAccess.getPostDocumentAccess().getTK_POSTDOCTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleenlist1_CommaItem_Comma_AB
entryRuleenlist1_CommaItem_Comma_AB 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlist1_CommaItem_Comma_ABRule()); }
	 ruleenlist1_CommaItem_Comma_AB
{ after(grammarAccess.getEnlist1_CommaItem_Comma_ABRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_CommaItem_Comma_AB
ruleenlist1_CommaItem_Comma_AB
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlist1_CommaItem_Comma_ABAccess().getEnlister1_CommaItem_CommaParserRuleCall()); }
	ruleenlister1_CommaItem_Comma
{ after(grammarAccess.getEnlist1_CommaItem_Comma_ABAccess().getEnlister1_CommaItem_CommaParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlist1_Infixed_Comma_AB
entryRuleenlist1_Infixed_Comma_AB 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlist1_Infixed_Comma_ABRule()); }
	 ruleenlist1_Infixed_Comma_AB
{ after(grammarAccess.getEnlist1_Infixed_Comma_ABRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_Infixed_Comma_AB
ruleenlist1_Infixed_Comma_AB
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlist1_Infixed_Comma_ABAccess().getEnlister1_Infixed_CommaParserRuleCall()); }
	ruleenlister1_Infixed_Comma
{ after(grammarAccess.getEnlist1_Infixed_Comma_ABAccess().getEnlister1_Infixed_CommaParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlist1_InfixedExpr_Comma_AB
entryRuleenlist1_InfixedExpr_Comma_AB 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlist1_InfixedExpr_Comma_ABRule()); }
	 ruleenlist1_InfixedExpr_Comma_AB
{ after(grammarAccess.getEnlist1_InfixedExpr_Comma_ABRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1_InfixedExpr_Comma_AB
ruleenlist1_InfixedExpr_Comma_AB
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlist1_InfixedExpr_Comma_ABAccess().getEnlister1_InfixedExpr_CommaParserRuleCall()); }
	ruleenlister1_InfixedExpr_Comma
{ after(grammarAccess.getEnlist1_InfixedExpr_Comma_ABAccess().getEnlister1_InfixedExpr_CommaParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlister1_CommaItem_Comma
entryRuleenlister1_CommaItem_Comma 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlister1_CommaItem_CommaRule()); }
	 ruleenlister1_CommaItem_Comma
{ after(grammarAccess.getEnlister1_CommaItem_CommaRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_CommaItem_Comma
ruleenlister1_CommaItem_Comma
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getGroup()); }
(rule__Enlister1_CommaItem_Comma__Group__0)
{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlister1_Infixed_Comma
entryRuleenlister1_Infixed_Comma 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlister1_Infixed_CommaRule()); }
	 ruleenlister1_Infixed_Comma
{ after(grammarAccess.getEnlister1_Infixed_CommaRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_Infixed_Comma
ruleenlister1_Infixed_Comma
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getGroup()); }
(rule__Enlister1_Infixed_Comma__Group__0)
{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlister1_InfixedExpr_Comma
entryRuleenlister1_InfixedExpr_Comma 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaRule()); }
	 ruleenlister1_InfixedExpr_Comma
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1_InfixedExpr_Comma
ruleenlister1_InfixedExpr_Comma
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getGroup()); }
(rule__Enlister1_InfixedExpr_Comma__Group__0)
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlist1a_Labeled_Semicolon_AB
entryRuleenlist1a_Labeled_Semicolon_AB 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlist1a_Labeled_Semicolon_ABRule()); }
	 ruleenlist1a_Labeled_Semicolon_AB
{ after(grammarAccess.getEnlist1a_Labeled_Semicolon_ABRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlist1a_Labeled_Semicolon_AB
ruleenlist1a_Labeled_Semicolon_AB
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlist1a_Labeled_Semicolon_ABAccess().getEnlister1a_Labeled_SemicolonParserRuleCall()); }
	ruleenlister1a_Labeled_Semicolon
{ after(grammarAccess.getEnlist1a_Labeled_Semicolon_ABAccess().getEnlister1a_Labeled_SemicolonParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleenlister1a_Labeled_Semicolon
entryRuleenlister1a_Labeled_Semicolon 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
}
:
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonRule()); }
	 ruleenlister1a_Labeled_Semicolon
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule enlister1a_Labeled_Semicolon
ruleenlister1a_Labeled_Semicolon
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_KW_NEWLINE");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getGroup()); }
(rule__Enlister1a_Labeled_Semicolon__Group__0)
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCurly_Labeled
entryRuleCurly_Labeled 
:
{ before(grammarAccess.getCurly_LabeledRule()); }
	 ruleCurly_Labeled
{ after(grammarAccess.getCurly_LabeledRule()); } 
	 EOF 
;

// Rule Curly_Labeled
ruleCurly_Labeled
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCurly_LabeledAccess().getGroup()); }
(rule__Curly_Labeled__Group__0)
{ after(grammarAccess.getCurly_LabeledAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCurlyContents_Labeled
entryRuleCurlyContents_Labeled 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getCurlyContents_LabeledRule()); }
	 ruleCurlyContents_Labeled
{ after(grammarAccess.getCurlyContents_LabeledRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContents_Labeled
ruleCurlyContents_Labeled
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCurlyContents_LabeledAccess().getCurlyContentsList_LabeledParserRuleCall()); }
	ruleCurlyContentsList_Labeled
{ after(grammarAccess.getCurlyContents_LabeledAccess().getCurlyContentsList_LabeledParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCurlyContentsList_Labeled
entryRuleCurlyContentsList_Labeled 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getCurlyContentsList_LabeledRule()); }
	 ruleCurlyContentsList_Labeled
{ after(grammarAccess.getCurlyContentsList_LabeledRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CurlyContentsList_Labeled
ruleCurlyContentsList_Labeled
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getGroup()); }
(rule__CurlyContentsList_Labeled__Group__0)
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCurlyContentB_Labeled
entryRuleCurlyContentB_Labeled 
:
{ before(grammarAccess.getCurlyContentB_LabeledRule()); }
	 ruleCurlyContentB_Labeled
{ after(grammarAccess.getCurlyContentB_LabeledRule()); } 
	 EOF 
;

// Rule CurlyContentB_Labeled
ruleCurlyContentB_Labeled
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getGroup()); }
(rule__CurlyContentB_Labeled__Group__0)
{ after(grammarAccess.getCurlyContentB_LabeledAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Labeled__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledAccess().getCommaParserRuleCall_0()); }
	ruleComma
{ after(grammarAccess.getLabeledAccess().getCommaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLabeledAccess().getDeclarationParserRuleCall_1()); }
	ruleDeclaration
{ after(grammarAccess.getLabeledAccess().getDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLabeledAccess().getGroup_2()); }
(rule__Labeled__Group_2__0)
{ after(grammarAccess.getLabeledAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
(rule__Declaration__Group_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_1()); }
(rule__Declaration__Group_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
(rule__Declaration__Group_2__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_3()); }
(rule__Declaration__Group_3__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_4()); }
(rule__Declaration__Group_4__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_5()); }
(rule__Declaration__Group_5__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_6()); }
(rule__Declaration__Group_6__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_7()); }
(rule__Declaration__Group_7__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_8()); }
(rule__Declaration__Group_8__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_9()); }
(rule__Declaration__Group_9__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_10()); }
(rule__Declaration__Group_10__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getGroup_0()); }
(rule__ExportDecl__Group_0__0)
{ after(grammarAccess.getExportDeclAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExportDeclAccess().getGroup_1()); }
(rule__ExportDecl__Group_1__0)
{ after(grammarAccess.getExportDeclAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExportDeclAccess().getGroup_2()); }
(rule__ExportDecl__Group_2__0)
{ after(grammarAccess.getExportDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_0()); }
	ruleSig
{ after(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMacroBodyAccess().getExportDeclParserRuleCall_1()); }
	ruleExportDecl
{ after(grammarAccess.getMacroBodyAccess().getExportDeclParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMacroBodyAccess().getGroup_2()); }
(rule__MacroBody__Group_2__0)
{ after(grammarAccess.getMacroBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sig__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigAccess().getDeclBindingParserRuleCall_0()); }
	ruleDeclBinding
{ after(grammarAccess.getSigAccess().getDeclBindingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSigAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getSigAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclPartAccess().getGroup_0()); }
(rule__DeclPart__Group_0__0)
{ after(grammarAccess.getDeclPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclPartAccess().getGroup_1()); }
(rule__DeclPart__Group_1__0)
{ after(grammarAccess.getDeclPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBalStatementParserRuleCall_0()); }
	ruleBalStatement
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBalStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getGroup_1()); }
(rule__BindingL_Infixed_BalStatement__Group_1__0)
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAssignKeyword_1_0_1_0()); }

	'assign' 

{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAssignKeyword_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_2EQTerminalRuleCall_1_0_1_1()); }
	RULE_KW_2EQ
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_2EQTerminalRuleCall_1_0_1_1()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MARROWTerminalRuleCall_1_0_1_2()); }
	RULE_KW_MARROW
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MARROWTerminalRuleCall_1_0_1_2()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOTerminalRuleCall_1_0_1_3()); }
	RULE_KW_MAPSTO
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOTerminalRuleCall_1_0_1_3()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_1_4()); }
	RULE_KW_MAPSTOSTAR
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getCollectionParserRuleCall_0()); }
	ruleCollection
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getCollectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getGroup_1()); }
(rule__BindingL_Infixed_Collection__Group_1__0)
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getAssignKeyword_1_0_1_0()); }

	'assign' 

{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getAssignKeyword_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_2EQTerminalRuleCall_1_0_1_1()); }
	RULE_KW_2EQ
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_2EQTerminalRuleCall_1_0_1_1()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MARROWTerminalRuleCall_1_0_1_2()); }
	RULE_KW_MARROW
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MARROWTerminalRuleCall_1_0_1_2()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOTerminalRuleCall_1_0_1_3()); }
	RULE_KW_MAPSTO
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOTerminalRuleCall_1_0_1_3()); }
)

    |(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_1_4()); }
	RULE_KW_MAPSTOSTAR
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAssignKeyword_1_0_0()); }

	'assign' 

{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAssignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_2EQTerminalRuleCall_1_0_1()); }
	RULE_KW_2EQ
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_2EQTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MARROWTerminalRuleCall_1_0_2()); }
	RULE_KW_MARROW
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MARROWTerminalRuleCall_1_0_2()); }
)

    |(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_1_0_3()); }
	RULE_KW_MAPSTO
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOTerminalRuleCall_1_0_3()); }
)

    |(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_4()); }
	RULE_KW_MAPSTOSTAR
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getKW_MAPSTOSTARTerminalRuleCall_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getGroup_0()); }
(rule__AnyStatement__Group_0__0)
{ after(grammarAccess.getAnyStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAnyStatementAccess().getFlow_AnyStatementParserRuleCall_1()); }
	ruleFlow_AnyStatement
{ after(grammarAccess.getAnyStatementAccess().getFlow_AnyStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_0()); }
(rule__Flow_AnyStatement__Group_0__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_1()); }
(rule__Flow_AnyStatement__Group_1__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_2()); }
(rule__Flow_AnyStatement__Group_2__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_3()); }
(rule__Flow_AnyStatement__Group_3__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_4()); }
(rule__Flow_AnyStatement__Group_4__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_5()); }
(rule__Flow_AnyStatement__Group_5__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_6()); }
(rule__Flow_AnyStatement__Group_6__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_7()); }
(rule__Flow_AnyStatement__Group_7__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_8()); }
(rule__Flow_AnyStatement__Group_8__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_9()); }
(rule__Flow_AnyStatement__Group_9__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_10()); }
(rule__Flow_AnyStatement__Group_10__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_11()); }
(rule__Flow_AnyStatement__Group_11__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_12()); }
(rule__Flow_AnyStatement__Group_12__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_13()); }
(rule__Flow_AnyStatement__Group_13__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_14()); }
(rule__Flow_AnyStatement__Group_14__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_15()); }
(rule__Flow_AnyStatement__Group_15__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_16()); }
(rule__Flow_AnyStatement__Group_16__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_17()); }
(rule__Flow_AnyStatement__Group_17__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_17()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_18()); }
(rule__Flow_AnyStatement__StAssignment_18)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Alternatives_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getButKeyword_4_2_0()); }

	'but' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getButKeyword_4_2_0()); }
)

    |(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCatchKeyword_4_2_1()); }

	'catch' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getCatchKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_0()); }
(rule__Flow_BalStatement__Group_0__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_1()); }
(rule__Flow_BalStatement__Group_1__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_2()); }
(rule__Flow_BalStatement__Group_2__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_3()); }
(rule__Flow_BalStatement__Group_3__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_4()); }
(rule__Flow_BalStatement__Group_4__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_5()); }
(rule__Flow_BalStatement__Group_5__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_6()); }
(rule__Flow_BalStatement__Group_6__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_7()); }
(rule__Flow_BalStatement__Group_7__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_8()); }
(rule__Flow_BalStatement__Group_8__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_9()); }
(rule__Flow_BalStatement__Group_9__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_10()); }
(rule__Flow_BalStatement__Group_10__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_11()); }
(rule__Flow_BalStatement__Group_11__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_12()); }
(rule__Flow_BalStatement__Group_12__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_13()); }
(rule__Flow_BalStatement__Group_13__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_14()); }
(rule__Flow_BalStatement__Group_14__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_15()); }
(rule__Flow_BalStatement__Group_15__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_16()); }
(rule__Flow_BalStatement__Group_16__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_17()); }
(rule__Flow_BalStatement__Group_17__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_17()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_18()); }
(rule__Flow_BalStatement__St2Assignment_18)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Alternatives_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getButKeyword_4_2_0()); }

	'but' 

{ after(grammarAccess.getFlow_BalStatementAccess().getButKeyword_4_2_0()); }
)

    |(
{ before(grammarAccess.getFlow_BalStatementAccess().getCatchKeyword_4_2_1()); }

	'catch' 

{ after(grammarAccess.getFlow_BalStatementAccess().getCatchKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup_1_0()); }
(rule__AlwaysPart_AnyStatement__Group_1_0__0)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup_1_1()); }
(rule__AlwaysPart_AnyStatement__Group_1_1__0)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup_1_0()); }
(rule__AlwaysPart_BalStatement__Group_1_0__0)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup_1_1()); }
(rule__AlwaysPart_BalStatement__Group_1_1__0)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getGroup_0()); }
(rule__Iterator__Group_0__0)
{ after(grammarAccess.getIteratorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIteratorAccess().getGroup_1()); }
(rule__Iterator__Group_1__0)
{ after(grammarAccess.getIteratorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLhs__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLhsAccess().getFreeKeyword_0_0()); }

	'free' 

{ after(grammarAccess.getForLhsAccess().getFreeKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getForLhsAccess().getLocalKeyword_0_1()); }

	'local' 

{ after(grammarAccess.getForLhsAccess().getLocalKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getForLhsAccess().getFluidKeyword_0_2()); }

	'fluid' 

{ after(grammarAccess.getForLhsAccess().getFluidKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getGroup_0()); }
(rule__Infixed__Group_0__0)
{ after(grammarAccess.getInfixedAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInfixedAccess().getBAssignment_1()); }
(rule__Infixed__BAssignment_1)
{ after(grammarAccess.getInfixedAccess().getBAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixedExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedExprAccess().getE11_OpParserRuleCall_0()); }
	ruleE11_Op
{ after(grammarAccess.getInfixedExprAccess().getE11_OpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInfixedExprAccess().getE3ParserRuleCall_1()); }
(	ruleE3)
{ after(grammarAccess.getInfixedExprAccess().getE3ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E3__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getOpAndKeyword_1_1_0_0()); }

	'and' 

{ after(grammarAccess.getE3Access().getOpAndKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getE3Access().getOpOrKeyword_1_1_0_1()); }

	'or' 

{ after(grammarAccess.getE3Access().getOpOrKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getE3Access().getOpLatticeTokParserRuleCall_1_1_0_2()); }
	ruleLatticeTok
{ after(grammarAccess.getE3Access().getOpLatticeTokParserRuleCall_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E4__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getOpHasKeyword_1_1_0_0()); }

	'has' 

{ after(grammarAccess.getE4Access().getOpHasKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getE4Access().getOpRelationTokParserRuleCall_1_1_0_1()); }
	ruleRelationTok
{ after(grammarAccess.getE4Access().getOpRelationTokParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getOpAssignment_1_1_0()); }
(rule__E11_E12__OpAssignment_1_1_0)
{ after(grammarAccess.getE11_E12Access().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getE11_E12Access().getOpAssignment_1_1_1()); }
(rule__E11_E12__OpAssignment_1_1_1)
{ after(grammarAccess.getE11_E12Access().getOpAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getE11_E12Access().getOpAssignment_1_1_2()); }
(rule__E11_E12__OpAssignment_1_1_2)
{ after(grammarAccess.getE11_E12Access().getOpAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_0()); }
(rule__E11_Op__OpAssignment_1_1_0)
{ after(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_1()); }
(rule__E11_Op__OpAssignment_1_1_1)
{ after(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_2()); }
(rule__E11_Op__OpAssignment_1_1_2)
{ after(grammarAccess.getE11_OpAccess().getOpAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftAssignment_0()); }
(rule__E14__E15leftAssignment_0)
{ after(grammarAccess.getE14Access().getE15leftAssignment_0()); }
)

    |(
{ before(grammarAccess.getE14Access().getGroup_1()); }
(rule__E14__Group_1__0)
{ after(grammarAccess.getE14Access().getGroup_1()); }
)

    |(
{ before(grammarAccess.getE14Access().getGroup_2()); }
(rule__E14__Group_2__0)
{ after(grammarAccess.getE14Access().getGroup_2()); }
)

    |(
{ before(grammarAccess.getE14Access().getGroup_3()); }
(rule__E14__Group_3__0)
{ after(grammarAccess.getE14Access().getGroup_3()); }
)

    |(
{ before(grammarAccess.getE14Access().getGroup_4()); }
(rule__E14__Group_4__0)
{ after(grammarAccess.getE14Access().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getGroup_0()); }
(rule__Op__Group_0__0)
{ after(grammarAccess.getOpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_1()); }
(rule__Op__Group_1__0)
{ after(grammarAccess.getOpAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_2()); }
(rule__Op__Group_2__0)
{ after(grammarAccess.getOpAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_3()); }
(rule__Op__Group_3__0)
{ after(grammarAccess.getOpAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_4()); }
(rule__Op__Group_4__0)
{ after(grammarAccess.getOpAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_5()); }
(rule__Op__Group_5__0)
{ after(grammarAccess.getOpAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_6()); }
(rule__Op__Group_6__0)
{ after(grammarAccess.getOpAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getOpAccess().getGroup_7()); }
(rule__Op__Group_7__0)
{ after(grammarAccess.getOpAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NakedOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_ArrowTokParserRuleCall_0()); }
	ruleUnqualOp_ArrowTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_ArrowTokParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_LatticeTokParserRuleCall_1()); }
	ruleUnqualOp_LatticeTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_LatticeTokParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_RelationTokParserRuleCall_2()); }
	ruleUnqualOp_RelationTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_RelationTokParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_SegTokParserRuleCall_3()); }
	ruleUnqualOp_SegTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_SegTokParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_PlusTokParserRuleCall_4()); }
	ruleUnqualOp_PlusTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_PlusTokParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_QuotientTokParserRuleCall_5()); }
	ruleUnqualOp_QuotientTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_QuotientTokParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_TimesTokParserRuleCall_6()); }
	ruleUnqualOp_TimesTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_TimesTokParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getNakedOpAccess().getUnqualOp_PowerTokParserRuleCall_7()); }
	ruleUnqualOp_PowerTok
{ after(grammarAccess.getNakedOpAccess().getUnqualOp_PowerTokParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowTokAccess().getKW_RARROWTerminalRuleCall_0()); }
	RULE_KW_RARROW
{ after(grammarAccess.getArrowTokAccess().getKW_RARROWTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArrowTokAccess().getKW_LARROWTerminalRuleCall_1()); }
	RULE_KW_LARROW
{ after(grammarAccess.getArrowTokAccess().getKW_LARROWTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getArrowTokAccess().getKW_MAPSTARTerminalRuleCall_2()); }
	RULE_KW_MAPSTAR
{ after(grammarAccess.getArrowTokAccess().getKW_MAPSTARTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LatticeTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLatticeTokAccess().getKW_VEETerminalRuleCall_0()); }
	RULE_KW_VEE
{ after(grammarAccess.getLatticeTokAccess().getKW_VEETerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLatticeTokAccess().getKW_WEDGETerminalRuleCall_1()); }
	RULE_KW_WEDGE
{ after(grammarAccess.getLatticeTokAccess().getKW_WEDGETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTokAccess().getKW_EQTerminalRuleCall_0()); }
	RULE_KW_EQ
{ after(grammarAccess.getRelationTokAccess().getKW_EQTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_TILDEETerminalRuleCall_1()); }
	RULE_KW_TILDEE
{ after(grammarAccess.getRelationTokAccess().getKW_TILDEETerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_HATETerminalRuleCall_2()); }
	RULE_KW_HATE
{ after(grammarAccess.getRelationTokAccess().getKW_HATETerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_GETerminalRuleCall_3()); }
	RULE_KW_GE
{ after(grammarAccess.getRelationTokAccess().getKW_GETerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_GTTerminalRuleCall_4()); }
	RULE_KW_GT
{ after(grammarAccess.getRelationTokAccess().getKW_GTTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_2GTTerminalRuleCall_5()); }
	RULE_KW_2GT
{ after(grammarAccess.getRelationTokAccess().getKW_2GTTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_LETerminalRuleCall_6()); }
	RULE_KW_LE
{ after(grammarAccess.getRelationTokAccess().getKW_LETerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_LTTerminalRuleCall_7()); }
	RULE_KW_LT
{ after(grammarAccess.getRelationTokAccess().getKW_LTTerminalRuleCall_7()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getKW_2LTTerminalRuleCall_8()); }
	RULE_KW_2LT
{ after(grammarAccess.getRelationTokAccess().getKW_2LTTerminalRuleCall_8()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getIsKeyword_9()); }

	'is' 

{ after(grammarAccess.getRelationTokAccess().getIsKeyword_9()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getIsntKeyword_10()); }

	'isnt' 

{ after(grammarAccess.getRelationTokAccess().getIsntKeyword_10()); }
)

    |(
{ before(grammarAccess.getRelationTokAccess().getCaseKeyword_11()); }

	'case' 

{ after(grammarAccess.getRelationTokAccess().getCaseKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SegTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegTokAccess().getKW_2DOTTerminalRuleCall_0()); }
	RULE_KW_2DOT
{ after(grammarAccess.getSegTokAccess().getKW_2DOTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSegTokAccess().getByKeyword_1()); }

	'by' 

{ after(grammarAccess.getSegTokAccess().getByKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusTokAccess().getKW_PLUSTerminalRuleCall_0()); }
	RULE_KW_PLUS
{ after(grammarAccess.getPlusTokAccess().getKW_PLUSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPlusTokAccess().getKW_MINUSTerminalRuleCall_1()); }
	RULE_KW_MINUS
{ after(grammarAccess.getPlusTokAccess().getKW_MINUSTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPlusTokAccess().getKW_PLUSMINUSTerminalRuleCall_2()); }
	RULE_KW_PLUSMINUS
{ after(grammarAccess.getPlusTokAccess().getKW_PLUSMINUSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotientTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotientTokAccess().getModKeyword_0()); }

	'mod' 

{ after(grammarAccess.getQuotientTokAccess().getModKeyword_0()); }
)

    |(
{ before(grammarAccess.getQuotientTokAccess().getQuoKeyword_1()); }

	'quo' 

{ after(grammarAccess.getQuotientTokAccess().getQuoKeyword_1()); }
)

    |(
{ before(grammarAccess.getQuotientTokAccess().getRemKeyword_2()); }

	'rem' 

{ after(grammarAccess.getQuotientTokAccess().getRemKeyword_2()); }
)

    |(
{ before(grammarAccess.getQuotientTokAccess().getExquoKeyword_3()); }

	'exquo' 

{ after(grammarAccess.getQuotientTokAccess().getExquoKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesTokAccess().getKW_STARTerminalRuleCall_0()); }
	RULE_KW_STAR
{ after(grammarAccess.getTimesTokAccess().getKW_STARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTimesTokAccess().getKW_SLASHTerminalRuleCall_1()); }
	RULE_KW_SLASH
{ after(grammarAccess.getTimesTokAccess().getKW_SLASHTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTimesTokAccess().getKW_BACKSLASHTerminalRuleCall_2()); }
	RULE_KW_BACKSLASH
{ after(grammarAccess.getTimesTokAccess().getKW_BACKSLASHTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerTokAccess().getKW_2STARTerminalRuleCall_0()); }
	RULE_KW_2STAR
{ after(grammarAccess.getPowerTokAccess().getKW_2STARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPowerTokAccess().getKW_HATTerminalRuleCall_1()); }
	RULE_KW_HAT
{ after(grammarAccess.getPowerTokAccess().getKW_HATTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getGroup_0()); }
(rule__Jright_Molecule__Group_0__0)
{ after(grammarAccess.getJright_MoleculeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJright_MoleculeAccess().getGroup_1()); }
(rule__Jright_Molecule__Group_1__0)
{ after(grammarAccess.getJright_MoleculeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getGroup_0()); }
(rule__Jright_Atom__Group_0__0)
{ after(grammarAccess.getJright_AtomAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJright_AtomAccess().getGroup_1()); }
(rule__Jright_Atom__Group_1__0)
{ after(grammarAccess.getJright_AtomAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getGroup_0()); }
(rule__Jleft_Molecule__Group_0__0)
{ after(grammarAccess.getJleft_MoleculeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJleft_MoleculeAccess().getGroup_1()); }
(rule__Jleft_Molecule__Group_1__0)
{ after(grammarAccess.getJleft_MoleculeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getJleft_MoleculeAccess().getGroup_2()); }
(rule__Jleft_Molecule__Group_2__0)
{ after(grammarAccess.getJleft_MoleculeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getGroup_0()); }
(rule__Jleft_Atom__Group_0__0)
{ after(grammarAccess.getJleft_AtomAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJleft_AtomAccess().getGroup_1()); }
(rule__Jleft_Atom__Group_1__0)
{ after(grammarAccess.getJleft_AtomAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Molecule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMoleculeAccess().getAtomParserRuleCall_0()); }
(	ruleAtom)
{ after(grammarAccess.getMoleculeAccess().getAtomParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMoleculeAccess().getEnclosureParserRuleCall_1()); }
	ruleEnclosure
{ after(grammarAccess.getMoleculeAccess().getEnclosureParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enclosure__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnclosureAccess().getParenedParserRuleCall_0()); }
	ruleParened
{ after(grammarAccess.getEnclosureAccess().getParenedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEnclosureAccess().getBracketedParserRuleCall_1()); }
	ruleBracketed
{ after(grammarAccess.getEnclosureAccess().getBracketedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEnclosureAccess().getQuotedIdsParserRuleCall_2()); }
	ruleQuotedIds
{ after(grammarAccess.getEnclosureAccess().getQuotedIdsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclMolecule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclMoleculeAccess().getGroup_0()); }
(rule__DeclMolecule__Group_0__0)
{ after(grammarAccess.getDeclMoleculeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclMoleculeAccess().getBAssignment_1()); }
(rule__DeclMolecule__BAssignment_1)
{ after(grammarAccess.getDeclMoleculeAccess().getBAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockMolecule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockMoleculeAccess().getAtomParserRuleCall_0()); }
	ruleAtom
{ after(grammarAccess.getBlockMoleculeAccess().getAtomParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockMoleculeAccess().getEnclosureParserRuleCall_1()); }
	ruleEnclosure
{ after(grammarAccess.getBlockMoleculeAccess().getEnclosureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBlockMoleculeAccess().getBlockParserRuleCall_2()); }
	ruleBlock
{ after(grammarAccess.getBlockMoleculeAccess().getBlockParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockEnclosure__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockEnclosureAccess().getEnclosureParserRuleCall_0()); }
	ruleEnclosure
{ after(grammarAccess.getBlockEnclosureAccess().getEnclosureParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockEnclosureAccess().getBlockParserRuleCall_1()); }
	ruleBlock
{ after(grammarAccess.getBlockEnclosureAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getIdenAssignment_0()); }
(rule__Atom__IdenAssignment_0)
{ after(grammarAccess.getAtomAccess().getIdenAssignment_0()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getLitAssignment_1()); }
(rule__Atom__LitAssignment_1)
{ after(grammarAccess.getAtomAccess().getLitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getGroup_0()); }
(rule__Name__Group_0__0)
{ after(grammarAccess.getNameAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getNoAssignment_1()); }
(rule__Name__NoAssignment_1)
{ after(grammarAccess.getNameAccess().getNoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id__NameAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAccess().getNameTK_IDTerminalRuleCall_0_0()); }
	RULE_TK_ID
{ after(grammarAccess.getIdAccess().getNameTK_IDTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getIdAccess().getNameKW_SHARPTerminalRuleCall_0_1()); }
	RULE_KW_SHARP
{ after(grammarAccess.getIdAccess().getNameKW_SHARPTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getIdAccess().getNameKW_TILDETerminalRuleCall_0_2()); }
	RULE_KW_TILDE
{ after(grammarAccess.getIdAccess().getNameKW_TILDETerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getTK_INTTerminalRuleCall_0()); }
	RULE_TK_INT
{ after(grammarAccess.getLiteralAccess().getTK_INTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTK_STRINGTerminalRuleCall_1()); }
	RULE_TK_STRING
{ after(grammarAccess.getLiteralAccess().getTK_STRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_0()); }
(rule__Model__Group_0__0)*
{ after(grammarAccess.getModelAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCcAssignment_1()); }
(rule__Model__CcAssignment_1)
{ after(grammarAccess.getModelAccess().getCcAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getIncludeKeyword_0_0()); }

	'#include' 

{ after(grammarAccess.getModelAccess().getIncludeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInsertAssignment_0_1()); }
(rule__Model__InsertAssignment_0_1)
{ after(grammarAccess.getModelAccess().getInsertAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Labeled__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labeled__Group_2__0__Impl
	rule__Labeled__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledAccess().getKW_ATTerminalRuleCall_2_0()); }
	RULE_KW_AT
{ after(grammarAccess.getLabeledAccess().getKW_ATTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labeled__Group_2__1__Impl
	rule__Labeled__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledAccess().getAtomParserRuleCall_2_1()); }
	ruleAtom
{ after(grammarAccess.getLabeledAccess().getAtomParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labeled__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledAccess().getLabAssignment_2_2()); }
(rule__Labeled__LabAssignment_2_2)?
{ after(grammarAccess.getLabeledAccess().getLabAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__1__Impl
	rule__Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getMacroKeyword_0_1()); }

	'macro' 

{ after(grammarAccess.getDeclarationAccess().getMacroKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getMbAssignment_0_2()); }
(rule__Declaration__MbAssignment_0_2)
{ after(grammarAccess.getDeclarationAccess().getMbAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__0__Impl
	rule__Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_1_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__1__Impl
	rule__Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExtendKeyword_1_1()); }

	'extend' 

{ after(grammarAccess.getDeclarationAccess().getExtendKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_1_2()); }
(rule__Declaration__SiAssignment_1_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_2_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__1__Impl
	rule__Declaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLocalKeyword_2_1()); }

	'local' 

{ after(grammarAccess.getDeclarationAccess().getLocalKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_2_2()); }
(rule__Declaration__SiAssignment_2_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_3__0__Impl
	rule__Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_3_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_3__1__Impl
	rule__Declaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFreeKeyword_3_1()); }

	'free' 

{ after(grammarAccess.getDeclarationAccess().getFreeKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_3_2()); }
(rule__Declaration__SiAssignment_3_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_4__0__Impl
	rule__Declaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_4_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_4__1__Impl
	rule__Declaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFluidKeyword_4_1()); }

	'fluid' 

{ after(grammarAccess.getDeclarationAccess().getFluidKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_4_2()); }
(rule__Declaration__SiAssignment_4_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_5__0__Impl
	rule__Declaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_5_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_5__1__Impl
	rule__Declaration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDefaultKeyword_5_1()); }

	'default' 

{ after(grammarAccess.getDeclarationAccess().getDefaultKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_5_2()); }
(rule__Declaration__SiAssignment_5_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_6__0__Impl
	rule__Declaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_6_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_6__1__Impl
	rule__Declaration__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDefineKeyword_6_1()); }

	'define' 

{ after(grammarAccess.getDeclarationAccess().getDefineKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_6_2()); }
(rule__Declaration__SiAssignment_6_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_7__0__Impl
	rule__Declaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_7_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_7__1__Impl
	rule__Declaration__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFixKeyword_7_1()); }

	'fix' 

{ after(grammarAccess.getDeclarationAccess().getFixKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_7_2()); }
(rule__Declaration__SiAssignment_7_2)
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_8__0__Impl
	rule__Declaration__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_8_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_8__1__Impl
	rule__Declaration__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInlineKeyword_8_1()); }

	'inline' 

{ after(grammarAccess.getDeclarationAccess().getInlineKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_8__2__Impl
	rule__Declaration__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_8_2()); }
(rule__Declaration__SiAssignment_8_2)?
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFpAssignment_8_3()); }
(rule__Declaration__FpAssignment_8_3)?
{ after(grammarAccess.getDeclarationAccess().getFpAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Declaration__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__0__Impl
	rule__Declaration__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_9_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__1__Impl
	rule__Declaration__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getImportKeyword_9_1()); }

	'import' 

{ after(grammarAccess.getDeclarationAccess().getImportKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__2__Impl
	rule__Declaration__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiAssignment_9_2()); }
(rule__Declaration__SiAssignment_9_2)?
{ after(grammarAccess.getDeclarationAccess().getSiAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFpAssignment_9_3()); }
(rule__Declaration__FpAssignment_9_3)?
{ after(grammarAccess.getDeclarationAccess().getFpAssignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Declaration__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_10__0__Impl
	rule__Declaration__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_10_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEdAssignment_10_1()); }
(rule__Declaration__EdAssignment_10_1)
{ after(grammarAccess.getDeclarationAccess().getEdAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExportDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_0__0__Impl
	rule__ExportDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getExportDeclAction_0_0()); }
(

)
{ after(grammarAccess.getExportDeclAccess().getExportDeclAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_0__1__Impl
	rule__ExportDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getExportKeyword_0_1()); }

	'export' 

{ after(grammarAccess.getExportDeclAccess().getExportKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSAssignment_0_2()); }
(rule__ExportDecl__SAssignment_0_2)?
{ after(grammarAccess.getExportDeclAccess().getSAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExportDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getGroup_1_0()); }
(rule__ExportDecl__Group_1_0__0)
{ after(grammarAccess.getExportDeclAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExportDecl__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_1_0__0__Impl
	rule__ExportDecl__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getExportKeyword_1_0_0()); }

	'export' 

{ after(grammarAccess.getExportDeclAccess().getExportKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_1_0__1__Impl
	rule__ExportDecl__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSAssignment_1_0_1()); }
(rule__ExportDecl__SAssignment_1_0_1)?
{ after(grammarAccess.getExportDeclAccess().getSAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getTpAssignment_1_0_2()); }
(rule__ExportDecl__TpAssignment_1_0_2)
{ after(grammarAccess.getExportDeclAccess().getTpAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExportDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getGroup_2_0()); }
(rule__ExportDecl__Group_2_0__0)
{ after(grammarAccess.getExportDeclAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExportDecl__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_2_0__0__Impl
	rule__ExportDecl__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getExportKeyword_2_0_0()); }

	'export' 

{ after(grammarAccess.getExportDeclAccess().getExportKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_2_0__1__Impl
	rule__ExportDecl__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSAssignment_2_0_1()); }
(rule__ExportDecl__SAssignment_2_0_1)?
{ after(grammarAccess.getExportDeclAccess().getSAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportDecl__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportDecl__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getFpAssignment_2_0_2()); }
(rule__ExportDecl__FpAssignment_2_0_2)
{ after(grammarAccess.getExportDeclAccess().getFpAssignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ToPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ToPart__Group__0__Impl
	rule__ToPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToPartAccess().getToKeyword_0()); }

	'to' 

{ after(grammarAccess.getToPartAccess().getToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ToPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ToPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToPartAccess().getInfixedParserRuleCall_1()); }
	ruleInfixed
{ after(grammarAccess.getToPartAccess().getInfixedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FromPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromPart__Group__0__Impl
	rule__FromPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromPartAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getFromPartAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromPartAccess().getEnlist1_Infixed_Comma_ABParserRuleCall_1()); }
	ruleenlist1_Infixed_Comma_AB
{ after(grammarAccess.getFromPartAccess().getEnlist1_Infixed_Comma_ABParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroBody__Group_2__0__Impl
	rule__MacroBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroBodyAccess().getImportKeyword_2_0()); }

	'import' 

{ after(grammarAccess.getMacroBodyAccess().getImportKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroBody__Group_2__1__Impl
	rule__MacroBody__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_2_1()); }
	ruleSig
{ after(grammarAccess.getMacroBodyAccess().getSigParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroBody__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroBody__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroBody__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroBodyAccess().getFpAssignment_2_2()); }
(rule__MacroBody__FpAssignment_2_2)?
{ after(grammarAccess.getMacroBodyAccess().getFpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclPart__Group_0__0__Impl
	rule__DeclPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclPart__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclPartAccess().getKW_COLONTerminalRuleCall_0_0()); }
	RULE_KW_COLON
{ after(grammarAccess.getDeclPartAccess().getKW_COLONTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclPart__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_0_1()); }
	ruleType
{ after(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclPart__Group_1__0__Impl
	rule__DeclPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclPartAccess().getKW_COLONSTARTerminalRuleCall_1_0()); }
	RULE_KW_COLONSTAR
{ after(grammarAccess.getDeclPartAccess().getKW_COLONSTARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getDeclPartAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommaItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaItem__Group__0__Impl
	rule__CommaItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getBinding_AnyStatementParserRuleCall_0()); }
	ruleBinding_AnyStatement
{ after(grammarAccess.getCommaItemAccess().getBinding_AnyStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommaItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getGroup_1()); }
(rule__CommaItem__Group_1__0)*
{ after(grammarAccess.getCommaItemAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommaItem__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaItem__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getGroup_1_0()); }
(rule__CommaItem__Group_1_0__0)
{ after(grammarAccess.getCommaItemAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CommaItem__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaItem__Group_1_0__0__Impl
	rule__CommaItem__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getWhereKeyword_1_0_0()); }

	'where' 

{ after(grammarAccess.getCommaItemAccess().getWhereKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommaItem__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaItem__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getCiAssignment_1_0_1()); }
(rule__CommaItem__CiAssignment_1_0_1)
{ after(grammarAccess.getCommaItemAccess().getCiAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixedExprsDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfixedExprsDecl__Group__0__Impl
	rule__InfixedExprsDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixedExprsDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedExprsDeclAccess().getInfixedExprsParserRuleCall_0()); }
	ruleInfixedExprs
{ after(grammarAccess.getInfixedExprsDeclAccess().getInfixedExprsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfixedExprsDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfixedExprsDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixedExprsDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedExprsDeclAccess().getDpAssignment_1()); }
(rule__InfixedExprsDecl__DpAssignment_1)*
{ after(grammarAccess.getInfixedExprsDeclAccess().getDpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingL_Infixed_BalStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_BalStatement__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getGroup_1_0()); }
(rule__BindingL_Infixed_BalStatement__Group_1_0__0)
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BindingL_Infixed_BalStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_BalStatement__Group_1_0__0__Impl
	rule__BindingL_Infixed_BalStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_1_0_0()); }
	ruleInfixed
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getInfixedParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingL_Infixed_BalStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_BalStatement__Group_1_0__1__Impl
	rule__BindingL_Infixed_BalStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAlternatives_1_0_1()); }
(rule__BindingL_Infixed_BalStatement__Alternatives_1_0_1)
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingL_Infixed_BalStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_BalStatement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibAssignment_1_0_2()); }
(rule__BindingL_Infixed_BalStatement__BibAssignment_1_0_2)
{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingL_Infixed_Collection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_Collection__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getGroup_1_0()); }
(rule__BindingL_Infixed_Collection__Group_1_0__0)
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BindingL_Infixed_Collection__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_Collection__Group_1_0__0__Impl
	rule__BindingL_Infixed_Collection__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_1_0_0()); }
	ruleInfixed
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getInfixedParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingL_Infixed_Collection__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_Collection__Group_1_0__1__Impl
	rule__BindingL_Infixed_Collection__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getAlternatives_1_0_1()); }
(rule__BindingL_Infixed_Collection__Alternatives_1_0_1)
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingL_Infixed_Collection__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingL_Infixed_Collection__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicAssignment_1_0_2()); }
(rule__BindingL_Infixed_Collection__BicAssignment_1_0_2)
{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingR_InfixedExprsDecl_AnyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group__0__Impl
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_0()); }
	ruleInfixedExprsDecl
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getInfixedExprsDeclParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingR_InfixedExprsDecl_AnyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getGroup_1()); }
(rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__0)?
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__0__Impl
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAlternatives_1_0()); }
(rule__BindingR_InfixedExprsDecl_AnyStatement__Alternatives_1_0)
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasAssignment_1_1()); }
(rule__BindingR_InfixedExprsDecl_AnyStatement__BasAssignment_1_1)
{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnyStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyStatement__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getGroup_0_0()); }
(rule__AnyStatement__Group_0_0__0)
{ after(grammarAccess.getAnyStatementAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AnyStatement__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyStatement__Group_0_0__0__Impl
	rule__AnyStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getIfKeyword_0_0_0()); }

	'if' 

{ after(grammarAccess.getAnyStatementAccess().getIfKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyStatement__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyStatement__Group_0_0__1__Impl
	rule__AnyStatement__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getCommaItemParserRuleCall_0_0_1()); }
	ruleCommaItem
{ after(grammarAccess.getAnyStatementAccess().getCommaItemParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyStatement__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyStatement__Group_0_0__2__Impl
	rule__AnyStatement__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getThenKeyword_0_0_2()); }

	'then' 

{ after(grammarAccess.getAnyStatementAccess().getThenKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyStatement__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyStatement__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getBasAssignment_0_0_3()); }
(rule__AnyStatement__BasAssignment_0_0_3)
{ after(grammarAccess.getAnyStatementAccess().getBasAssignment_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow_AnyStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0__0__Impl
	rule__Flow_AnyStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getFlow_AnyStatementAction_0_0()); }
(

)
{ after(grammarAccess.getFlow_AnyStatementAccess().getFlow_AnyStatementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_0_1()); }
(rule__Flow_AnyStatement__Group_0_1__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0_1__0__Impl
	rule__Flow_AnyStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCAssignment_0_1_0()); }
(rule__Flow_AnyStatement__CAssignment_0_1_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getCAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_0_1_1()); }
(rule__Flow_AnyStatement__Group_0_1_1__0)?
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0_1_1__0__Impl
	rule__Flow_AnyStatement__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_0_1_1_0()); }
(rule__Flow_AnyStatement__StAssignment_0_1_1_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas2Assignment_0_1_1_1()); }
(rule__Flow_AnyStatement__Bas2Assignment_0_1_1_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBas2Assignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__0__Impl
	rule__Flow_AnyStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_1_0()); }
(rule__Flow_AnyStatement__StAssignment_1_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__1__Impl
	rule__Flow_AnyStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCiAssignment_1_1()); }
(rule__Flow_AnyStatement__CiAssignment_1_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getCiAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__2__Impl
	rule__Flow_AnyStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getThenKeyword_1_2()); }

	'then' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getThenKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__3__Impl
	rule__Flow_AnyStatement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBbsAssignment_1_3()); }
(rule__Flow_AnyStatement__BbsAssignment_1_3)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBbsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__4__Impl
	rule__Flow_AnyStatement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getElseKeyword_1_4()); }
(
	'else' 
)
{ after(grammarAccess.getFlow_AnyStatementAccess().getElseKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_1_5()); }
(rule__Flow_AnyStatement__BasAssignment_1_5)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Flow_AnyStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGroup_2_0()); }
(rule__Flow_AnyStatement__Group_2_0__0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Flow_AnyStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_2_0__0__Impl
	rule__Flow_AnyStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getIteratorsParserRuleCall_2_0_0()); }
	ruleIterators
{ after(grammarAccess.getFlow_AnyStatementAccess().getIteratorsParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_2_0__1__Impl
	rule__Flow_AnyStatement__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getRepeatKeyword_2_0_1()); }

	'repeat' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getRepeatKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas3Assignment_2_0_2()); }
(rule__Flow_AnyStatement__Bas3Assignment_2_0_2)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBas3Assignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Flow_AnyStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_3__0__Impl
	rule__Flow_AnyStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_3_0()); }
(rule__Flow_AnyStatement__StAssignment_3_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_3_1()); }
(rule__Flow_AnyStatement__BasAssignment_3_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_4__0__Impl
	rule__Flow_AnyStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_4_0()); }
(rule__Flow_AnyStatement__StAssignment_4_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_4__1__Impl
	rule__Flow_AnyStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_4_1()); }
(rule__Flow_AnyStatement__BasAssignment_4_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_4__2__Impl
	rule__Flow_AnyStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getAlternatives_4_2()); }
(rule__Flow_AnyStatement__Alternatives_4_2)
{ after(grammarAccess.getFlow_AnyStatementAccess().getAlternatives_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_4__3__Impl
	rule__Flow_AnyStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBe2Assignment_4_3()); }
(rule__Flow_AnyStatement__Be2Assignment_4_3)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBe2Assignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getApaAssignment_4_4()); }
(rule__Flow_AnyStatement__ApaAssignment_4_4)
{ after(grammarAccess.getFlow_AnyStatementAccess().getApaAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Flow_AnyStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_5__0__Impl
	rule__Flow_AnyStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_5_0()); }
(rule__Flow_AnyStatement__StAssignment_5_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_5__1__Impl
	rule__Flow_AnyStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_5_1()); }
(rule__Flow_AnyStatement__BasAssignment_5_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_5__2__Impl
	rule__Flow_AnyStatement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getInKeyword_5_2()); }

	'in' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getInKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCaAssignment_5_3()); }
(rule__Flow_AnyStatement__CaAssignment_5_3)
{ after(grammarAccess.getFlow_AnyStatementAccess().getCaAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow_AnyStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_6__0__Impl
	rule__Flow_AnyStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_6_0()); }
(rule__Flow_AnyStatement__StAssignment_6_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_6_1()); }
(rule__Flow_AnyStatement__BasAssignment_6_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_7__0__Impl
	rule__Flow_AnyStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_7_0()); }
(rule__Flow_AnyStatement__StAssignment_7_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_7_1()); }
(rule__Flow_AnyStatement__BasAssignment_7_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_8__0__Impl
	rule__Flow_AnyStatement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_8_0()); }
(rule__Flow_AnyStatement__StAssignment_8_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_8_1()); }
(rule__Flow_AnyStatement__BasAssignment_8_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_9__0__Impl
	rule__Flow_AnyStatement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_9_0()); }
(rule__Flow_AnyStatement__StAssignment_9_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_9__1__Impl
	rule__Flow_AnyStatement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGbAssignment_9_1()); }
(rule__Flow_AnyStatement__GbAssignment_9_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getGbAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas4Assignment_9_2()); }
(rule__Flow_AnyStatement__Bas4Assignment_9_2)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBas4Assignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Flow_AnyStatement__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_10__0__Impl
	rule__Flow_AnyStatement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_10_0()); }
(rule__Flow_AnyStatement__StAssignment_10_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_10_1()); }
(rule__Flow_AnyStatement__BasAssignment_10_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_11__0__Impl
	rule__Flow_AnyStatement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_11_0()); }
(rule__Flow_AnyStatement__StAssignment_11_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getNAssignment_11_1()); }
(rule__Flow_AnyStatement__NAssignment_11_1)?
{ after(grammarAccess.getFlow_AnyStatementAccess().getNAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_12__0__Impl
	rule__Flow_AnyStatement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_12_0()); }
(rule__Flow_AnyStatement__StAssignment_12_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getNAssignment_12_1()); }
(rule__Flow_AnyStatement__NAssignment_12_1)?
{ after(grammarAccess.getFlow_AnyStatementAccess().getNAssignment_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_13__0__Impl
	rule__Flow_AnyStatement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_13_0()); }
(rule__Flow_AnyStatement__StAssignment_13_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCAssignment_13_1()); }
(rule__Flow_AnyStatement__CAssignment_13_1)?
{ after(grammarAccess.getFlow_AnyStatementAccess().getCAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_14__0__Impl
	rule__Flow_AnyStatement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_14_0()); }
(rule__Flow_AnyStatement__StAssignment_14_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_14_1()); }
(rule__Flow_AnyStatement__BasAssignment_14_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_15__0__Impl
	rule__Flow_AnyStatement__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_15_0()); }
(rule__Flow_AnyStatement__StAssignment_15_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_15_1()); }
(rule__Flow_AnyStatement__BasAssignment_15_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_16__0__Impl
	rule__Flow_AnyStatement__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_16_0()); }
(rule__Flow_AnyStatement__StAssignment_16_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_16__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_16_1()); }
(rule__Flow_AnyStatement__BasAssignment_16_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getBasAssignment_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_AnyStatement__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_17__0__Impl
	rule__Flow_AnyStatement__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_17_0()); }
(rule__Flow_AnyStatement__StAssignment_17_0)
{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssignment_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_AnyStatement__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_AnyStatement__Group_17__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getI2Assignment_17_1()); }
(rule__Flow_AnyStatement__I2Assignment_17_1)
{ after(grammarAccess.getFlow_AnyStatementAccess().getI2Assignment_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_0__0__Impl
	rule__Flow_BalStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getCollectionParserRuleCall_0_0()); }
	ruleCollection
{ after(grammarAccess.getFlow_BalStatementAccess().getCollectionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_0_1()); }
(rule__Flow_BalStatement__Group_0_1__0)?
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_0_1__0__Impl
	rule__Flow_BalStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_0_1_0()); }
(rule__Flow_BalStatement__St2Assignment_0_1_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs3Assignment_0_1_1()); }
(rule__Flow_BalStatement__Bbs3Assignment_0_1_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs3Assignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__0__Impl
	rule__Flow_BalStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_1_0()); }
(rule__Flow_BalStatement__St2Assignment_1_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__1__Impl
	rule__Flow_BalStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getCi2Assignment_1_1()); }
(rule__Flow_BalStatement__Ci2Assignment_1_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getCi2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__2__Impl
	rule__Flow_BalStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getThenKeyword_1_2()); }

	'then' 

{ after(grammarAccess.getFlow_BalStatementAccess().getThenKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__3__Impl
	rule__Flow_BalStatement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs4Assignment_1_3()); }
(rule__Flow_BalStatement__Bbs4Assignment_1_3)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs4Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__4__Impl
	rule__Flow_BalStatement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getElseKeyword_1_4()); }
(
	'else' 
)
{ after(grammarAccess.getFlow_BalStatementAccess().getElseKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs4Assignment_1_5()); }
(rule__Flow_BalStatement__Bbs4Assignment_1_5)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs4Assignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Flow_BalStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getGroup_2_0()); }
(rule__Flow_BalStatement__Group_2_0__0)
{ after(grammarAccess.getFlow_BalStatementAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Flow_BalStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_2_0__0__Impl
	rule__Flow_BalStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getIteratorsParserRuleCall_2_0_0()); }
	ruleIterators
{ after(grammarAccess.getFlow_BalStatementAccess().getIteratorsParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_2_0__1__Impl
	rule__Flow_BalStatement__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_2_0_1()); }
(rule__Flow_BalStatement__St2Assignment_2_0_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs3Assignment_2_0_2()); }
(rule__Flow_BalStatement__Bbs3Assignment_2_0_2)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs3Assignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Flow_BalStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_3__0__Impl
	rule__Flow_BalStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_3_0()); }
(rule__Flow_BalStatement__St2Assignment_3_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_3_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_3_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_4__0__Impl
	rule__Flow_BalStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_4_0()); }
(rule__Flow_BalStatement__St2Assignment_4_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_4__1__Impl
	rule__Flow_BalStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs2Assignment_4_1()); }
(rule__Flow_BalStatement__Bbs2Assignment_4_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs2Assignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_4__2__Impl
	rule__Flow_BalStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getAlternatives_4_2()); }
(rule__Flow_BalStatement__Alternatives_4_2)
{ after(grammarAccess.getFlow_BalStatementAccess().getAlternatives_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_4__3__Impl
	rule__Flow_BalStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBeAssignment_4_3()); }
(rule__Flow_BalStatement__BeAssignment_4_3)
{ after(grammarAccess.getFlow_BalStatementAccess().getBeAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getApbAssignment_4_4()); }
(rule__Flow_BalStatement__ApbAssignment_4_4)
{ after(grammarAccess.getFlow_BalStatementAccess().getApbAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Flow_BalStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_5__0__Impl
	rule__Flow_BalStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_5_0()); }
(rule__Flow_BalStatement__St2Assignment_5_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_5__1__Impl
	rule__Flow_BalStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs2Assignment_5_1()); }
(rule__Flow_BalStatement__Bbs2Assignment_5_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs2Assignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_5__2__Impl
	rule__Flow_BalStatement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getInKeyword_5_2()); }

	'in' 

{ after(grammarAccess.getFlow_BalStatementAccess().getInKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getCa2Assignment_5_3()); }
(rule__Flow_BalStatement__Ca2Assignment_5_3)
{ after(grammarAccess.getFlow_BalStatementAccess().getCa2Assignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow_BalStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_6__0__Impl
	rule__Flow_BalStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_6_0()); }
(rule__Flow_BalStatement__St2Assignment_6_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_6_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_6_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_7__0__Impl
	rule__Flow_BalStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_7_0()); }
(rule__Flow_BalStatement__St2Assignment_7_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_7_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_7_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_8__0__Impl
	rule__Flow_BalStatement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_8_0()); }
(rule__Flow_BalStatement__St2Assignment_8_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_8_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_8_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_9__0__Impl
	rule__Flow_BalStatement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_9_0()); }
(rule__Flow_BalStatement__St2Assignment_9_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_9__1__Impl
	rule__Flow_BalStatement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getGb2Assignment_9_1()); }
(rule__Flow_BalStatement__Gb2Assignment_9_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getGb2Assignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_9_2()); }
(rule__Flow_BalStatement__Bbs5Assignment_9_2)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Flow_BalStatement__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_10__0__Impl
	rule__Flow_BalStatement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_10_0()); }
(rule__Flow_BalStatement__St2Assignment_10_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_10_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_10_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_11__0__Impl
	rule__Flow_BalStatement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_11_0()); }
(rule__Flow_BalStatement__St2Assignment_11_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getN2Assignment_11_1()); }
(rule__Flow_BalStatement__N2Assignment_11_1)?
{ after(grammarAccess.getFlow_BalStatementAccess().getN2Assignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_12__0__Impl
	rule__Flow_BalStatement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_12_0()); }
(rule__Flow_BalStatement__St2Assignment_12_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getN2Assignment_12_1()); }
(rule__Flow_BalStatement__N2Assignment_12_1)?
{ after(grammarAccess.getFlow_BalStatementAccess().getN2Assignment_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_13__0__Impl
	rule__Flow_BalStatement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_13_0()); }
(rule__Flow_BalStatement__St2Assignment_13_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getC2Assignment_13_1()); }
(rule__Flow_BalStatement__C2Assignment_13_1)?
{ after(grammarAccess.getFlow_BalStatementAccess().getC2Assignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_14__0__Impl
	rule__Flow_BalStatement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_14_0()); }
(rule__Flow_BalStatement__St2Assignment_14_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_14_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_14_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_15__0__Impl
	rule__Flow_BalStatement__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_15_0()); }
(rule__Flow_BalStatement__St2Assignment_15_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_15_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_15_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_16__0__Impl
	rule__Flow_BalStatement__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_16_0()); }
(rule__Flow_BalStatement__St2Assignment_16_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_16__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_16_1()); }
(rule__Flow_BalStatement__Bbs5Assignment_16_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Assignment_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_BalStatement__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_17__0__Impl
	rule__Flow_BalStatement__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_17_0()); }
(rule__Flow_BalStatement__St2Assignment_17_0)
{ after(grammarAccess.getFlow_BalStatementAccess().getSt2Assignment_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_BalStatement__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_BalStatement__Group_17__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getI3Assignment_17_1()); }
(rule__Flow_BalStatement__I3Assignment_17_1)
{ after(grammarAccess.getFlow_BalStatementAccess().getI3Assignment_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenBound__Group__0__Impl
	rule__GenBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getGenBoundAction_0()); }
(

)
{ after(grammarAccess.getGenBoundAccess().getGenBoundAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getGroup_1()); }
(rule__GenBound__Group_1__0)?
{ after(grammarAccess.getGenBoundAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenBound__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenBound__Group_1__0__Impl
	rule__GenBound__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getToKeyword_1_0()); }

	'to' 

{ after(grammarAccess.getGenBoundAccess().getToKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenBound__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenBound__Group_1__1__Impl
	rule__GenBound__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getCiAssignment_1_1()); }
(rule__GenBound__CiAssignment_1_1)
{ after(grammarAccess.getGenBoundAccess().getCiAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenBound__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenBound__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getOfKeyword_1_2()); }

	'of' 

{ after(grammarAccess.getGenBoundAccess().getOfKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ButExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ButExpr__Group__0__Impl
	rule__ButExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getButExprAction_0()); }
(

)
{ after(grammarAccess.getButExprAccess().getButExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ButExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ButExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getGroup_1()); }
(rule__ButExpr__Group_1__0)?
{ after(grammarAccess.getButExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ButExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ButExpr__Group_1__0__Impl
	rule__ButExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getDbAssignment_1_0()); }
(rule__ButExpr__DbAssignment_1_0)
{ after(grammarAccess.getButExprAccess().getDbAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ButExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ButExpr__Group_1__1__Impl
	rule__ButExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getInKeyword_1_1()); }

	'in' 

{ after(grammarAccess.getButExprAccess().getInKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ButExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ButExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getCaAssignment_1_2()); }
(rule__ButExpr__CaAssignment_1_2)
{ after(grammarAccess.getButExprAccess().getCaAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AlwaysPart_AnyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group__0__Impl
	rule__AlwaysPart_AnyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysPart_AnyStatementAction_0()); }
(

)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysPart_AnyStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_AnyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlternatives_1()); }
(rule__AlwaysPart_AnyStatement__Alternatives_1)?
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysPart_AnyStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group_1_0__0__Impl
	rule__AlwaysPart_AnyStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysKeyword_1_0_0()); }

	'always' 

{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getAlwaysKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_AnyStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Assignment_1_0_1()); }
(rule__AlwaysPart_AnyStatement__Bas7Assignment_1_0_1)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Assignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysPart_AnyStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group_1_1__0__Impl
	rule__AlwaysPart_AnyStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getFinallyKeyword_1_1_0()); }

	'finally' 

{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getFinallyKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_AnyStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_AnyStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Assignment_1_1_1()); }
(rule__AlwaysPart_AnyStatement__Bas7Assignment_1_1_1)
{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Assignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysPart_BalStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group__0__Impl
	rule__AlwaysPart_BalStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysPart_BalStatementAction_0()); }
(

)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysPart_BalStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_BalStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getAlternatives_1()); }
(rule__AlwaysPart_BalStatement__Alternatives_1)?
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysPart_BalStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group_1_0__0__Impl
	rule__AlwaysPart_BalStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysKeyword_1_0_0()); }

	'always' 

{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getAlwaysKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_BalStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Assignment_1_0_1()); }
(rule__AlwaysPart_BalStatement__Bas7Assignment_1_0_1)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Assignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysPart_BalStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group_1_1__0__Impl
	rule__AlwaysPart_BalStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getFinallyKeyword_1_1_0()); }

	'finally' 

{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getFinallyKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysPart_BalStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysPart_BalStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Assignment_1_1_1()); }
(rule__AlwaysPart_BalStatement__Bas7Assignment_1_1_1)
{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Assignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Collection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collection__Group__0__Impl
	rule__Collection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionAccess().getInfixedParserRuleCall_0()); }
	ruleInfixed
{ after(grammarAccess.getCollectionAccess().getInfixedParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionAccess().getI3Assignment_1()); }
(rule__Collection__I3Assignment_1)
{ after(grammarAccess.getCollectionAccess().getI3Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Iterators1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterators1__Group__0__Impl
	rule__Iterators1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterators1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterators1Access().getIterators1Action_0()); }
(

)
{ after(grammarAccess.getIterators1Access().getIterators1Action_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterators1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterators1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterators1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterators1Access().getItrAssignment_1()); }
(rule__Iterators1__ItrAssignment_1)*
{ after(grammarAccess.getIterators1Access().getItrAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Iterator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_0__0__Impl
	rule__Iterator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getForKeyword_0_0()); }

	'for' 

{ after(grammarAccess.getIteratorAccess().getForKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_0__1__Impl
	rule__Iterator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getForLhsParserRuleCall_0_1()); }
	ruleForLhs
{ after(grammarAccess.getIteratorAccess().getForLhsParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_0__2__Impl
	rule__Iterator__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getInKeyword_0_2()); }

	'in' 

{ after(grammarAccess.getIteratorAccess().getInKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_0__3__Impl
	rule__Iterator__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getIAssignment_0_3()); }
(rule__Iterator__IAssignment_0_3)
{ after(grammarAccess.getIteratorAccess().getIAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getSpAssignment_0_4()); }
(rule__Iterator__SpAssignment_0_4)?
{ after(grammarAccess.getIteratorAccess().getSpAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Iterator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_1__0__Impl
	rule__Iterator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getWhileKeyword_1_0()); }

	'while' 

{ after(grammarAccess.getIteratorAccess().getWhileKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Iterator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getIAssignment_1_1()); }
(rule__Iterator__IAssignment_1_1)
{ after(grammarAccess.getIteratorAccess().getIAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForLhs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLhs__Group__0__Impl
	rule__ForLhs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLhs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLhsAccess().getAlternatives_0()); }
(rule__ForLhs__Alternatives_0)?
{ after(grammarAccess.getForLhsAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLhs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLhs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLhs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_1()); }
	ruleInfixed
{ after(grammarAccess.getForLhsAccess().getInfixedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuchthatPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuchthatPart__Group__0__Impl
	rule__SuchthatPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuchthatPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuchthatPartAccess().getKW_BARTerminalRuleCall_0()); }
	RULE_KW_BAR
{ after(grammarAccess.getSuchthatPartAccess().getKW_BARTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuchthatPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuchthatPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuchthatPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuchthatPartAccess().getInfixedParserRuleCall_1()); }
	ruleInfixed
{ after(grammarAccess.getSuchthatPartAccess().getInfixedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Infixed__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Infixed__Group_0__0__Impl
	rule__Infixed__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getIfxAssignment_0_0()); }
(rule__Infixed__IfxAssignment_0_0)
{ after(grammarAccess.getInfixedAccess().getIfxAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Infixed__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Infixed__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getDpAssignment_0_1()); }
(rule__Infixed__DpAssignment_0_1)*
{ after(grammarAccess.getInfixedAccess().getDpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E3__Group__0__Impl
	rule__E3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getE4ParserRuleCall_0()); }
	ruleE4
{ after(grammarAccess.getE3Access().getE4ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getGroup_1()); }
(rule__E3__Group_1__0)*
{ after(grammarAccess.getE3Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E3__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E3__Group_1__0__Impl
	rule__E3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E3__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getE3LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE3Access().getE3LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E3__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E3__Group_1__1__Impl
	rule__E3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E3__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getOpAssignment_1_1()); }
(rule__E3__OpAssignment_1_1)
{ after(grammarAccess.getE3Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E3__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E3__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getRightAssignment_1_2()); }
(rule__E3__RightAssignment_1_2)
{ after(grammarAccess.getE3Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E4__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E4__Group__0__Impl
	rule__E4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E4__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getE5ParserRuleCall_0()); }
	ruleE5
{ after(grammarAccess.getE4Access().getE5ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E4__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E4__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getGroup_1()); }
(rule__E4__Group_1__0)*
{ after(grammarAccess.getE4Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E4__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E4__Group_1__0__Impl
	rule__E4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E4__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getE4LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE4Access().getE4LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E4__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E4__Group_1__1__Impl
	rule__E4__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E4__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getOpAssignment_1_1()); }
(rule__E4__OpAssignment_1_1)
{ after(grammarAccess.getE4Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E4__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E4__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E4__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getRightAssignment_1_2()); }
(rule__E4__RightAssignment_1_2)
{ after(grammarAccess.getE4Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E5__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E5__Group__0__Impl
	rule__E5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E5__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getE6ParserRuleCall_0()); }
	ruleE6
{ after(grammarAccess.getE5Access().getE6ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E5__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E5__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getGroup_1()); }
(rule__E5__Group_1__0)*
{ after(grammarAccess.getE5Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E5__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E5__Group_1__0__Impl
	rule__E5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E5__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getE5LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE5Access().getE5LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E5__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E5__Group_1__1__Impl
	rule__E5__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E5__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getOpAssignment_1_1()); }
(rule__E5__OpAssignment_1_1)
{ after(grammarAccess.getE5Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E5__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E5__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E5__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getRightAssignment_1_2()); }
(rule__E5__RightAssignment_1_2)
{ after(grammarAccess.getE5Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E6__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E6__Group__0__Impl
	rule__E6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E6__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getE7ParserRuleCall_0()); }
	ruleE7
{ after(grammarAccess.getE6Access().getE7ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E6__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E6__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getGroup_1()); }
(rule__E6__Group_1__0)*
{ after(grammarAccess.getE6Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E6__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E6__Group_1__0__Impl
	rule__E6__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E6__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getE6LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE6Access().getE6LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E6__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E6__Group_1__1__Impl
	rule__E6__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E6__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getOpAssignment_1_1()); }
(rule__E6__OpAssignment_1_1)
{ after(grammarAccess.getE6Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E6__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E6__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E6__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getRightAssignment_1_2()); }
(rule__E6__RightAssignment_1_2)
{ after(grammarAccess.getE6Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E7__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E7__Group__0__Impl
	rule__E7__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E7__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getE8ParserRuleCall_0()); }
	ruleE8
{ after(grammarAccess.getE7Access().getE8ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E7__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E7__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E7__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getGroup_1()); }
(rule__E7__Group_1__0)*
{ after(grammarAccess.getE7Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E7__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E7__Group_1__0__Impl
	rule__E7__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E7__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getE7LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE7Access().getE7LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E7__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E7__Group_1__1__Impl
	rule__E7__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E7__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getOpAssignment_1_1()); }
(rule__E7__OpAssignment_1_1)
{ after(grammarAccess.getE7Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E7__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E7__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E7__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getRightAssignment_1_2()); }
(rule__E7__RightAssignment_1_2)
{ after(grammarAccess.getE7Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E8__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E8__Group__0__Impl
	rule__E8__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E8__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getE9ParserRuleCall_0()); }
	ruleE9
{ after(grammarAccess.getE8Access().getE9ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E8__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E8__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E8__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getGroup_1()); }
(rule__E8__Group_1__0)*
{ after(grammarAccess.getE8Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E8__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E8__Group_1__0__Impl
	rule__E8__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E8__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getE8LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE8Access().getE8LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E8__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E8__Group_1__1__Impl
	rule__E8__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E8__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getOpAssignment_1_1()); }
(rule__E8__OpAssignment_1_1)
{ after(grammarAccess.getE8Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E8__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E8__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E8__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getRightAssignment_1_2()); }
(rule__E8__RightAssignment_1_2)
{ after(grammarAccess.getE8Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E9__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E9__Group__0__Impl
	rule__E9__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E9__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getE11_E12ParserRuleCall_0()); }
	ruleE11_E12
{ after(grammarAccess.getE9Access().getE11_E12ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E9__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E9__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E9__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getGroup_1()); }
(rule__E9__Group_1__0)*
{ after(grammarAccess.getE9Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E9__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E9__Group_1__0__Impl
	rule__E9__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E9__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getE9LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE9Access().getE9LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E9__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E9__Group_1__1__Impl
	rule__E9__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E9__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getOpAssignment_1_1()); }
(rule__E9__OpAssignment_1_1)
{ after(grammarAccess.getE9Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E9__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E9__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E9__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getRightAssignment_1_2()); }
(rule__E9__RightAssignment_1_2)
{ after(grammarAccess.getE9Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E11_E12__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_E12__Group__0__Impl
	rule__E11_E12__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getE12ParserRuleCall_0()); }
	ruleE12
{ after(grammarAccess.getE11_E12Access().getE12ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_E12__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_E12__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getGroup_1()); }
(rule__E11_E12__Group_1__0)*
{ after(grammarAccess.getE11_E12Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E11_E12__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_E12__Group_1__0__Impl
	rule__E11_E12__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getE11_E12LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE11_E12Access().getE11_E12LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_E12__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_E12__Group_1__1__Impl
	rule__E11_E12__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getAlternatives_1_1()); }
(rule__E11_E12__Alternatives_1_1)
{ after(grammarAccess.getE11_E12Access().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_E12__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_E12__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getRightAssignment_1_2()); }
(rule__E11_E12__RightAssignment_1_2)
{ after(grammarAccess.getE11_E12Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E11_Op__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_Op__Group__0__Impl
	rule__E11_Op__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getOpParserRuleCall_0()); }
	ruleOp
{ after(grammarAccess.getE11_OpAccess().getOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_Op__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_Op__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getGroup_1()); }
(rule__E11_Op__Group_1__0)*
{ after(grammarAccess.getE11_OpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E11_Op__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_Op__Group_1__0__Impl
	rule__E11_Op__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getE11_OpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getE11_OpAccess().getE11_OpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_Op__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_Op__Group_1__1__Impl
	rule__E11_Op__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getAlternatives_1_1()); }
(rule__E11_Op__Alternatives_1_1)
{ after(grammarAccess.getE11_OpAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E11_Op__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E11_Op__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getRightAssignment_1_2()); }
(rule__E11_Op__RightAssignment_1_2)
{ after(grammarAccess.getE11_OpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E12__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E12__Group__0__Impl
	rule__E12__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E12__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getE13ParserRuleCall_0()); }
	ruleE13
{ after(grammarAccess.getE12Access().getE13ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E12__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E12__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E12__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getGroup_1()); }
(rule__E12__Group_1__0)*
{ after(grammarAccess.getE12Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E12__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E12__Group_1__0__Impl
	rule__E12__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E12__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getE12LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE12Access().getE12LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E12__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E12__Group_1__1__Impl
	rule__E12__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E12__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getOpAssignment_1_1()); }
(rule__E12__OpAssignment_1_1)
{ after(grammarAccess.getE12Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E12__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E12__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E12__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getRightAssignment_1_2()); }
(rule__E12__RightAssignment_1_2)
{ after(grammarAccess.getE12Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E13__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E13__Group__0__Impl
	rule__E13__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E13__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getE14ParserRuleCall_0()); }
	ruleE14
{ after(grammarAccess.getE13Access().getE14ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E13__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E13__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E13__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getGroup_1()); }
(rule__E13__Group_1__0)*
{ after(grammarAccess.getE13Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E13__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E13__Group_1__0__Impl
	rule__E13__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E13__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getE13LeftAction_1_0()); }
(

)
{ after(grammarAccess.getE13Access().getE13LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E13__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E13__Group_1__1__Impl
	rule__E13__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E13__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getOpAssignment_1_1()); }
(rule__E13__OpAssignment_1_1)
{ after(grammarAccess.getE13Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E13__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E13__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E13__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getRightAssignment_1_2()); }
(rule__E13__RightAssignment_1_2)
{ after(grammarAccess.getE13Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualTail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualTail__Group__0__Impl
	rule__QualTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getLeftJuxtaposedParserRuleCall_0()); }
	ruleLeftJuxtaposed
{ after(grammarAccess.getQualTailAccess().getLeftJuxtaposedParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualTail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualTail__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getGroup_1()); }
(rule__QualTail__Group_1__0)?
{ after(grammarAccess.getQualTailAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualTail__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualTail__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getGroup_1_0()); }
(rule__QualTail__Group_1_0__0)
{ after(grammarAccess.getQualTailAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__QualTail__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualTail__Group_1_0__0__Impl
	rule__QualTail__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualTail__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualTail__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getQtAssignment_1_0_1()); }
(rule__QualTail__QtAssignment_1_0_1)
{ after(grammarAccess.getQualTailAccess().getQtAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpQualTail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpQualTail__Group__0__Impl
	rule__OpQualTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getNamAssignment_0()); }
(rule__OpQualTail__NamAssignment_0)
{ after(grammarAccess.getOpQualTailAccess().getNamAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpQualTail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpQualTail__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getGroup_1()); }
(rule__OpQualTail__Group_1__0)?
{ after(grammarAccess.getOpQualTailAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpQualTail__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpQualTail__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getGroup_1_0()); }
(rule__OpQualTail__Group_1_0__0)
{ after(grammarAccess.getOpQualTailAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpQualTail__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpQualTail__Group_1_0__0__Impl
	rule__OpQualTail__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getOpQualTailAccess().getKW_DOLLARTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpQualTail__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpQualTail__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getOpQualTailParserRuleCall_1_0_1()); }
	ruleOpQualTail
{ after(grammarAccess.getOpQualTailAccess().getOpQualTailParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__E14__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getGroup_1_0()); }
(rule__E14__Group_1_0__0)
{ after(grammarAccess.getE14Access().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__E14__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_1_0__0__Impl
	rule__E14__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftAssignment_1_0_0()); }
(rule__E14__E15leftAssignment_1_0_0)?
{ after(grammarAccess.getE14Access().getE15leftAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_1_0__1__Impl
	rule__E14__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpAssignment_1_0_1()); }
(rule__E14__OpAssignment_1_0_1)
{ after(grammarAccess.getE14Access().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getDmAssignment_1_0_2()); }
(rule__E14__DmAssignment_1_0_2)
{ after(grammarAccess.getE14Access().getDmAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E14__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getGroup_2_0()); }
(rule__E14__Group_2_0__0)
{ after(grammarAccess.getE14Access().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__E14__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_2_0__0__Impl
	rule__E14__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftAssignment_2_0_0()); }
(rule__E14__E15leftAssignment_2_0_0)?
{ after(grammarAccess.getE14Access().getE15leftAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_2_0__1__Impl
	rule__E14__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpAssignment_2_0_1()); }
(rule__E14__OpAssignment_2_0_1)
{ after(grammarAccess.getE14Access().getOpAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getDmAssignment_2_0_2()); }
(rule__E14__DmAssignment_2_0_2)
{ after(grammarAccess.getE14Access().getDmAssignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E14__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getGroup_3_0()); }
(rule__E14__Group_3_0__0)
{ after(grammarAccess.getE14Access().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__E14__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_3_0__0__Impl
	rule__E14__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftAssignment_3_0_0()); }
(rule__E14__E15leftAssignment_3_0_0)
{ after(grammarAccess.getE14Access().getE15leftAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_3_0__1__Impl
	rule__E14__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpAssignment_3_0_1()); }
(rule__E14__OpAssignment_3_0_1)
{ after(grammarAccess.getE14Access().getOpAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15rightAssignment_3_0_2()); }
(rule__E14__E15rightAssignment_3_0_2)
{ after(grammarAccess.getE14Access().getE15rightAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__E14__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getGroup_4_0()); }
(rule__E14__Group_4_0__0)
{ after(grammarAccess.getE14Access().getGroup_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__E14__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_4_0__0__Impl
	rule__E14__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftAssignment_4_0_0()); }
(rule__E14__E15leftAssignment_4_0_0)
{ after(grammarAccess.getE14Access().getE15leftAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_4_0__1__Impl
	rule__E14__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpAssignment_4_0_1()); }
(rule__E14__OpAssignment_4_0_1)
{ after(grammarAccess.getE14Access().getOpAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__E14__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__E14__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__E14__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15rightAssignment_4_0_2()); }
(rule__E14__E15rightAssignment_4_0_2)
{ after(grammarAccess.getE14Access().getE15rightAssignment_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Op__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_0__0__Impl
	rule__Op__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_0_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_0_1()); }
(rule__Op__AopAssignment_0_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_1__0__Impl
	rule__Op__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_1_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_1_1()); }
(rule__Op__AopAssignment_1_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_2__0__Impl
	rule__Op__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_2_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_2_1()); }
(rule__Op__AopAssignment_2_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3__0__Impl
	rule__Op__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_3_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_3_1()); }
(rule__Op__AopAssignment_3_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_4__0__Impl
	rule__Op__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_4_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_4_1()); }
(rule__Op__AopAssignment_4_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_5__0__Impl
	rule__Op__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_5_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_5_1()); }
(rule__Op__AopAssignment_5_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_6__0__Impl
	rule__Op__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_6_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_6_1()); }
(rule__Op__AopAssignment_6_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Op__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_7__0__Impl
	rule__Op__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getOpAction_7_0()); }
(

)
{ after(grammarAccess.getOpAccess().getOpAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Op__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Op__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Op__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopAssignment_7_1()); }
(rule__Op__AopAssignment_7_1)
{ after(grammarAccess.getOpAccess().getAopAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jright_Molecule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Molecule__Group_0__0__Impl
	rule__Jright_Molecule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getJleft_MoleculeParserRuleCall_0_0()); }
	ruleJleft_Molecule
{ after(grammarAccess.getJright_MoleculeAccess().getJleft_MoleculeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jright_Molecule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Molecule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getRightAssignment_0_1()); }
(rule__Jright_Molecule__RightAssignment_0_1)?
{ after(grammarAccess.getJright_MoleculeAccess().getRightAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jright_Molecule__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Molecule__Group_1__0__Impl
	rule__Jright_Molecule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getNotKeyword_1_0()); }

	'not' 

{ after(grammarAccess.getJright_MoleculeAccess().getNotKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jright_Molecule__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Molecule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getRightAssignment_1_1()); }
(rule__Jright_Molecule__RightAssignment_1_1)
{ after(grammarAccess.getJright_MoleculeAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jright_Atom__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Atom__Group_0__0__Impl
	rule__Jright_Atom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getJleft_AtomParserRuleCall_0_0()); }
	ruleJleft_Atom
{ after(grammarAccess.getJright_AtomAccess().getJleft_AtomParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jright_Atom__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Atom__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getRight2Assignment_0_1()); }
(rule__Jright_Atom__Right2Assignment_0_1)?
{ after(grammarAccess.getJright_AtomAccess().getRight2Assignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jright_Atom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Atom__Group_1__0__Impl
	rule__Jright_Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getNotKeyword_1_0()); }

	'not' 

{ after(grammarAccess.getJright_AtomAccess().getNotKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jright_Atom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jright_Atom__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getRight2Assignment_1_1()); }
(rule__Jright_Atom__Right2Assignment_1_1)
{ after(grammarAccess.getJright_AtomAccess().getRight2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Molecule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_0__0__Impl
	rule__Jleft_Molecule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getJleft_MoleculeAccess().getNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Molecule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBeAssignment_0_1()); }
(rule__Jleft_Molecule__BeAssignment_0_1)
{ after(grammarAccess.getJleft_MoleculeAccess().getBeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Molecule__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getGroup_1_0()); }
(rule__Jleft_Molecule__Group_1_0__0)
{ after(grammarAccess.getJleft_MoleculeAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Jleft_Molecule__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_1_0__0__Impl
	rule__Jleft_Molecule__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getMAssignment_1_0_0()); }
(rule__Jleft_Molecule__MAssignment_1_0_0)
{ after(grammarAccess.getJleft_MoleculeAccess().getMAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Molecule__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBeAssignment_1_0_1()); }
(rule__Jleft_Molecule__BeAssignment_1_0_1)*
{ after(grammarAccess.getJleft_MoleculeAccess().getBeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Molecule__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_2__0__Impl
	rule__Jleft_Molecule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getMAssignment_2_0()); }
(rule__Jleft_Molecule__MAssignment_2_0)
{ after(grammarAccess.getJleft_MoleculeAccess().getMAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Molecule__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getGroup_2_1()); }
(rule__Jleft_Molecule__Group_2_1__0)*
{ after(grammarAccess.getJleft_MoleculeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Molecule__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_2_1__0__Impl
	rule__Jleft_Molecule__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getKW_DOTTerminalRuleCall_2_1_0()); }
	RULE_KW_DOT
{ after(grammarAccess.getJleft_MoleculeAccess().getKW_DOTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Molecule__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Molecule__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBmAssignment_2_1_1()); }
(rule__Jleft_Molecule__BmAssignment_2_1_1)
{ after(grammarAccess.getJleft_MoleculeAccess().getBmAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Atom__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0__0__Impl
	rule__Jleft_Atom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getGroup_0_0()); }
(rule__Jleft_Atom__Group_0_0__0)
{ after(grammarAccess.getJleft_AtomAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Atom__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getGroup_0_1()); }
(rule__Jleft_Atom__Group_0_1__0)
{ after(grammarAccess.getJleft_AtomAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Atom__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0_0__0__Impl
	rule__Jleft_Atom__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getAAssignment_0_0_0()); }
(rule__Jleft_Atom__AAssignment_0_0_0)
{ after(grammarAccess.getJleft_AtomAccess().getAAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Atom__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBeAssignment_0_0_1()); }
(rule__Jleft_Atom__BeAssignment_0_0_1)*
{ after(grammarAccess.getJleft_AtomAccess().getBeAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Atom__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0_1__0__Impl
	rule__Jleft_Atom__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getNAssignment_0_1_0()); }
(rule__Jleft_Atom__NAssignment_0_1_0)
{ after(grammarAccess.getJleft_AtomAccess().getNAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Atom__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBeAssignment_0_1_1()); }
(rule__Jleft_Atom__BeAssignment_0_1_1)
{ after(grammarAccess.getJleft_AtomAccess().getBeAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Atom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_1__0__Impl
	rule__Jleft_Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getAtomParserRuleCall_1_0()); }
	ruleAtom
{ after(grammarAccess.getJleft_AtomAccess().getAtomParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Atom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getGroup_1_1()); }
(rule__Jleft_Atom__Group_1_1__0)*
{ after(grammarAccess.getJleft_AtomAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jleft_Atom__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_1_1__0__Impl
	rule__Jleft_Atom__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getKW_DOTTerminalRuleCall_1_1_0()); }
	RULE_KW_DOT
{ after(grammarAccess.getJleft_AtomAccess().getKW_DOTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jleft_Atom__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jleft_Atom__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBm4Assignment_1_1_1()); }
(rule__Jleft_Atom__Bm4Assignment_1_1_1)
{ after(grammarAccess.getJleft_AtomAccess().getBm4Assignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclMolecule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclMolecule__Group_0__0__Impl
	rule__DeclMolecule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclMolecule__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclMoleculeAccess().getDeclMoleculeAction_0_0()); }
(

)
{ after(grammarAccess.getDeclMoleculeAccess().getDeclMoleculeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclMolecule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclMolecule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclMolecule__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclMoleculeAccess().getAAssignment_0_1()); }
(rule__DeclMolecule__AAssignment_0_1)?
{ after(grammarAccess.getDeclMoleculeAccess().getAAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parened__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parened__Group__0__Impl
	rule__Parened__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parened__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenedAccess().getOpAssignment_0()); }
(rule__Parened__OpAssignment_0)
{ after(grammarAccess.getParenedAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parened__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parened__Group__1__Impl
	rule__Parened__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parened__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenedAccess().getEAssignment_1()); }
(rule__Parened__EAssignment_1)?
{ after(grammarAccess.getParenedAccess().getEAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parened__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parened__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parened__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenedAccess().getKW_CPARENTerminalRuleCall_2()); }
	RULE_KW_CPAREN
{ after(grammarAccess.getParenedAccess().getKW_CPARENTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Bracketed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bracketed__Group__0__Impl
	rule__Bracketed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracketed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketedAccess().getOpAssignment_0()); }
(rule__Bracketed__OpAssignment_0)
{ after(grammarAccess.getBracketedAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bracketed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bracketed__Group__1__Impl
	rule__Bracketed__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracketed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketedAccess().getEAssignment_1()); }
(rule__Bracketed__EAssignment_1)?
{ after(grammarAccess.getBracketedAccess().getEAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bracketed__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bracketed__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bracketed__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketedAccess().getKW_CBRACKTerminalRuleCall_2()); }
	RULE_KW_CBRACK
{ after(grammarAccess.getBracketedAccess().getKW_CBRACKTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QuotedIds__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedIds__Group__0__Impl
	rule__QuotedIds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getQuotedIdsAction_0()); }
(

)
{ after(grammarAccess.getQuotedIdsAccess().getQuotedIdsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedIds__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedIds__Group__1__Impl
	rule__QuotedIds__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getOpAssignment_1()); }
(rule__QuotedIds__OpAssignment_1)
{ after(grammarAccess.getQuotedIdsAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedIds__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedIds__Group__2__Impl
	rule__QuotedIds__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getNAssignment_2()); }
(rule__QuotedIds__NAssignment_2)?
{ after(grammarAccess.getQuotedIdsAccess().getNAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedIds__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedIds__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_3()); }
	RULE_KW_QUOTE
{ after(grammarAccess.getQuotedIdsAccess().getKW_QUOTETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Names__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Names__Group__0__Impl
	rule__Names__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getFirstNameAssignment_0()); }
(rule__Names__FirstNameAssignment_0)
{ after(grammarAccess.getNamesAccess().getFirstNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Names__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Names__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getGroup_1()); }
(rule__Names__Group_1__0)*
{ after(grammarAccess.getNamesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Names__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Names__Group_1__0__Impl
	rule__Names__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getKW_COMMATerminalRuleCall_1_0()); }
	RULE_KW_COMMA
{ after(grammarAccess.getNamesAccess().getKW_COMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Names__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Names__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getSubsequentNamesAssignment_1_1()); }
(rule__Names__SubsequentNamesAssignment_1_1)
{ after(grammarAccess.getNamesAccess().getSubsequentNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_0__0__Impl
	rule__Name__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameAction_0_0()); }
(

)
{ after(grammarAccess.getNameAccess().getNameAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameAssignment_0_1()); }
(rule__Name__NameAssignment_0_1)
{ after(grammarAccess.getNameAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_ArrowTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_ArrowTok__Group__0__Impl
	rule__UnqualOp_ArrowTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_ArrowTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokParserRuleCall_0()); }
	ruleArrowTok
{ after(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_ArrowTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_ArrowTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_ArrowTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_ArrowTokAccess().getArrowTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_LatticeTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_LatticeTok__Group__0__Impl
	rule__UnqualOp_LatticeTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_LatticeTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokParserRuleCall_0()); }
	ruleLatticeTok
{ after(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_LatticeTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_LatticeTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_LatticeTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_LatticeTokAccess().getLatticeTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_RelationTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_RelationTok__Group__0__Impl
	rule__UnqualOp_RelationTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_RelationTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokParserRuleCall_0()); }
	ruleRelationTok
{ after(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_RelationTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_RelationTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_RelationTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_RelationTokAccess().getRelationTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_SegTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_SegTok__Group__0__Impl
	rule__UnqualOp_SegTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_SegTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_SegTokAccess().getSegTokParserRuleCall_0()); }
	ruleSegTok
{ after(grammarAccess.getUnqualOp_SegTokAccess().getSegTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_SegTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_SegTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_SegTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_SegTokAccess().getSegTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_SegTokAccess().getSegTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_PlusTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_PlusTok__Group__0__Impl
	rule__UnqualOp_PlusTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_PlusTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokParserRuleCall_0()); }
	rulePlusTok
{ after(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_PlusTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_PlusTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_PlusTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_PlusTokAccess().getPlusTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_QuotientTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_QuotientTok__Group__0__Impl
	rule__UnqualOp_QuotientTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_QuotientTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokParserRuleCall_0()); }
	ruleQuotientTok
{ after(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_QuotientTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_QuotientTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_QuotientTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_QuotientTokAccess().getQuotientTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_TimesTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_TimesTok__Group__0__Impl
	rule__UnqualOp_TimesTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_TimesTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokParserRuleCall_0()); }
	ruleTimesTok
{ after(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_TimesTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_TimesTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_TimesTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_TimesTokAccess().getTimesTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnqualOp_PowerTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_PowerTok__Group__0__Impl
	rule__UnqualOp_PowerTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_PowerTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokParserRuleCall_0()); }
	rulePowerTok
{ after(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnqualOp_PowerTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnqualOp_PowerTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnqualOp_PowerTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokAction_1()); }
(

)
{ after(grammarAccess.getUnqualOp_PowerTokAccess().getPowerTokAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_ArrowTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group__0__Impl
	rule__QualOp_ArrowTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getQualOp_ArrowTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_ArrowTokAccess().getQualOp_ArrowTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_ArrowTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group__1__Impl
	rule__QualOp_ArrowTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getArrowTokParserRuleCall_1()); }
	ruleArrowTok
{ after(grammarAccess.getQualOp_ArrowTokAccess().getArrowTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_ArrowTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getGroup_2()); }
(rule__QualOp_ArrowTok__Group_2__0)?
{ after(grammarAccess.getQualOp_ArrowTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_ArrowTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getGroup_2_0()); }
(rule__QualOp_ArrowTok__Group_2_0__0)
{ after(grammarAccess.getQualOp_ArrowTokAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__QualOp_ArrowTok__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group_2_0__0__Impl
	rule__QualOp_ArrowTok__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_ArrowTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_ArrowTok__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_ArrowTok__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getOqtAssignment_2_0_1()); }
(rule__QualOp_ArrowTok__OqtAssignment_2_0_1)
{ after(grammarAccess.getQualOp_ArrowTokAccess().getOqtAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_LatticeTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group__0__Impl
	rule__QualOp_LatticeTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getQualOp_LatticeTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_LatticeTokAccess().getQualOp_LatticeTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_LatticeTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group__1__Impl
	rule__QualOp_LatticeTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getLatticeTokParserRuleCall_1()); }
	ruleLatticeTok
{ after(grammarAccess.getQualOp_LatticeTokAccess().getLatticeTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_LatticeTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getGroup_2()); }
(rule__QualOp_LatticeTok__Group_2__0)?
{ after(grammarAccess.getQualOp_LatticeTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_LatticeTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getGroup_2_0()); }
(rule__QualOp_LatticeTok__Group_2_0__0)
{ after(grammarAccess.getQualOp_LatticeTokAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__QualOp_LatticeTok__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group_2_0__0__Impl
	rule__QualOp_LatticeTok__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_LatticeTokAccess().getKW_DOLLARTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_LatticeTok__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_LatticeTok__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getOqtAssignment_2_0_1()); }
(rule__QualOp_LatticeTok__OqtAssignment_2_0_1)
{ after(grammarAccess.getQualOp_LatticeTokAccess().getOqtAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_RelationTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_RelationTok__Group__0__Impl
	rule__QualOp_RelationTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getQualOp_RelationTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_RelationTokAccess().getQualOp_RelationTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_RelationTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_RelationTok__Group__1__Impl
	rule__QualOp_RelationTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getRelationTokParserRuleCall_1()); }
	ruleRelationTok
{ after(grammarAccess.getQualOp_RelationTokAccess().getRelationTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_RelationTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_RelationTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getGroup_2()); }
(rule__QualOp_RelationTok__Group_2__0)?
{ after(grammarAccess.getQualOp_RelationTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_RelationTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_RelationTok__Group_2__0__Impl
	rule__QualOp_RelationTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getOpAssignment_2_0()); }
(rule__QualOp_RelationTok__OpAssignment_2_0)
{ after(grammarAccess.getQualOp_RelationTokAccess().getOpAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_RelationTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_RelationTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_RelationTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_RelationTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_SegTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_SegTok__Group__0__Impl
	rule__QualOp_SegTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getQualOp_SegTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_SegTokAccess().getQualOp_SegTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_SegTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_SegTok__Group__1__Impl
	rule__QualOp_SegTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getSegTokParserRuleCall_1()); }
	ruleSegTok
{ after(grammarAccess.getQualOp_SegTokAccess().getSegTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_SegTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_SegTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getGroup_2()); }
(rule__QualOp_SegTok__Group_2__0)?
{ after(grammarAccess.getQualOp_SegTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_SegTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_SegTok__Group_2__0__Impl
	rule__QualOp_SegTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_SegTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_SegTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_SegTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_SegTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_SegTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_PlusTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PlusTok__Group__0__Impl
	rule__QualOp_PlusTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getQualOp_PlusTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_PlusTokAccess().getQualOp_PlusTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PlusTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PlusTok__Group__1__Impl
	rule__QualOp_PlusTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getPlusTokParserRuleCall_1()); }
	rulePlusTok
{ after(grammarAccess.getQualOp_PlusTokAccess().getPlusTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PlusTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PlusTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getGroup_2()); }
(rule__QualOp_PlusTok__Group_2__0)?
{ after(grammarAccess.getQualOp_PlusTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_PlusTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PlusTok__Group_2__0__Impl
	rule__QualOp_PlusTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_PlusTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PlusTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PlusTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_PlusTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_PlusTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_QuotientTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_QuotientTok__Group__0__Impl
	rule__QualOp_QuotientTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getQualOp_QuotientTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_QuotientTokAccess().getQualOp_QuotientTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_QuotientTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_QuotientTok__Group__1__Impl
	rule__QualOp_QuotientTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getQuotientTokParserRuleCall_1()); }
	ruleQuotientTok
{ after(grammarAccess.getQualOp_QuotientTokAccess().getQuotientTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_QuotientTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_QuotientTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getGroup_2()); }
(rule__QualOp_QuotientTok__Group_2__0)?
{ after(grammarAccess.getQualOp_QuotientTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_QuotientTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_QuotientTok__Group_2__0__Impl
	rule__QualOp_QuotientTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_QuotientTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_QuotientTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_QuotientTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_QuotientTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_QuotientTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_TimesTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_TimesTok__Group__0__Impl
	rule__QualOp_TimesTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getQualOp_TimesTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_TimesTokAccess().getQualOp_TimesTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_TimesTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_TimesTok__Group__1__Impl
	rule__QualOp_TimesTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getTimesTokParserRuleCall_1()); }
	ruleTimesTok
{ after(grammarAccess.getQualOp_TimesTokAccess().getTimesTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_TimesTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_TimesTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getGroup_2()); }
(rule__QualOp_TimesTok__Group_2__0)?
{ after(grammarAccess.getQualOp_TimesTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_TimesTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_TimesTok__Group_2__0__Impl
	rule__QualOp_TimesTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_TimesTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_TimesTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_TimesTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_TimesTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_TimesTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualOp_PowerTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PowerTok__Group__0__Impl
	rule__QualOp_PowerTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getQualOp_PowerTokAction_0()); }
(

)
{ after(grammarAccess.getQualOp_PowerTokAccess().getQualOp_PowerTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PowerTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PowerTok__Group__1__Impl
	rule__QualOp_PowerTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getPowerTokParserRuleCall_1()); }
	rulePowerTok
{ after(grammarAccess.getQualOp_PowerTokAccess().getPowerTokParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PowerTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PowerTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getGroup_2()); }
(rule__QualOp_PowerTok__Group_2__0)?
{ after(grammarAccess.getQualOp_PowerTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualOp_PowerTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PowerTok__Group_2__0__Impl
	rule__QualOp_PowerTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
	RULE_KW_DOLLAR
{ after(grammarAccess.getQualOp_PowerTokAccess().getKW_DOLLARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualOp_PowerTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualOp_PowerTok__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getOqtAssignment_2_1()); }
(rule__QualOp_PowerTok__OqtAssignment_2_1)
{ after(grammarAccess.getQualOp_PowerTokAccess().getOqtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_CommaItem_Comma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_CommaItem_Comma__Group__0__Impl
	rule__Enlister1_CommaItem_Comma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_CommaItem_Comma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCommaItemParserRuleCall_0()); }
	ruleCommaItem
{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCommaItemParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_CommaItem_Comma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_CommaItem_Comma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_CommaItem_Comma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getGroup_1()); }
(rule__Enlister1_CommaItem_Comma__Group_1__0)*
{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_CommaItem_Comma__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_CommaItem_Comma__Group_1__0__Impl
	rule__Enlister1_CommaItem_Comma__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_CommaItem_Comma__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
	RULE_KW_COMMA
{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_CommaItem_Comma__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_CommaItem_Comma__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_CommaItem_Comma__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiAssignment_1_1()); }
(rule__Enlister1_CommaItem_Comma__CiAssignment_1_1)
{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_Infixed_Comma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_Infixed_Comma__Group__0__Impl
	rule__Enlister1_Infixed_Comma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_Infixed_Comma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getInfixedParserRuleCall_0()); }
	ruleInfixed
{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getInfixedParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_Infixed_Comma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_Infixed_Comma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_Infixed_Comma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getGroup_1()); }
(rule__Enlister1_Infixed_Comma__Group_1__0)*
{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_Infixed_Comma__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_Infixed_Comma__Group_1__0__Impl
	rule__Enlister1_Infixed_Comma__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_Infixed_Comma__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
	RULE_KW_COMMA
{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_Infixed_Comma__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_Infixed_Comma__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_Infixed_Comma__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getI2Assignment_1_1()); }
(rule__Enlister1_Infixed_Comma__I2Assignment_1_1)
{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getI2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_InfixedExpr_Comma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_InfixedExpr_Comma__Group__0__Impl
	rule__Enlister1_InfixedExpr_Comma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_InfixedExpr_Comma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getInfixedExprParserRuleCall_0()); }
	ruleInfixedExpr
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getInfixedExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_InfixedExpr_Comma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_InfixedExpr_Comma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_InfixedExpr_Comma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getGroup_1()); }
(rule__Enlister1_InfixedExpr_Comma__Group_1__0)*
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1_InfixedExpr_Comma__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_InfixedExpr_Comma__Group_1__0__Impl
	rule__Enlister1_InfixedExpr_Comma__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_InfixedExpr_Comma__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
	RULE_KW_COMMA
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getKW_COMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1_InfixedExpr_Comma__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1_InfixedExpr_Comma__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_InfixedExpr_Comma__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getIeAssignment_1_1()); }
(rule__Enlister1_InfixedExpr_Comma__IeAssignment_1_1)
{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getIeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enlister1a_Labeled_Semicolon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1a_Labeled_Semicolon__Group__0__Impl
	rule__Enlister1a_Labeled_Semicolon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsAssignment_0()); }
(rule__Enlister1a_Labeled_Semicolon__StatemntsAssignment_0)
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1a_Labeled_Semicolon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1a_Labeled_Semicolon__Group__1__Impl
	rule__Enlister1a_Labeled_Semicolon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getGroup_1()); }
(rule__Enlister1a_Labeled_Semicolon__Group_1__0)
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1a_Labeled_Semicolon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1a_Labeled_Semicolon__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_2()); }
(	RULE_KW_SEMICOLON)?
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enlister1a_Labeled_Semicolon__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1a_Labeled_Semicolon__Group_1__0__Impl
	rule__Enlister1a_Labeled_Semicolon__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); }
	RULE_KW_SEMICOLON
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enlister1a_Labeled_Semicolon__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enlister1a_Labeled_Semicolon__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsAssignment_1_1()); }
(rule__Enlister1a_Labeled_Semicolon__StatemntsAssignment_1_1)
{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Curly_Labeled__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Curly_Labeled__Group__0__Impl
	rule__Curly_Labeled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Curly_Labeled__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurly_LabeledAccess().getKW_OCURLYTerminalRuleCall_0()); }
	RULE_KW_OCURLY
{ after(grammarAccess.getCurly_LabeledAccess().getKW_OCURLYTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Curly_Labeled__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Curly_Labeled__Group__1__Impl
	rule__Curly_Labeled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Curly_Labeled__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurly_LabeledAccess().getCurlyContents_LabeledParserRuleCall_1()); }
	ruleCurlyContents_Labeled
{ after(grammarAccess.getCurly_LabeledAccess().getCurlyContents_LabeledParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Curly_Labeled__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Curly_Labeled__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Curly_Labeled__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurly_LabeledAccess().getKW_CCURLYTerminalRuleCall_2()); }
	RULE_KW_CCURLY
{ after(grammarAccess.getCurly_LabeledAccess().getKW_CCURLYTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CurlyContentsList_Labeled__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentsList_Labeled__Group__0__Impl
	rule__CurlyContentsList_Labeled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsAssignment_0()); }
(rule__CurlyContentsList_Labeled__StatemtsAssignment_0)
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurlyContentsList_Labeled__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentsList_Labeled__Group__1__Impl
	rule__CurlyContentsList_Labeled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getGroup_1()); }
(rule__CurlyContentsList_Labeled__Group_1__0)*
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurlyContentsList_Labeled__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentsList_Labeled__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_2()); }
(	RULE_KW_SEMICOLON)?
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CurlyContentsList_Labeled__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentsList_Labeled__Group_1__0__Impl
	rule__CurlyContentsList_Labeled__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); }
	RULE_KW_SEMICOLON
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getKW_SEMICOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurlyContentsList_Labeled__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentsList_Labeled__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsAssignment_1_1()); }
(rule__CurlyContentsList_Labeled__StatemtsAssignment_1_1)
{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CurlyContentB_Labeled__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentB_Labeled__Group__0__Impl
	rule__CurlyContentB_Labeled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getPredAssignment_0()); }
(rule__CurlyContentB_Labeled__PredAssignment_0)
{ after(grammarAccess.getCurlyContentB_LabeledAccess().getPredAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurlyContentB_Labeled__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentB_Labeled__Group__1__Impl
	rule__CurlyContentB_Labeled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getLAssignment_1()); }
(rule__CurlyContentB_Labeled__LAssignment_1)
{ after(grammarAccess.getCurlyContentB_LabeledAccess().getLAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurlyContentB_Labeled__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurlyContentB_Labeled__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getPdAssignment_2()); }
(rule__CurlyContentB_Labeled__PdAssignment_2)
{ after(grammarAccess.getCurlyContentB_LabeledAccess().getPdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__InsertAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInsertTK_STRINGTerminalRuleCall_0_1_0()); }
	RULE_TK_STRING{ after(grammarAccess.getModelAccess().getInsertTK_STRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CcAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCcCurlyContents_LabeledParserRuleCall_1_0()); }
	ruleCurlyContents_Labeled{ after(grammarAccess.getModelAccess().getCcCurlyContents_LabeledParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled__LabAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledAccess().getLabLabeledParserRuleCall_2_2_0()); }
	ruleLabeled{ after(grammarAccess.getLabeledAccess().getLabLabeledParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__MbAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getMbMacroBodyParserRuleCall_0_2_0()); }
	ruleMacroBody{ after(grammarAccess.getDeclarationAccess().getMbMacroBodyParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_1_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_2_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_3_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_4_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_5_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_6_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_7_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_8_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__FpAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_8_3_0()); }
	ruleFromPart{ after(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SiAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_9_2_0()); }
	ruleSig{ after(grammarAccess.getDeclarationAccess().getSiSigParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__FpAssignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_9_3_0()); }
	ruleFromPart{ after(grammarAccess.getDeclarationAccess().getFpFromPartParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__EdAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEdExportDeclParserRuleCall_10_1_0()); }
	ruleExportDecl{ after(grammarAccess.getDeclarationAccess().getEdExportDeclParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__SAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_0_2_0()); }
	ruleSig{ after(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__SAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_1_0_1_0()); }
	ruleSig{ after(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__TpAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getTpToPartParserRuleCall_1_0_2_0()); }
	ruleToPart{ after(grammarAccess.getExportDeclAccess().getTpToPartParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__SAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_2_0_1_0()); }
	ruleSig{ after(grammarAccess.getExportDeclAccess().getSSigParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportDecl__FpAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportDeclAccess().getFpFromPartParserRuleCall_2_0_2_0()); }
	ruleFromPart{ after(grammarAccess.getExportDeclAccess().getFpFromPartParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroBody__FpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroBodyAccess().getFpFromPartParserRuleCall_2_2_0()); }
	ruleFromPart{ after(grammarAccess.getMacroBodyAccess().getFpFromPartParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommaItem__CiAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaItemAccess().getCiCommaItemParserRuleCall_1_0_1_0()); }
	ruleCommaItem{ after(grammarAccess.getCommaItemAccess().getCiCommaItemParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixedExprsDecl__DpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedExprsDeclAccess().getDpDeclPartParserRuleCall_1_0()); }
	ruleDeclPart{ after(grammarAccess.getInfixedExprsDeclAccess().getDpDeclPartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_AnyStatement__Bas9Assignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBas9AnyStatementParserRuleCall_0()); }
	ruleAnyStatement{ after(grammarAccess.getBindingL_Infixed_AnyStatementAccess().getBas9AnyStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_BalStatement__BibAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_1_0_2_0()); }
	ruleBindingL_Infixed_BalStatement{ after(grammarAccess.getBindingL_Infixed_BalStatementAccess().getBibBindingL_Infixed_BalStatementParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingL_Infixed_Collection__BicAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_1_0_2_0()); }
	ruleBindingL_Infixed_Collection{ after(grammarAccess.getBindingL_Infixed_CollectionAccess().getBicBindingL_Infixed_CollectionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingR_InfixedExprsDecl_AnyStatement__BasAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getBindingR_InfixedExprsDecl_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyStatement__BasAssignment_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_0_0_3_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getAnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__CAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_0_1_0_0()); }
	ruleCollection{ after(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStImpliesKeyword_0_1_1_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStImpliesKeyword_0_1_1_0_0()); }

	'implies' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStImpliesKeyword_0_1_1_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStImpliesKeyword_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Bas2Assignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas2Binding_AnyStatementParserRuleCall_0_1_1_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBas2Binding_AnyStatementParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStIfKeyword_1_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStIfKeyword_1_0_0()); }

	'if' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStIfKeyword_1_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStIfKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__CiAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCiCommaItemParserRuleCall_1_1_0()); }
	ruleCommaItem{ after(grammarAccess.getFlow_AnyStatementAccess().getCiCommaItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BbsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBbsBinding_BalStatementParserRuleCall_1_3_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBbsBinding_BalStatementParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_5_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Bas3Assignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas3Binding_AnyStatementParserRuleCall_2_0_2_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBas3Binding_AnyStatementParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStRepeatKeyword_3_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStRepeatKeyword_3_0_0()); }

	'repeat' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStRepeatKeyword_3_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStRepeatKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_3_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStTryKeyword_4_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStTryKeyword_4_0_0()); }

	'try' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStTryKeyword_4_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStTryKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_4_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Be2Assignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBe2ButExprParserRuleCall_4_3_0()); }
	ruleButExpr{ after(grammarAccess.getFlow_AnyStatementAccess().getBe2ButExprParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__ApaAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getApaAlwaysPart_AnyStatementParserRuleCall_4_4_0()); }
	ruleAlwaysPart_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getApaAlwaysPart_AnyStatementParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStSelectKeyword_5_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStSelectKeyword_5_0_0()); }

	'select' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStSelectKeyword_5_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStSelectKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_5_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__CaAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCaCasesParserRuleCall_5_3_0()); }
	ruleCases{ after(grammarAccess.getFlow_AnyStatementAccess().getCaCasesParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStDoKeyword_6_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStDoKeyword_6_0_0()); }

	'do' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStDoKeyword_6_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStDoKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_6_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStDelayKeyword_7_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStDelayKeyword_7_0_0()); }

	'delay' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStDelayKeyword_7_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStDelayKeyword_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_7_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStReferenceKeyword_8_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStReferenceKeyword_8_0_0()); }

	'reference' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStReferenceKeyword_8_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStReferenceKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_8_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStGenerateKeyword_9_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStGenerateKeyword_9_0_0()); }

	'generate' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStGenerateKeyword_9_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStGenerateKeyword_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__GbAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getGbGenBoundParserRuleCall_9_1_0()); }
	ruleGenBound{ after(grammarAccess.getFlow_AnyStatementAccess().getGbGenBoundParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__Bas4Assignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBas4Binding_AnyStatementParserRuleCall_9_2_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBas4Binding_AnyStatementParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssertKeyword_10_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStAssertKeyword_10_0_0()); }

	'assert' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssertKeyword_10_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStAssertKeyword_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_10_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStIterateKeyword_11_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStIterateKeyword_11_0_0()); }

	'iterate' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStIterateKeyword_11_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStIterateKeyword_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__NAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_11_1_0()); }
	ruleName{ after(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStBreakKeyword_12_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStBreakKeyword_12_0_0()); }

	'break' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStBreakKeyword_12_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStBreakKeyword_12_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__NAssignment_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_12_1_0()); }
	ruleName{ after(grammarAccess.getFlow_AnyStatementAccess().getNNameParserRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_13_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStReturnKeyword_13_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStReturnKeyword_13_0_0()); }

	'return' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStReturnKeyword_13_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStReturnKeyword_13_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__CAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_13_1_0()); }
	ruleCollection{ after(grammarAccess.getFlow_AnyStatementAccess().getCCollectionParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_14_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStYieldKeyword_14_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStYieldKeyword_14_0_0()); }

	'yield' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStYieldKeyword_14_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStYieldKeyword_14_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_14_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_15_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStExceptKeyword_15_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStExceptKeyword_15_0_0()); }

	'except' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStExceptKeyword_15_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStExceptKeyword_15_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_15_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_15_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_15_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_16_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStThrowKeyword_16_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStThrowKeyword_16_0_0()); }

	'throw' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStThrowKeyword_16_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStThrowKeyword_16_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__BasAssignment_16_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_16_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_AnyStatementAccess().getBasBinding_AnyStatementParserRuleCall_16_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_17_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStGotoKeyword_17_0_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStGotoKeyword_17_0_0()); }

	'goto' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStGotoKeyword_17_0_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStGotoKeyword_17_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__I2Assignment_17_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getI2IdParserRuleCall_17_1_0()); }
	ruleId{ after(grammarAccess.getFlow_AnyStatementAccess().getI2IdParserRuleCall_17_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_AnyStatement__StAssignment_18
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStNeverKeyword_18_0()); }
(
{ before(grammarAccess.getFlow_AnyStatementAccess().getStNeverKeyword_18_0()); }

	'never' 

{ after(grammarAccess.getFlow_AnyStatementAccess().getStNeverKeyword_18_0()); }
)

{ after(grammarAccess.getFlow_AnyStatementAccess().getStNeverKeyword_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ImpliesKeyword_0_1_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ImpliesKeyword_0_1_0_0()); }

	'implies' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ImpliesKeyword_0_1_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ImpliesKeyword_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs3Assignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_0_1_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2IfKeyword_1_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2IfKeyword_1_0_0()); }

	'if' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2IfKeyword_1_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2IfKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Ci2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getCi2CommaItemParserRuleCall_1_1_0()); }
	ruleCommaItem{ after(grammarAccess.getFlow_BalStatementAccess().getCi2CommaItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs4Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_3_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs4Assignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_5_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs4Binding_BalStatementParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_2_0_1_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_2_0_1_0()); }

	'repeat' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_2_0_1_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs3Assignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_2_0_2_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs3Binding_BalStatementParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_3_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_3_0_0()); }

	'repeat' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_3_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2RepeatKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_3_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2TryKeyword_4_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2TryKeyword_4_0_0()); }

	'try' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2TryKeyword_4_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2TryKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs2Assignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_4_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__BeAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBeButExprParserRuleCall_4_3_0()); }
	ruleButExpr{ after(grammarAccess.getFlow_BalStatementAccess().getBeButExprParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__ApbAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getApbAlwaysPart_BalStatementParserRuleCall_4_4_0()); }
	ruleAlwaysPart_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getApbAlwaysPart_BalStatementParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2SelectKeyword_5_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2SelectKeyword_5_0_0()); }

	'select' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2SelectKeyword_5_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2SelectKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs2Assignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_5_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs2Binding_AnyStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Ca2Assignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getCa2CasesParserRuleCall_5_3_0()); }
	ruleCases{ after(grammarAccess.getFlow_BalStatementAccess().getCa2CasesParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2DoKeyword_6_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2DoKeyword_6_0_0()); }

	'do' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2DoKeyword_6_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2DoKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_6_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2DelayKeyword_7_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2DelayKeyword_7_0_0()); }

	'delay' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2DelayKeyword_7_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2DelayKeyword_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_7_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ReferenceKeyword_8_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ReferenceKeyword_8_0_0()); }

	'reference' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ReferenceKeyword_8_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ReferenceKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_8_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2GenerateKeyword_9_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2GenerateKeyword_9_0_0()); }

	'generate' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2GenerateKeyword_9_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2GenerateKeyword_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Gb2Assignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getGb2GenBoundParserRuleCall_9_1_0()); }
	ruleGenBound{ after(grammarAccess.getFlow_BalStatementAccess().getGb2GenBoundParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_9_2_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2AssertKeyword_10_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2AssertKeyword_10_0_0()); }

	'assert' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2AssertKeyword_10_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2AssertKeyword_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_10_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2IterateKeyword_11_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2IterateKeyword_11_0_0()); }

	'iterate' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2IterateKeyword_11_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2IterateKeyword_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__N2Assignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_11_1_0()); }
	ruleName{ after(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2BreakKeyword_12_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2BreakKeyword_12_0_0()); }

	'break' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2BreakKeyword_12_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2BreakKeyword_12_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__N2Assignment_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_12_1_0()); }
	ruleName{ after(grammarAccess.getFlow_BalStatementAccess().getN2NameParserRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_13_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ReturnKeyword_13_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ReturnKeyword_13_0_0()); }

	'return' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ReturnKeyword_13_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ReturnKeyword_13_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__C2Assignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getC2CollectionParserRuleCall_13_1_0()); }
	ruleCollection{ after(grammarAccess.getFlow_BalStatementAccess().getC2CollectionParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_14_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2YieldKeyword_14_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2YieldKeyword_14_0_0()); }

	'yield' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2YieldKeyword_14_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2YieldKeyword_14_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_14_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_15_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ExceptKeyword_15_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ExceptKeyword_15_0_0()); }

	'except' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ExceptKeyword_15_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ExceptKeyword_15_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_15_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_15_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_15_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_16_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ThrowKeyword_16_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2ThrowKeyword_16_0_0()); }

	'throw' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ThrowKeyword_16_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2ThrowKeyword_16_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__Bbs5Assignment_16_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_16_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getFlow_BalStatementAccess().getBbs5Binding_BalStatementParserRuleCall_16_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_17_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2GotoKeyword_17_0_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2GotoKeyword_17_0_0()); }

	'goto' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2GotoKeyword_17_0_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2GotoKeyword_17_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__I3Assignment_17_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getI3IdParserRuleCall_17_1_0()); }
	ruleId{ after(grammarAccess.getFlow_BalStatementAccess().getI3IdParserRuleCall_17_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_BalStatement__St2Assignment_18
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2NeverKeyword_18_0()); }
(
{ before(grammarAccess.getFlow_BalStatementAccess().getSt2NeverKeyword_18_0()); }

	'never' 

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2NeverKeyword_18_0()); }
)

{ after(grammarAccess.getFlow_BalStatementAccess().getSt2NeverKeyword_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenBound__CiAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenBoundAccess().getCiCommaItemParserRuleCall_1_1_0()); }
	ruleCommaItem{ after(grammarAccess.getGenBoundAccess().getCiCommaItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__DbAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getDbDeclBindingParserRuleCall_1_0_0()); }
	ruleDeclBinding{ after(grammarAccess.getButExprAccess().getDbDeclBindingParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ButExpr__CaAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButExprAccess().getCaCasesParserRuleCall_1_2_0()); }
	ruleCases{ after(grammarAccess.getButExprAccess().getCaCasesParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Bas7Assignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_0_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_AnyStatement__Bas7Assignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_1_1_0()); }
	ruleBinding_AnyStatement{ after(grammarAccess.getAlwaysPart_AnyStatementAccess().getBas7Binding_AnyStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Bas7Assignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_0_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysPart_BalStatement__Bas7Assignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_1_1_0()); }
	ruleBinding_BalStatement{ after(grammarAccess.getAlwaysPart_BalStatementAccess().getBas7Binding_BalStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collection__I3Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionAccess().getI3IteratorsParserRuleCall_1_0()); }
	ruleIterators{ after(grammarAccess.getCollectionAccess().getI3IteratorsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iterators1__ItrAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterators1Access().getItrIteratorParserRuleCall_1_0()); }
	ruleIterator{ after(grammarAccess.getIterators1Access().getItrIteratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__IAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_0_3_0()); }
	ruleInfixed{ after(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__SpAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getSpSuchthatPartParserRuleCall_0_4_0()); }
	ruleSuchthatPart{ after(grammarAccess.getIteratorAccess().getSpSuchthatPartParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__IAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_1_1_0()); }
	ruleInfixed{ after(grammarAccess.getIteratorAccess().getIInfixedParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__IfxAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getIfxInfixedExprParserRuleCall_0_0_0()); }
	ruleInfixedExpr{ after(grammarAccess.getInfixedAccess().getIfxInfixedExprParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__DpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getDpDeclPartParserRuleCall_0_1_0()); }
	ruleDeclPart{ after(grammarAccess.getInfixedAccess().getDpDeclPartParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Infixed__BAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixedAccess().getBBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getInfixedAccess().getBBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E3__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getOpAlternatives_1_1_0()); }
(rule__E3__OpAlternatives_1_1_0)
{ after(grammarAccess.getE3Access().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E3__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE3Access().getRightE4ParserRuleCall_1_2_0()); }
	ruleE4{ after(grammarAccess.getE3Access().getRightE4ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E4__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getOpAlternatives_1_1_0()); }
(rule__E4__OpAlternatives_1_1_0)
{ after(grammarAccess.getE4Access().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E4__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE4Access().getRightE5ParserRuleCall_1_2_0()); }
	ruleE5{ after(grammarAccess.getE4Access().getRightE5ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E5__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getOpSegTokParserRuleCall_1_1_0()); }
	ruleSegTok{ after(grammarAccess.getE5Access().getOpSegTokParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E5__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE5Access().getRightE6ParserRuleCall_1_2_0()); }
	ruleE6{ after(grammarAccess.getE5Access().getRightE6ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E6__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getOpPlusTokParserRuleCall_1_1_0()); }
	rulePlusTok{ after(grammarAccess.getE6Access().getOpPlusTokParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E6__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE6Access().getRightE7ParserRuleCall_1_2_0()); }
	ruleE7{ after(grammarAccess.getE6Access().getRightE7ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E7__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getOpQuotientTokParserRuleCall_1_1_0()); }
	ruleQuotientTok{ after(grammarAccess.getE7Access().getOpQuotientTokParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E7__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE7Access().getRightE8ParserRuleCall_1_2_0()); }
	ruleE8{ after(grammarAccess.getE7Access().getRightE8ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E8__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getOpTimesTokParserRuleCall_1_1_0()); }
	ruleTimesTok{ after(grammarAccess.getE8Access().getOpTimesTokParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E8__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE8Access().getRightE9ParserRuleCall_1_2_0()); }
	ruleE9{ after(grammarAccess.getE8Access().getRightE9ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E9__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getOpPowerTokParserRuleCall_1_1_0()); }
	rulePowerTok{ after(grammarAccess.getE9Access().getOpPowerTokParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E9__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE9Access().getRightE11_E12ParserRuleCall_1_2_0()); }
	ruleE11_E12{ after(grammarAccess.getE9Access().getRightE11_E12ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); }
	RULE_KW_2COLON{ after(grammarAccess.getE11_E12Access().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getOpKW_ATTerminalRuleCall_1_1_1_0()); }
	RULE_KW_AT{ after(grammarAccess.getE11_E12Access().getOpKW_ATTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0()); }

	'pretend' 

{ after(grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getE11_E12Access().getOpPretendKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_E12__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_E12Access().getRightE12ParserRuleCall_1_2_0()); }
	ruleE12{ after(grammarAccess.getE11_E12Access().getRightE12ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); }
	RULE_KW_2COLON{ after(grammarAccess.getE11_OpAccess().getOpKW_2COLONTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getOpKW_ATTerminalRuleCall_1_1_1_0()); }
	RULE_KW_AT{ after(grammarAccess.getE11_OpAccess().getOpKW_ATTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getOpPretendKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getE11_OpAccess().getOpPretendKeyword_1_1_2_0()); }

	'pretend' 

{ after(grammarAccess.getE11_OpAccess().getOpPretendKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getE11_OpAccess().getOpPretendKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E11_Op__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE11_OpAccess().getRightE12ParserRuleCall_1_2_0()); }
	ruleE12{ after(grammarAccess.getE11_OpAccess().getRightE12ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E12__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getOpArrowOpParserRuleCall_1_1_0()); }
	ruleArrowOp{ after(grammarAccess.getE12Access().getOpArrowOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E12__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE12Access().getRightE13ParserRuleCall_1_2_0()); }
	ruleE13{ after(grammarAccess.getE12Access().getRightE13ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E13__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getOpKW_DOLLARTerminalRuleCall_1_1_0()); }
	RULE_KW_DOLLAR{ after(grammarAccess.getE13Access().getOpKW_DOLLARTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E13__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE13Access().getRightQualTailParserRuleCall_1_2_0()); }
	ruleQualTail{ after(grammarAccess.getE13Access().getRightQualTailParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualTail__QtAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualTailAccess().getQtQualTailParserRuleCall_1_0_1_0()); }
	ruleQualTail{ after(grammarAccess.getQualTailAccess().getQtQualTailParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpQualTail__NamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpQualTailAccess().getNamMoleculeParserRuleCall_0_0()); }
	ruleMolecule{ after(grammarAccess.getOpQualTailAccess().getNamMoleculeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15leftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_0_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15leftAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_1_0_0_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpWithKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getE14Access().getOpWithKeyword_1_0_1_0()); }

	'with' 

{ after(grammarAccess.getE14Access().getOpWithKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getE14Access().getOpWithKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__DmAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_1_0_2_0()); }
	ruleDeclMolecule{ after(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15leftAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_2_0_0_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__OpAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpAddKeyword_2_0_1_0()); }
(
{ before(grammarAccess.getE14Access().getOpAddKeyword_2_0_1_0()); }

	'add' 

{ after(grammarAccess.getE14Access().getOpAddKeyword_2_0_1_0()); }
)

{ after(grammarAccess.getE14Access().getOpAddKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__DmAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_2_0_2_0()); }
	ruleDeclMolecule{ after(grammarAccess.getE14Access().getDmDeclMoleculeParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15leftAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_3_0_0_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__OpAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpExceptKeyword_3_0_1_0()); }
(
{ before(grammarAccess.getE14Access().getOpExceptKeyword_3_0_1_0()); }

	'except' 

{ after(grammarAccess.getE14Access().getOpExceptKeyword_3_0_1_0()); }
)

{ after(grammarAccess.getE14Access().getOpExceptKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15rightAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_3_0_2_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15leftAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_4_0_0_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15leftE15ParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__OpAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getOpThrowKeyword_4_0_1_0()); }
(
{ before(grammarAccess.getE14Access().getOpThrowKeyword_4_0_1_0()); }

	'throw' 

{ after(grammarAccess.getE14Access().getOpThrowKeyword_4_0_1_0()); }
)

{ after(grammarAccess.getE14Access().getOpThrowKeyword_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__E14__E15rightAssignment_4_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_4_0_2_0()); }
	ruleE15{ after(grammarAccess.getE14Access().getE15rightE15ParserRuleCall_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopArrowOpParserRuleCall_0_1_0()); }
	ruleArrowOp{ after(grammarAccess.getOpAccess().getAopArrowOpParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopLatticeOpParserRuleCall_1_1_0()); }
	ruleLatticeOp{ after(grammarAccess.getOpAccess().getAopLatticeOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopRelationOpParserRuleCall_2_1_0()); }
	ruleRelationOp{ after(grammarAccess.getOpAccess().getAopRelationOpParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopSegOpParserRuleCall_3_1_0()); }
	ruleSegOp{ after(grammarAccess.getOpAccess().getAopSegOpParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopPlusOpParserRuleCall_4_1_0()); }
	rulePlusOp{ after(grammarAccess.getOpAccess().getAopPlusOpParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopQuotientOpParserRuleCall_5_1_0()); }
	ruleQuotientOp{ after(grammarAccess.getOpAccess().getAopQuotientOpParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopTimesOpParserRuleCall_6_1_0()); }
	ruleTimesOp{ after(grammarAccess.getOpAccess().getAopTimesOpParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Op__AopAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAccess().getAopPowerOpParserRuleCall_7_1_0()); }
	rulePowerOp{ after(grammarAccess.getOpAccess().getAopPowerOpParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__RightAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_0_1_0()); }
	ruleJright_Atom{ after(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Molecule__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_1_1_0()); }
	ruleJright_Atom{ after(grammarAccess.getJright_MoleculeAccess().getRightJright_AtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Right2Assignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_0_1_0()); }
	ruleJright_Atom{ after(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jright_Atom__Right2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_1_1_0()); }
	ruleJright_Atom{ after(grammarAccess.getJright_AtomAccess().getRight2Jright_AtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__BeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBeBlockEnclosureParserRuleCall_0_1_0()); }
	ruleBlockEnclosure{ after(grammarAccess.getJleft_MoleculeAccess().getBeBlockEnclosureParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__MAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getMMoleculeParserRuleCall_1_0_0_0()); }
	ruleMolecule{ after(grammarAccess.getJleft_MoleculeAccess().getMMoleculeParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__BeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBeBlockEnclosureParserRuleCall_1_0_1_0()); }
	ruleBlockEnclosure{ after(grammarAccess.getJleft_MoleculeAccess().getBeBlockEnclosureParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__MAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getMMoleculeParserRuleCall_2_0_0()); }
	ruleMolecule{ after(grammarAccess.getJleft_MoleculeAccess().getMMoleculeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Molecule__BmAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_MoleculeAccess().getBmBlockMoleculeParserRuleCall_2_1_1_0()); }
	ruleBlockMolecule{ after(grammarAccess.getJleft_MoleculeAccess().getBmBlockMoleculeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__AAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getAAtomParserRuleCall_0_0_0_0()); }
	ruleAtom{ after(grammarAccess.getJleft_AtomAccess().getAAtomParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__BeAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBeBlockEnclosureParserRuleCall_0_0_1_0()); }
	ruleBlockEnclosure{ after(grammarAccess.getJleft_AtomAccess().getBeBlockEnclosureParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__NAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getNNotKeyword_0_1_0_0()); }
(
{ before(grammarAccess.getJleft_AtomAccess().getNNotKeyword_0_1_0_0()); }

	'not' 

{ after(grammarAccess.getJleft_AtomAccess().getNNotKeyword_0_1_0_0()); }
)

{ after(grammarAccess.getJleft_AtomAccess().getNNotKeyword_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__BeAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBeBlockEnclosureParserRuleCall_0_1_1_0()); }
	ruleBlockEnclosure{ after(grammarAccess.getJleft_AtomAccess().getBeBlockEnclosureParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jleft_Atom__Bm4Assignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJleft_AtomAccess().getBm4BlockMoleculeParserRuleCall_1_1_1_0()); }
	ruleBlockMolecule{ after(grammarAccess.getJleft_AtomAccess().getBm4BlockMoleculeParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclMolecule__AAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclMoleculeAccess().getAApplicationParserRuleCall_0_1_0()); }
	ruleApplication{ after(grammarAccess.getDeclMoleculeAccess().getAApplicationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclMolecule__BAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclMoleculeAccess().getBBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getDeclMoleculeAccess().getBBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parened__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenedAccess().getOpKW_OPARENTerminalRuleCall_0_0()); }
	RULE_KW_OPAREN{ after(grammarAccess.getParenedAccess().getOpKW_OPARENTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parened__EAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenedAccess().getEExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParenedAccess().getEExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bracketed__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketedAccess().getOpKW_OBRACKTerminalRuleCall_0_0()); }
	RULE_KW_OBRACK{ after(grammarAccess.getBracketedAccess().getOpKW_OBRACKTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bracketed__EAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketedAccess().getEExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getBracketedAccess().getEExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getOpKW_QUOTETerminalRuleCall_1_0()); }
	RULE_KW_QUOTE{ after(grammarAccess.getQuotedIdsAccess().getOpKW_QUOTETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedIds__NAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedIdsAccess().getNNamesParserRuleCall_2_0()); }
	ruleNames{ after(grammarAccess.getQuotedIdsAccess().getNNamesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Names__FirstNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getFirstNameTK_IDTerminalRuleCall_0_0()); }
	RULE_TK_ID{ after(grammarAccess.getNamesAccess().getFirstNameTK_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Names__SubsequentNamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamesAccess().getSubsequentNamesTK_IDTerminalRuleCall_1_1_0()); }
	RULE_TK_ID{ after(grammarAccess.getNamesAccess().getSubsequentNamesTK_IDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__IdenAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getIdenIdParserRuleCall_0_0()); }
	ruleId{ after(grammarAccess.getAtomAccess().getIdenIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__LitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLitLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getAtomAccess().getLitLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameIdParserRuleCall_0_1_0()); }
	ruleId{ after(grammarAccess.getNameAccess().getNameIdParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNoNakedOpParserRuleCall_1_0()); }
	ruleNakedOp{ after(grammarAccess.getNameAccess().getNoNakedOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAccess().getNameAlternatives_0()); }
(rule__Id__NameAlternatives_0)
{ after(grammarAccess.getIdAccess().getNameAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_ArrowTok__OqtAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_ArrowTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_ArrowTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_LatticeTok__OqtAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_LatticeTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_LatticeTokAccess().getOqtOpQualTailParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__OpAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getOpKW_DOLLARTerminalRuleCall_2_0_0()); }
	RULE_KW_DOLLAR{ after(grammarAccess.getQualOp_RelationTokAccess().getOpKW_DOLLARTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_RelationTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_RelationTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_RelationTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_SegTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_SegTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_SegTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PlusTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PlusTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_PlusTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_QuotientTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_QuotientTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_QuotientTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_TimesTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_TimesTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_TimesTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualOp_PowerTok__OqtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualOp_PowerTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
	ruleOpQualTail{ after(grammarAccess.getQualOp_PowerTokAccess().getOqtOpQualTailParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_CommaItem_Comma__CiAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiCommaItemParserRuleCall_1_1_0()); }
	ruleCommaItem{ after(grammarAccess.getEnlister1_CommaItem_CommaAccess().getCiCommaItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_Infixed_Comma__I2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_Infixed_CommaAccess().getI2InfixedParserRuleCall_1_1_0()); }
	ruleInfixed{ after(grammarAccess.getEnlister1_Infixed_CommaAccess().getI2InfixedParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1_InfixedExpr_Comma__IeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getIeInfixedExprParserRuleCall_1_1_0()); }
	ruleInfixedExpr{ after(grammarAccess.getEnlister1_InfixedExpr_CommaAccess().getIeInfixedExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__StatemntsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_0_0()); }
	ruleLabeled{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enlister1a_Labeled_Semicolon__StatemntsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_1_1_0()); }
	ruleLabeled{ after(grammarAccess.getEnlister1a_Labeled_SemicolonAccess().getStatemntsLabeledParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__StatemtsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_0_0()); }
	ruleCurlyContentB_Labeled{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentsList_Labeled__StatemtsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_1_1_0()); }
	ruleCurlyContentB_Labeled{ after(grammarAccess.getCurlyContentsList_LabeledAccess().getStatemtsCurlyContentB_LabeledParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__PredAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getPredPreDocumentParserRuleCall_0_0()); }
	rulePreDocument{ after(grammarAccess.getCurlyContentB_LabeledAccess().getPredPreDocumentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__LAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getLLabeledParserRuleCall_1_0()); }
	ruleLabeled{ after(grammarAccess.getCurlyContentB_LabeledAccess().getLLabeledParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurlyContentB_Labeled__PdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurlyContentB_LabeledAccess().getPdPostDocumentParserRuleCall_2_0()); }
	rulePostDocument{ after(grammarAccess.getCurlyContentB_LabeledAccess().getPdPostDocumentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TK_ID : ('a'..'z'|'A'..'Z'|'_' .) ('a'..'z'|'A'..'Z'|'_' .|'0'..'9')* '!'? '?'?;

RULE_WS : (' '|'\t')+;

RULE_KW_NEWLINE : ('\r'|'\n');

RULE_TK_PREDOC : '--' ~(('\n'|'\r'))*;

RULE_TK_POSTDOC : '++' ~(('\n'|'\r'))*;

RULE_TK_STRING : '"' ~('"')* '"';

RULE_TK_INT : ('0'..'9')+;

RULE_KW_QUOTE : '\'';

RULE_KW_OPAREN : '(';

RULE_KW_CPAREN : ')';

RULE_KW_OCURLY : '{';

RULE_KW_CCURLY : '}';

RULE_KW_OBRACK : '[';

RULE_KW_CBRACK : ']';

RULE_KW_2LT : '<<';

RULE_KW_2GT : '>>';

RULE_KW_MARROW : '==>';

RULE_KW_BAR : '|';

RULE_KW_DOT : '.';

RULE_KW_2COLON : '::';

RULE_KW_COLONSTAR : ':*';

RULE_KW_COLON : ':';

RULE_KW_AT : '@';

RULE_KW_COMMA : ',';

RULE_KW_SEMICOLON : ';';

RULE_KW_2STAR : '**';

RULE_KW_STAR : '*';

RULE_KW_PLUS : '+';

RULE_KW_MINUS : '-';

RULE_KW_PLUSMINUS : '+-';

RULE_KW_LT : '<';

RULE_KW_GT : '>';

RULE_KW_LE : '<=';

RULE_KW_GE : '>=';

RULE_KW_EQ : '=';

RULE_KW_TILDEE : '~=';

RULE_KW_HATE : '^=';

RULE_KW_TILDE : '~';

RULE_KW_HAT : '^';

RULE_KW_2DOT : '..';

RULE_KW_SHARP : '#';

RULE_KW_AMPERSAND : '&';

RULE_KW_DOLLAR : '$';

RULE_KW_SLASH : '/';

RULE_KW_BACKSLASH : '\\';

RULE_KW_WEDGE : '/\\';

RULE_KW_VEE : '\\/';

RULE_KW_IMPLIES : '=>';

RULE_KW_ASSIGN : ':=';

RULE_KW_2EQ : '==';

RULE_KW_RARROW : '->';

RULE_KW_LARROW : '<-';

RULE_KW_MAPSTO : '+->';

RULE_KW_MAPSTOSTAR : '+->*';

RULE_KW_MAPSTAR : '->*';

RULE_ANY_OTHER : .;


