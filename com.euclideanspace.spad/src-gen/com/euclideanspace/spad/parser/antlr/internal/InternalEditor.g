/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.spad.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.spad.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.spad.services.EditorGrammarAccess;

}

@parser::members {

 	private EditorGrammarAccess grammarAccess;
 	
    public InternalEditorParser(TokenStream input, EditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=')abbrev' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getAbbrevKeyword_0());
    }
this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getModelAccess().getWSTerminalRuleCall_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getCCategoryDefParserRuleCall_2_0_0()); 
	    }
		lv_c_2_0=ruleCategoryDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"c",
        		lv_c_2_0, 
        		"CategoryDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPPackageDefParserRuleCall_2_1_0()); 
	    }
		lv_p_3_0=rulePackageDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"p",
        		lv_p_3_0, 
        		"PackageDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDDomainDefParserRuleCall_2_2_0()); 
	    }
		lv_d_4_0=ruleDomainDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"d",
        		lv_d_4_0, 
        		"DomainDef");
	        afterParserOrEnumRuleCall();
	    }

)
))this_AT_5=RULE_AT
    { 
    newLeafNode(this_AT_5, grammarAccess.getModelAccess().getATTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleCategoryDef
entryRuleCategoryDef returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCategoryDefRule()); }
	 iv_ruleCategoryDef=ruleCategoryDef 
	 { $current=$iv_ruleCategoryDef.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CategoryDef
ruleCategoryDef returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'category' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCategoryDefAccess().getNameCategoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryDefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "category");
	    }

)
)(
(
		lv_shortname_1_0=RULE_ID
		{
			newLeafNode(lv_shortname_1_0, grammarAccess.getCategoryDefAccess().getShortnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortname",
        		lv_shortname_1_0, 
        		"ID");
	    }

)
)(
(
		lv_longname_2_0=RULE_ID
		{
			newLeafNode(lv_longname_2_0, grammarAccess.getCategoryDefAccess().getLongnameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname",
        		lv_longname_2_0, 
        		"ID");
	    }

)
)(
(
		lv_longname2_3_0=RULE_ID
		{
			newLeafNode(lv_longname2_3_0, grammarAccess.getCategoryDefAccess().getLongname2IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname2",
        		lv_longname2_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryDefAccess().getCpTypeParameterListParserRuleCall_4_0()); 
	    }
		lv_cp_4_0=ruleTypeParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryDefRule());
	        }
       		set(
       			$current, 
       			"cp",
        		lv_cp_4_0, 
        		"TypeParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getCategoryDefAccess().getCOLONTerminalRuleCall_5()); 
    }
	otherlv_6='Category' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCategoryDefAccess().getCategoryKeyword_6());
    }
this_DEF_7=RULE_DEF
    { 
    newLeafNode(this_DEF_7, grammarAccess.getCategoryDefAccess().getDEFTerminalRuleCall_7()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryDefAccess().getImplNameTypeArgumentsParserRuleCall_8_0()); 
	    }
		lv_implName_8_0=ruleTypeArguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryDefRule());
	        }
       		set(
       			$current, 
       			"implName",
        		lv_implName_8_0, 
        		"TypeArguments");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryDefAccess().getWWithPartParserRuleCall_9_0_0()); 
	    }
		lv_w_9_0=ruleWithPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryDefRule());
	        }
       		set(
       			$current, 
       			"w",
        		lv_w_9_0, 
        		"WithPart");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryDefAccess().getWh5WherePartParserRuleCall_9_1_0()); 
	    }
		lv_wh5_10_0=ruleWherePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryDefRule());
	        }
       		set(
       			$current, 
       			"wh5",
        		lv_wh5_10_0, 
        		"WherePart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePackageDef
entryRulePackageDef returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getPackageDefRule()); }
	 iv_rulePackageDef=rulePackageDef 
	 { $current=$iv_rulePackageDef.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PackageDef
rulePackageDef returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'package' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPackageDefAccess().getNamePackageKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "package");
	    }

)
)(
(
		lv_shortname_1_0=RULE_ID
		{
			newLeafNode(lv_shortname_1_0, grammarAccess.getPackageDefAccess().getShortnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortname",
        		lv_shortname_1_0, 
        		"ID");
	    }

)
)(
(
		lv_longname_2_0=RULE_ID
		{
			newLeafNode(lv_longname_2_0, grammarAccess.getPackageDefAccess().getLongnameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname",
        		lv_longname_2_0, 
        		"ID");
	    }

)
)(
(
		lv_longname2_3_0=RULE_ID
		{
			newLeafNode(lv_longname2_3_0, grammarAccess.getPackageDefAccess().getLongname2IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname2",
        		lv_longname2_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefAccess().getCpTypeParameterListParserRuleCall_4_0()); 
	    }
		lv_cp_4_0=ruleTypeParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefRule());
	        }
       		set(
       			$current, 
       			"cp",
        		lv_cp_4_0, 
        		"TypeParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getPackageDefAccess().getCOLONTerminalRuleCall_5()); 
    }
(
(
		lv_exportName_6_0=RULE_ID
		{
			newLeafNode(lv_exportName_6_0, grammarAccess.getPackageDefAccess().getExportNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"exportName",
        		lv_exportName_6_0, 
        		"ID");
	    }

)
)this_DEF_7=RULE_DEF
    { 
    newLeafNode(this_DEF_7, grammarAccess.getPackageDefAccess().getDEFTerminalRuleCall_7()); 
    }
(
(
		lv_implName_8_0=RULE_ID
		{
			newLeafNode(lv_implName_8_0, grammarAccess.getPackageDefAccess().getImplNameIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"implName",
        		lv_implName_8_0, 
        		"ID");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefAccess().getWWithPartParserRuleCall_9_0_0()); 
	    }
		lv_w_9_0=ruleWithPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefRule());
	        }
       		set(
       			$current, 
       			"w",
        		lv_w_9_0, 
        		"WithPart");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefAccess().getWh5WherePartParserRuleCall_9_1_0()); 
	    }
		lv_wh5_10_0=ruleWherePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefRule());
	        }
       		set(
       			$current, 
       			"wh5",
        		lv_wh5_10_0, 
        		"WherePart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDomainDef
entryRuleDomainDef returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getDomainDefRule()); }
	 iv_ruleDomainDef=ruleDomainDef 
	 { $current=$iv_ruleDomainDef.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DomainDef
ruleDomainDef returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'domain' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getDomainDefAccess().getNameDomainKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "domain");
	    }

)
)(
(
		lv_shortname5_1_0=RULE_ID
		{
			newLeafNode(lv_shortname5_1_0, grammarAccess.getDomainDefAccess().getShortname5IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortname5",
        		lv_shortname5_1_0, 
        		"ID");
	    }

)
)(
(
		lv_longname5_2_0=RULE_ID
		{
			newLeafNode(lv_longname5_2_0, grammarAccess.getDomainDefAccess().getLongname5IDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname5",
        		lv_longname5_2_0, 
        		"ID");
	    }

)
)(
(
		lv_longname6_3_0=RULE_ID
		{
			newLeafNode(lv_longname6_3_0, grammarAccess.getDomainDefAccess().getLongname6IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname6",
        		lv_longname6_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainDefAccess().getCp5TypeParameterListParserRuleCall_4_0()); 
	    }
		lv_cp5_4_0=ruleTypeParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainDefRule());
	        }
       		set(
       			$current, 
       			"cp5",
        		lv_cp5_4_0, 
        		"TypeParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getDomainDefAccess().getCOLONTerminalRuleCall_5()); 
    }
(
(
		lv_exportName_6_0=RULE_ID
		{
			newLeafNode(lv_exportName_6_0, grammarAccess.getDomainDefAccess().getExportNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"exportName",
        		lv_exportName_6_0, 
        		"ID");
	    }

)
)this_DEF_7=RULE_DEF
    { 
    newLeafNode(this_DEF_7, grammarAccess.getDomainDefAccess().getDEFTerminalRuleCall_7()); 
    }
(
(
		lv_implName5_8_0=RULE_ID
		{
			newLeafNode(lv_implName5_8_0, grammarAccess.getDomainDefAccess().getImplName5IDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"implName5",
        		lv_implName5_8_0, 
        		"ID");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDomainDefAccess().getWWithPartParserRuleCall_9_0_0()); 
	    }
		lv_w_9_0=ruleWithPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainDefRule());
	        }
       		set(
       			$current, 
       			"w",
        		lv_w_9_0, 
        		"WithPart");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainDefAccess().getWh5WherePartParserRuleCall_9_1_0()); 
	    }
		lv_wh5_10_0=ruleWherePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainDefRule());
	        }
       		set(
       			$current, 
       			"wh5",
        		lv_wh5_10_0, 
        		"WherePart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleWherePart
entryRuleWherePart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getWherePartRule()); }
	 iv_ruleWherePart=ruleWherePart 
	 { $current=$iv_ruleWherePart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WherePart
ruleWherePart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'where' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getWherePartAccess().getNameWhereKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWherePartRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "where");
	    }

)
)(this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getWherePartAccess().getNLTerminalRuleCall_1()); 
    }
)*this_LBRACE_2=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_2, grammarAccess.getWherePartAccess().getLBRACETerminalRuleCall_2()); 
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getWherePartAccess().getNLTerminalRuleCall_3()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getWherePartAccess().getWhereAssigWhereAssignmentsParserRuleCall_4_0_0()); 
	    }
		lv_whereAssig_4_0=ruleWhereAssignments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWherePartRule());
	        }
       		add(
       			$current, 
       			"whereAssig",
        		lv_whereAssig_4_0, 
        		"WhereAssignments");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_NL_5=RULE_NL
    { 
    newLeafNode(this_NL_5, grammarAccess.getWherePartAccess().getNLTerminalRuleCall_4_1_0()); 
    }

    |this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getWherePartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); 
    }
)+)*((
(
		lv_longname8_7_0=RULE_ID
		{
			newLeafNode(lv_longname8_7_0, grammarAccess.getWherePartAccess().getLongname8IDTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWherePartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname8",
        		lv_longname8_7_0, 
        		"ID");
	    }

)
)((this_DEF_8=RULE_DEF
    { 
    newLeafNode(this_DEF_8, grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_5_1_0_0()); 
    }

    |this_MDEF_9=RULE_MDEF
    { 
    newLeafNode(this_MDEF_9, grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_5_1_0_1()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWherePartAccess().getImpTypeExpressionParserRuleCall_5_1_1_0()); 
	    }
		lv_imp_10_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWherePartRule());
	        }
       		set(
       			$current, 
       			"imp",
        		lv_imp_10_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWherePartAccess().getW8WithPartParserRuleCall_5_2_0()); 
	    }
		lv_w8_11_0=ruleWithPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWherePartRule());
	        }
       		set(
       			$current, 
       			"w8",
        		lv_w8_11_0, 
        		"WithPart");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		lv_longname9_12_0=RULE_ID
		{
			newLeafNode(lv_longname9_12_0, grammarAccess.getWherePartAccess().getLongname9IDTerminalRuleCall_6_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWherePartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"longname9",
        		lv_longname9_12_0, 
        		"ID");
	    }

)
)(this_DEF_13=RULE_DEF
    { 
    newLeafNode(this_DEF_13, grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_6_1_0()); 
    }

    |this_MDEF_14=RULE_MDEF
    { 
    newLeafNode(this_MDEF_14, grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_6_1_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWherePartAccess().getAddAddPartParserRuleCall_6_2_0()); 
	    }
		lv_add_15_0=ruleAddPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWherePartRule());
	        }
       		set(
       			$current, 
       			"add",
        		lv_add_15_0, 
        		"AddPart");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_RBRACE_16=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_16, grammarAccess.getWherePartAccess().getRBRACETerminalRuleCall_7()); 
    }
(this_NL_17=RULE_NL
    { 
    newLeafNode(this_NL_17, grammarAccess.getWherePartAccess().getNLTerminalRuleCall_8()); 
    }
)+)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleWhereAssignments
entryRuleWhereAssignments returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getWhereAssignmentsRule()); }
	 iv_ruleWhereAssignments=ruleWhereAssignments 
	 { $current=$iv_ruleWhereAssignments.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WhereAssignments
ruleWhereAssignments returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWhereAssignmentsAccess().getVariableDeclarationParserRuleCall_0()); 
    }
    this_VariableDeclaration_0=ruleVariableDeclaration
    { 
        $current = $this_VariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWhereAssignmentsAccess().getMacroDefParserRuleCall_1()); 
    }
    this_MacroDef_1=ruleMacroDef
    { 
        $current = $this_MacroDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWhereAssignmentsAccess().getImportParserRuleCall_2()); 
    }
    this_Import_2=ruleImport
    { 
        $current = $this_Import_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleWithPart
entryRuleWithPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getWithPartRule()); }
	 iv_ruleWithPart=ruleWithPart 
	 { $current=$iv_ruleWithPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WithPart
ruleWithPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'with' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getWithPartAccess().getNameWithKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithPartRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "with");
	    }

)
)(this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getWithPartAccess().getNLTerminalRuleCall_1()); 
    }
)*this_LBRACE_2=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_2, grammarAccess.getWithPartAccess().getLBRACETerminalRuleCall_2()); 
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getWithPartAccess().getNLTerminalRuleCall_3()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getWithPartAccess().getFundecVariableDeclarationParserRuleCall_4_0_0()); 
	    }
		lv_fundec_4_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithPartRule());
	        }
       		add(
       			$current, 
       			"fundec",
        		lv_fundec_4_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_NL_5=RULE_NL
    { 
    newLeafNode(this_NL_5, grammarAccess.getWithPartAccess().getNLTerminalRuleCall_4_1_0()); 
    }

    |this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getWithPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); 
    }
)+)*this_RBRACE_7=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_7, grammarAccess.getWithPartAccess().getRBRACETerminalRuleCall_5()); 
    }
(this_NL_8=RULE_NL
    { 
    newLeafNode(this_NL_8, grammarAccess.getWithPartAccess().getNLTerminalRuleCall_6()); 
    }
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAddPart
entryRuleAddPart returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getAddPartRule()); }
	 iv_ruleAddPart=ruleAddPart 
	 { $current=$iv_ruleAddPart.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AddPart
ruleAddPart returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'add' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getAddPartAccess().getNameAddKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPartRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "add");
	    }

)
)(this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getAddPartAccess().getNLTerminalRuleCall_1()); 
    }
)*this_LBRACE_2=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_2, grammarAccess.getAddPartAccess().getLBRACETerminalRuleCall_2()); 
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getAddPartAccess().getNLTerminalRuleCall_3()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getAddPartAccess().getTAddStatementsParserRuleCall_4_0_0()); 
	    }
		lv_t_4_0=ruleAddStatements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddPartRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_4_0, 
        		"AddStatements");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_NL_5=RULE_NL
    { 
    newLeafNode(this_NL_5, grammarAccess.getAddPartAccess().getNLTerminalRuleCall_4_1_0()); 
    }

    |this_SEMICOLON_6=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_6, grammarAccess.getAddPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); 
    }
)+)*this_RBRACE_7=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_7, grammarAccess.getAddPartAccess().getRBRACETerminalRuleCall_5()); 
    }
(this_NL_8=RULE_NL
    { 
    newLeafNode(this_NL_8, grammarAccess.getAddPartAccess().getNLTerminalRuleCall_6()); 
    }
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAddStatements
entryRuleAddStatements returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getAddStatementsRule()); }
	 iv_ruleAddStatements=ruleAddStatements 
	 { $current=$iv_ruleAddStatements.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AddStatements
ruleAddStatements returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddStatementsAccess().getVariableDeclarationAssignParserRuleCall_0()); 
    }
    this_VariableDeclarationAssign_0=ruleVariableDeclarationAssign
    { 
        $current = $this_VariableDeclarationAssign_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAddStatementsAccess().getFunctionDefinitionParserRuleCall_1()); 
    }
    this_FunctionDefinition_1=ruleFunctionDefinition
    { 
        $current = $this_FunctionDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAddStatementsAccess().getMacroDefParserRuleCall_2()); 
    }
    this_MacroDef_2=ruleMacroDef
    { 
        $current = $this_MacroDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAddStatementsAccess().getImportParserRuleCall_3()); 
    }
    this_Import_3=ruleImport
    { 
        $current = $this_Import_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFunctionSignatureParserRuleCall_0()); 
    }
    this_FunctionSignature_0=ruleFunctionSignature
    { 
        $current = $this_FunctionSignature_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getFunctionDefinitionAccess().getCOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getPar4TypeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_par4_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"par4",
        		lv_par4_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_DEF_3=RULE_DEF
    { 
    newLeafNode(this_DEF_3, grammarAccess.getFunctionDefinitionAccess().getDEFTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getPar5StatementParserRuleCall_3_0()); 
	    }
		lv_par5_4_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"par5",
        		lv_par5_4_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFunctionSignature
entryRuleFunctionSignature returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getFunctionSignatureRule()); }
	 iv_ruleFunctionSignature=ruleFunctionSignature 
	 { $current=$iv_ruleFunctionSignature.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionSignature
ruleFunctionSignature returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(((
(
		lv_fnNam_0_0=RULE_ID
		{
			newLeafNode(lv_fnNam_0_0, grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fnNam",
        		lv_fnNam_0_0, 
        		"ID");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getFunctionSignatureAccess().getLPARENTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionSignatureAccess().getPar2VariableDeclarationParserRuleCall_0_2_0()); 
	    }
		lv_par2_2_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionSignatureRule());
	        }
       		set(
       			$current, 
       			"par2",
        		lv_par2_2_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getFunctionSignatureAccess().getCOMMATerminalRuleCall_0_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionSignatureAccess().getPar3VariableDeclarationParserRuleCall_0_3_1_0()); 
	    }
		lv_par3_4_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionSignatureRule());
	        }
       		add(
       			$current, 
       			"par3",
        		lv_par3_4_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getFunctionSignatureAccess().getRPARENTerminalRuleCall_0_4()); 
    }
)
    |((
(
		lv_fnNam_6_0=RULE_ID
		{
			newLeafNode(lv_fnNam_6_0, grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fnNam",
        		lv_fnNam_6_0, 
        		"ID");
	    }

)
)(
(
		lv_par_7_0=RULE_ID
		{
			newLeafNode(lv_par_7_0, grammarAccess.getFunctionSignatureAccess().getParIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par",
        		lv_par_7_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_t4_8_0=RULE_ID
		{
			newLeafNode(lv_t4_8_0, grammarAccess.getFunctionSignatureAccess().getT4IDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t4",
        		lv_t4_8_0, 
        		"ID");
	    }

)
)((
(
		lv_b1_9_0=RULE_EQUAL
		{
			newLeafNode(lv_b1_9_0, grammarAccess.getFunctionSignatureAccess().getB1EQUALTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_9_0, 
        		"EQUAL");
	    }

)
)
    |(
(
		lv_b1_10_0=RULE_LT
		{
			newLeafNode(lv_b1_10_0, grammarAccess.getFunctionSignatureAccess().getB1LTTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_10_0, 
        		"LT");
	    }

)
)
    |(
(
		lv_b1_11_0=RULE_GT
		{
			newLeafNode(lv_b1_11_0, grammarAccess.getFunctionSignatureAccess().getB1GTTerminalRuleCall_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_11_0, 
        		"GT");
	    }

)
)
    |(
(
		lv_b1_12_0=RULE_LE
		{
			newLeafNode(lv_b1_12_0, grammarAccess.getFunctionSignatureAccess().getB1LETerminalRuleCall_2_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_12_0, 
        		"LE");
	    }

)
)
    |(
(
		lv_b1_13_0=RULE_GE
		{
			newLeafNode(lv_b1_13_0, grammarAccess.getFunctionSignatureAccess().getB1GETerminalRuleCall_2_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_13_0, 
        		"GE");
	    }

)
)
    |(
(
		lv_b1_14_0=RULE_PLUS
		{
			newLeafNode(lv_b1_14_0, grammarAccess.getFunctionSignatureAccess().getB1PLUSTerminalRuleCall_2_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_14_0, 
        		"PLUS");
	    }

)
)
    |(
(
		lv_b1_15_0=RULE_MINUS
		{
			newLeafNode(lv_b1_15_0, grammarAccess.getFunctionSignatureAccess().getB1MINUSTerminalRuleCall_2_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_15_0, 
        		"MINUS");
	    }

)
)
    |(
(
		lv_b1_16_0=RULE_TIMES
		{
			newLeafNode(lv_b1_16_0, grammarAccess.getFunctionSignatureAccess().getB1TIMESTerminalRuleCall_2_1_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_16_0, 
        		"TIMES");
	    }

)
)
    |(
(
		lv_b1_17_0=RULE_SLASH
		{
			newLeafNode(lv_b1_17_0, grammarAccess.getFunctionSignatureAccess().getB1SLASHTerminalRuleCall_2_1_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_17_0, 
        		"SLASH");
	    }

)
)
    |(
(
		lv_b1_18_0=RULE_AMPERSAND
		{
			newLeafNode(lv_b1_18_0, grammarAccess.getFunctionSignatureAccess().getB1AMPERSANDTerminalRuleCall_2_1_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_18_0, 
        		"AMPERSAND");
	    }

)
)
    |(
(
		lv_b1_19_0=RULE_BAR
		{
			newLeafNode(lv_b1_19_0, grammarAccess.getFunctionSignatureAccess().getB1BARTerminalRuleCall_2_1_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_19_0, 
        		"BAR");
	    }

)
)
    |(
(
		lv_b1_20_0=RULE_CARAT
		{
			newLeafNode(lv_b1_20_0, grammarAccess.getFunctionSignatureAccess().getB1CARATTerminalRuleCall_2_1_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		lv_b1_20_0, 
        		"CARAT");
	    }

)
))(
(
		lv_t5_21_0=RULE_ID
		{
			newLeafNode(lv_t5_21_0, grammarAccess.getFunctionSignatureAccess().getT5IDTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t5",
        		lv_t5_21_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_b2_22_0=RULE_MINUS
		{
			newLeafNode(lv_b2_22_0, grammarAccess.getFunctionSignatureAccess().getB2MINUSTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b2",
        		lv_b2_22_0, 
        		"MINUS");
	    }

)
)(
(
		lv_t6_23_0=RULE_ID
		{
			newLeafNode(lv_t6_23_0, grammarAccess.getFunctionSignatureAccess().getT6IDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSignatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t6",
        		lv_t6_23_0, 
        		"ID");
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMacroDef
entryRuleMacroDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMacroDefRule()); }
	 iv_ruleMacroDef=ruleMacroDef 
	 { $current=$iv_ruleMacroDef.current; } 
	 EOF 
;

// Rule MacroDef
ruleMacroDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_macroname_0_0=RULE_ID
		{
			newLeafNode(lv_macroname_0_0, grammarAccess.getMacroDefAccess().getMacronameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMacroDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"macroname",
        		lv_macroname_0_0, 
        		"ID");
	    }

)
)this_MACROVALUE_1=RULE_MACROVALUE
    { 
    newLeafNode(this_MACROVALUE_1, grammarAccess.getMacroDefAccess().getMACROVALUETerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_impname_1_0=RULE_ID
		{
			newLeafNode(lv_impname_1_0, grammarAccess.getImportAccess().getImpnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"impname",
        		lv_impname_1_0, 
        		"ID");
	    }

)
)+)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	 iv_ruleVariableDeclaration=ruleVariableDeclaration 
	 { $current=$iv_ruleVariableDeclaration.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_varName_0_0=RULE_ID
		{
			newLeafNode(lv_varName_0_0, grammarAccess.getVariableDeclarationAccess().getVarNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_0_0, 
        		"ID");
	    }

)
)(this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getVariableDeclarationAccess().getCOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypTypeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_typ_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"typ",
        		lv_typ_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleVariableDeclarationAssign
entryRuleVariableDeclarationAssign returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getVariableDeclarationAssignRule()); }
	 iv_ruleVariableDeclarationAssign=ruleVariableDeclarationAssign 
	 { $current=$iv_ruleVariableDeclarationAssign.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclarationAssign
ruleVariableDeclarationAssign returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_varName_0_0=RULE_ID
		{
			newLeafNode(lv_varName_0_0, grammarAccess.getVariableDeclarationAssignAccess().getVarNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclarationAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_0_0, 
        		"ID");
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getVariableDeclarationAssignAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		lv_t2_2_0=RULE_ID
		{
			newLeafNode(lv_t2_2_0, grammarAccess.getVariableDeclarationAssignAccess().getT2IDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableDeclarationAssignRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"t2",
        		lv_t2_2_0, 
        		"ID");
	    }

)
))*(this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getVariableDeclarationAssignAccess().getCOLONTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAssignAccess().getTypTypeExpressionParserRuleCall_2_1_0()); 
	    }
		lv_typ_4_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationAssignRule());
	        }
       		set(
       			$current, 
       			"typ",
        		lv_typ_4_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_BECOMES_5=RULE_BECOMES
    { 
    newLeafNode(this_BECOMES_5, grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAssignAccess().getT4ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_t4_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationAssignRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}









// Entry rule entryRuleTypeExpression
entryRuleTypeExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeExpressionRule()); }
	 iv_ruleTypeExpression=ruleTypeExpression 
	 { $current=$iv_ruleTypeExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeExpression
ruleTypeExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(((((
(
ruleTypeArguments
)
)	RULE_ARROW(
(
ruleTypeResult
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeExpressionAccess().getT2TypeArgumentsParserRuleCall_0_0_0_0()); 
	    }
		lv_t2_0_0=ruleTypeArguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeExpressionRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_0_0, 
        		"TypeArguments");
	        afterParserOrEnumRuleCall();
	    }

)
)this_ARROW_1=RULE_ARROW
    { 
    newLeafNode(this_ARROW_1, grammarAccess.getTypeExpressionAccess().getARROWTerminalRuleCall_0_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeExpressionAccess().getT3TypeResultParserRuleCall_0_0_2_0()); 
	    }
		lv_t3_2_0=ruleTypeResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeExpressionRule());
	        }
       		set(
       			$current, 
       			"t3",
        		lv_t3_2_0, 
        		"TypeResult");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |
    { 
        newCompositeNode(grammarAccess.getTypeExpressionAccess().getTypePrimaryExpressionParserRuleCall_1()); 
    }
    this_TypePrimaryExpression_3=ruleTypePrimaryExpression
    { 
        $current = $this_TypePrimaryExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeParameterList
entryRuleTypeParameterList returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeParameterListRule()); }
	 iv_ruleTypeParameterList=ruleTypeParameterList 
	 { $current=$iv_ruleTypeParameterList.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeParameterList
ruleTypeParameterList returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_tyname_0_0=RULE_LPAREN
		{
			newLeafNode(lv_tyname_0_0, grammarAccess.getTypeParameterListAccess().getTynameLPARENTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeParameterListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tyname",
        		lv_tyname_0_0, 
        		"LPAREN");
	    }

)
)(
(
		lv_par_1_0=RULE_ID
		{
			newLeafNode(lv_par_1_0, grammarAccess.getTypeParameterListAccess().getParIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeParameterListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par",
        		lv_par_1_0, 
        		"ID");
	    }

)
)?(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getTypeParameterListAccess().getCOMMATerminalRuleCall_2_0()); 
    }
(
(
		lv_par2_3_0=RULE_ID
		{
			newLeafNode(lv_par2_3_0, grammarAccess.getTypeParameterListAccess().getPar2IDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeParameterListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_3_0, 
        		"ID");
	    }

)
))*this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getTypeParameterListAccess().getRPARENTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeArguments
entryRuleTypeArguments returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeArgumentsRule()); }
	 iv_ruleTypeArguments=ruleTypeArguments 
	 { $current=$iv_ruleTypeArguments.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeArguments
ruleTypeArguments returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTTypeLiteralParserRuleCall_0_0()); 
	    }
		lv_t_0_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_0_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_t2_1_0=RULE_PERCENT
		{
			newLeafNode(lv_t2_1_0, grammarAccess.getTypeArgumentsAccess().getT2PERCENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"PERCENT");
	    }

)
)
    |(
(
		lv_t3_2_0=	'Type' 
    {
        newLeafNode(lv_t3_2_0, grammarAccess.getTypeArgumentsAccess().getT3TypeKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed($current, "t3", lv_t3_2_0, "Type");
	    }

)
)
    |((
(
		lv_b1_3_0=RULE_LPAREN
		{
			newLeafNode(lv_b1_3_0, grammarAccess.getTypeArgumentsAccess().getB1LPARENTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"b1",
        		true, 
        		"LPAREN");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT4TypeExpressionParserRuleCall_3_1_0()); 
	    }
		lv_t4_4_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_4_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT16TypeExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_t16_6_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t16",
        		lv_t16_6_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_7=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_7, grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_3_3()); 
    }
)
    |((
(
		lv_t5_8_0=	'Record' 
    {
        newLeafNode(lv_t5_8_0, grammarAccess.getTypeArgumentsAccess().getT5RecordKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed($current, "t5", lv_t5_8_0, "Record");
	    }

)
)this_LPAREN_9=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT6TypeExpressionParserRuleCall_4_2_0()); 
	    }
		lv_t6_10_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t6",
        		lv_t6_10_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_11=RULE_COLON
    { 
    newLeafNode(this_COLON_11, grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT22TypeExpressionParserRuleCall_4_3_1_0()); 
	    }
		lv_t22_12_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t22",
        		lv_t22_12_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_13=RULE_COMMA
    { 
    newLeafNode(this_COMMA_13, grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_4_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT21TypeExpressionParserRuleCall_4_4_1_0()); 
	    }
		lv_t21_14_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t21",
        		lv_t21_14_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_15=RULE_COLON
    { 
    newLeafNode(this_COLON_15, grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT23TypeExpressionParserRuleCall_4_4_2_1_0()); 
	    }
		lv_t23_16_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t23",
        		lv_t23_16_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_17=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_17, grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_4_5()); 
    }
)
    |((
(
		lv_t9_18_0=	'Union' 
    {
        newLeafNode(lv_t9_18_0, grammarAccess.getTypeArgumentsAccess().getT9UnionKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed($current, "t9", lv_t9_18_0, "Union");
	    }

)
)this_LPAREN_19=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_19, grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT10TypeExpressionParserRuleCall_5_2_0()); 
	    }
		lv_t10_20_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t10",
        		lv_t10_20_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_21=RULE_COLON
    { 
    newLeafNode(this_COLON_21, grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT25TypeExpressionParserRuleCall_5_3_1_0()); 
	    }
		lv_t25_22_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t25",
        		lv_t25_22_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_23=RULE_COMMA
    { 
    newLeafNode(this_COMMA_23, grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_5_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT24TypeExpressionParserRuleCall_5_4_1_0()); 
	    }
		lv_t24_24_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t24",
        		lv_t24_24_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_25=RULE_COLON
    { 
    newLeafNode(this_COLON_25, grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT26TypeExpressionParserRuleCall_5_4_2_1_0()); 
	    }
		lv_t26_26_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t26",
        		lv_t26_26_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_27=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_27, grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_5_5()); 
    }
)
    |((
(
		lv_t11_28_0=	'Join' 
    {
        newLeafNode(lv_t11_28_0, grammarAccess.getTypeArgumentsAccess().getT11JoinKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeArgumentsRule());
	        }
       		setWithLastConsumed($current, "t11", lv_t11_28_0, "Join");
	    }

)
)this_LPAREN_29=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_29, grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_6_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT12TypeExpressionParserRuleCall_6_2_0()); 
	    }
		lv_t12_30_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t12",
        		lv_t12_30_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_31=RULE_COMMA
    { 
    newLeafNode(this_COMMA_31, grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_6_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT13TypeExpressionParserRuleCall_6_3_1_0()); 
	    }
		lv_t13_32_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		add(
       			$current, 
       			"t13",
        		lv_t13_32_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_33=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_33, grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_6_4()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getT15TypeNameOrFunctionCallParserRuleCall_7_0()); 
	    }
		lv_t15_34_0=ruleTypeNameOrFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
	        }
       		set(
       			$current, 
       			"t15",
        		lv_t15_34_0, 
        		"TypeNameOrFunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeResult
entryRuleTypeResult returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeResultRule()); }
	 iv_ruleTypeResult=ruleTypeResult 
	 { $current=$iv_ruleTypeResult.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeResult
ruleTypeResult returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getTTypeLiteralParserRuleCall_0_0()); 
	    }
		lv_t_0_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_0_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_t2_1_0=RULE_PERCENT
		{
			newLeafNode(lv_t2_1_0, grammarAccess.getTypeResultAccess().getT2PERCENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"PERCENT");
	    }

)
)
    |(
(
		lv_tyname_2_0=	'Type' 
    {
        newLeafNode(lv_tyname_2_0, grammarAccess.getTypeResultAccess().getTynameTypeKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeResultRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_2_0, "Type");
	    }

)
)
    |((
(
		lv_name_3_0=	'Record' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getTypeResultAccess().getNameRecordKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeResultRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "Record");
	    }

)
)this_LPAREN_4=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_4, grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT7TypeExpressionParserRuleCall_3_2_0()); 
	    }
		lv_t7_5_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		set(
       			$current, 
       			"t7",
        		lv_t7_5_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT8TypeExpressionParserRuleCall_3_3_1_0()); 
	    }
		lv_t8_7_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t8",
        		lv_t8_7_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_8=RULE_COMMA
    { 
    newLeafNode(this_COMMA_8, grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_3_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT21TypeExpressionParserRuleCall_3_4_1_0()); 
	    }
		lv_t21_9_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t21",
        		lv_t21_9_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_10=RULE_COLON
    { 
    newLeafNode(this_COLON_10, grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT23TypeExpressionParserRuleCall_3_4_2_1_0()); 
	    }
		lv_t23_11_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t23",
        		lv_t23_11_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_12=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_12, grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_3_5()); 
    }
)
    |((
(
		lv_name_13_0=	'Union' 
    {
        newLeafNode(lv_name_13_0, grammarAccess.getTypeResultAccess().getNameUnionKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeResultRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_13_0, "Union");
	    }

)
)this_LPAREN_14=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_14, grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT10TypeExpressionParserRuleCall_4_2_0()); 
	    }
		lv_t10_15_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		set(
       			$current, 
       			"t10",
        		lv_t10_15_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_16=RULE_COLON
    { 
    newLeafNode(this_COLON_16, grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT11TypeExpressionParserRuleCall_4_3_1_0()); 
	    }
		lv_t11_17_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t11",
        		lv_t11_17_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_18=RULE_COMMA
    { 
    newLeafNode(this_COMMA_18, grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_4_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT24TypeExpressionParserRuleCall_4_4_1_0()); 
	    }
		lv_t24_19_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t24",
        		lv_t24_19_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_20=RULE_COLON
    { 
    newLeafNode(this_COLON_20, grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT26TypeExpressionParserRuleCall_4_4_2_1_0()); 
	    }
		lv_t26_21_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t26",
        		lv_t26_21_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_22=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_22, grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_4_5()); 
    }
)
    |((
(
		lv_name_23_0=	'Join' 
    {
        newLeafNode(lv_name_23_0, grammarAccess.getTypeResultAccess().getNameJoinKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeResultRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_23_0, "Join");
	    }

)
)this_LPAREN_24=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_24, grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT12TypeExpressionParserRuleCall_5_2_0()); 
	    }
		lv_t12_25_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		set(
       			$current, 
       			"t12",
        		lv_t12_25_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_26=RULE_COMMA
    { 
    newLeafNode(this_COMMA_26, grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_5_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT13TypeExpressionParserRuleCall_5_3_1_0()); 
	    }
		lv_t13_27_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		add(
       			$current, 
       			"t13",
        		lv_t13_27_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_28=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_28, grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_5_4()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeResultAccess().getT15TypeNameOrFunctionCallParserRuleCall_6_0()); 
	    }
		lv_t15_29_0=ruleTypeNameOrFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeResultRule());
	        }
       		set(
       			$current, 
       			"t15",
        		lv_t15_29_0, 
        		"TypeNameOrFunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypePrimaryExpression
entryRuleTypePrimaryExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypePrimaryExpressionRule()); }
	 iv_ruleTypePrimaryExpression=ruleTypePrimaryExpression 
	 { $current=$iv_ruleTypePrimaryExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypePrimaryExpression
ruleTypePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getTypeLiteralParserRuleCall_0()); 
    }
    this_TypeLiteral_0=ruleTypeLiteral
    { 
        $current = $this_TypeLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_1_0(),
            $current);
    }
)(
(
		lv_t32_2_0=RULE_PERCENT
		{
			newLeafNode(lv_t32_2_0, grammarAccess.getTypePrimaryExpressionAccess().getT32PERCENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t32",
        		lv_t32_2_0, 
        		"PERCENT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_2_0(),
            $current);
    }
)(
(
		lv_tyname_4_0=	'Type' 
    {
        newLeafNode(lv_tyname_4_0, grammarAccess.getTypePrimaryExpressionAccess().getTynameTypeKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_4_0, "Type");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_3_0(),
            $current);
    }
)(
(
		lv_tyname_6_0=	'Lisp' 
    {
        newLeafNode(lv_tyname_6_0, grammarAccess.getTypePrimaryExpressionAccess().getTynameLispKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_6_0, "Lisp");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_4_0(),
            $current);
    }
)this_LPAREN_8=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_8, grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_4_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT5TypeExpressionParserRuleCall_4_2_0()); 
	    }
		lv_t5_9_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"t5",
        		lv_t5_9_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_10=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_4_3()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_5_0(),
            $current);
    }
)(
(
		lv_tyname_12_0=	'Record' 
    {
        newLeafNode(lv_tyname_12_0, grammarAccess.getTypePrimaryExpressionAccess().getTynameRecordKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_12_0, "Record");
	    }

)
)this_LPAREN_13=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_13, grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_5_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT7TypeExpressionParserRuleCall_5_3_0()); 
	    }
		lv_t7_14_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"t7",
        		lv_t7_14_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_15=RULE_COLON
    { 
    newLeafNode(this_COLON_15, grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT8TypeExpressionParserRuleCall_5_4_1_0()); 
	    }
		lv_t8_16_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t8",
        		lv_t8_16_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_17=RULE_COMMA
    { 
    newLeafNode(this_COMMA_17, grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_5_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT21TypeExpressionParserRuleCall_5_5_1_0()); 
	    }
		lv_t21_18_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t21",
        		lv_t21_18_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_19=RULE_COLON
    { 
    newLeafNode(this_COLON_19, grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_5_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT23TypeExpressionParserRuleCall_5_5_2_1_0()); 
	    }
		lv_t23_20_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t23",
        		lv_t23_20_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_21=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_21, grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_5_6()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_6_0(),
            $current);
    }
)(
(
		lv_tyname_23_0=	'Union' 
    {
        newLeafNode(lv_tyname_23_0, grammarAccess.getTypePrimaryExpressionAccess().getTynameUnionKeyword_6_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_23_0, "Union");
	    }

)
)this_LPAREN_24=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_24, grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_6_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT10TypeExpressionParserRuleCall_6_3_0()); 
	    }
		lv_t10_25_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"t10",
        		lv_t10_25_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_26=RULE_COLON
    { 
    newLeafNode(this_COLON_26, grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT11TypeExpressionParserRuleCall_6_4_1_0()); 
	    }
		lv_t11_27_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t11",
        		lv_t11_27_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_28=RULE_COMMA
    { 
    newLeafNode(this_COMMA_28, grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_6_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT24TypeExpressionParserRuleCall_6_5_1_0()); 
	    }
		lv_t24_29_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t24",
        		lv_t24_29_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_30=RULE_COLON
    { 
    newLeafNode(this_COLON_30, grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_5_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT26TypeExpressionParserRuleCall_6_5_2_1_0()); 
	    }
		lv_t26_31_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t26",
        		lv_t26_31_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_32=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_32, grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_6_6()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_7_0(),
            $current);
    }
)(
(
		lv_tyname_34_0=	'Join' 
    {
        newLeafNode(lv_tyname_34_0, grammarAccess.getTypePrimaryExpressionAccess().getTynameJoinKeyword_7_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "tyname", lv_tyname_34_0, "Join");
	    }

)
)this_LPAREN_35=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_35, grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_7_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT13TypeExpressionParserRuleCall_7_3_0()); 
	    }
		lv_t13_36_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"t13",
        		lv_t13_36_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_37=RULE_COMMA
    { 
    newLeafNode(this_COMMA_37, grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_7_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getT14TypeExpressionParserRuleCall_7_4_1_0()); 
	    }
		lv_t14_38_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"t14",
        		lv_t14_38_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_39=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_39, grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_7_5()); 
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getTypeNameOrFunctionCallParserRuleCall_8()); 
    }
    this_TypeNameOrFunctionCall_40=ruleTypeNameOrFunctionCall
    { 
        $current = $this_TypeNameOrFunctionCall_40.current; 
        afterParserOrEnumRuleCall();
    }

    |((	ruleTupleDefinition)=>
    { 
        newCompositeNode(grammarAccess.getTypePrimaryExpressionAccess().getTupleDefinitionParserRuleCall_9()); 
    }
    this_TupleDefinition_41=ruleTupleDefinition
    { 
        $current = $this_TupleDefinition_41.current; 
        afterParserOrEnumRuleCall();
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeNameOrFunctionCall
entryRuleTypeNameOrFunctionCall returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeNameOrFunctionCallRule()); }
	 iv_ruleTypeNameOrFunctionCall=ruleTypeNameOrFunctionCall 
	 { $current=$iv_ruleTypeNameOrFunctionCall.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeNameOrFunctionCall
ruleTypeNameOrFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_tfnname_0_0=RULE_ID
		{
			newLeafNode(lv_tfnname_0_0, grammarAccess.getTypeNameOrFunctionCallAccess().getTfnnameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeNameOrFunctionCallRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tfnname",
        		lv_tfnname_0_0, 
        		"ID");
	    }

)
)((this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getTypeNameOrFunctionCallAccess().getLPARENTerminalRuleCall_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameOrFunctionCallAccess().getT4TypeExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_t4_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameOrFunctionCallRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getTypeNameOrFunctionCallAccess().getCOMMATerminalRuleCall_1_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameOrFunctionCallAccess().getT25TypeExpressionParserRuleCall_1_0_2_1_0()); 
	    }
		lv_t25_4_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameOrFunctionCallRule());
	        }
       		add(
       			$current, 
       			"t25",
        		lv_t25_4_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getTypeNameOrFunctionCallAccess().getRPARENTerminalRuleCall_1_0_3()); 
    }
)
    |((
(
ruleTypePrimaryExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameOrFunctionCallAccess().getT6TypePrimaryExpressionParserRuleCall_1_1_0()); 
	    }
		lv_t6_6_0=ruleTypePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameOrFunctionCallRule());
	        }
       		set(
       			$current, 
       			"t6",
        		lv_t6_6_0, 
        		"TypePrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTupleDefinition
entryRuleTupleDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTupleDefinitionRule()); }
	 iv_ruleTupleDefinition=ruleTupleDefinition 
	 { $current=$iv_ruleTupleDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TupleDefinition
ruleTupleDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(this_LPAREN_0=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_0, grammarAccess.getTupleDefinitionAccess().getLPARENTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleDefinitionAccess().getT4TypeExpressionParserRuleCall_1_0()); 
	    }
		lv_t4_1_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleDefinitionRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_1_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getTupleDefinitionAccess().getCOMMATerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleDefinitionAccess().getT25TypeExpressionParserRuleCall_2_1_0()); 
	    }
		lv_t25_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleDefinitionRule());
	        }
       		add(
       			$current, 
       			"t25",
        		lv_t25_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getTupleDefinitionAccess().getRPARENTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeLiteral
entryRuleTypeLiteral returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeLiteralRule()); }
	 iv_ruleTypeLiteral=ruleTypeLiteral 
	 { $current=$iv_ruleTypeLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeLiteral
ruleTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_t1_0_0=RULE_INT
		{
			newLeafNode(lv_t1_0_0, grammarAccess.getTypeLiteralAccess().getT1INTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t1",
        		lv_t1_0_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_t22_1_0=RULE_STRING
		{
			newLeafNode(lv_t22_1_0, grammarAccess.getTypeLiteralAccess().getT22STRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t22",
        		lv_t22_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeLiteralAccess().getT34CharacterLiteralParserRuleCall_2_0()); 
	    }
		lv_t34_2_0=ruleCharacterLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
	        }
       		set(
       			$current, 
       			"t34",
        		lv_t34_2_0, 
        		"CharacterLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeLiteralAccess().getT35BooleanLiteralParserRuleCall_3_0()); 
	    }
		lv_t35_3_0=ruleBooleanLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeLiteralRule());
	        }
       		set(
       			$current, 
       			"t35",
        		lv_t35_3_0, 
        		"BooleanLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS1BlockParserRuleCall_0_0()); 
	    }
		lv_s1_0_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s1",
        		lv_s1_0_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
ruleStatementExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS3StatementExpressionParserRuleCall_1_0()); 
	    }
		lv_s3_1_0=ruleStatementExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s3",
        		lv_s3_1_0, 
        		"StatementExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS4IfStatementParserRuleCall_2_0()); 
	    }
		lv_s4_2_0=ruleIfStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s4",
        		lv_s4_2_0, 
        		"IfStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS5WhileStatementParserRuleCall_3_0()); 
	    }
		lv_s5_3_0=ruleWhileStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s5",
        		lv_s5_3_0, 
        		"WhileStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS6DoStatementParserRuleCall_4_0()); 
	    }
		lv_s6_4_0=ruleDoStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s6",
        		lv_s6_4_0, 
        		"DoStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS7ForStatementParserRuleCall_5_0()); 
	    }
		lv_s7_5_0=ruleForStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s7",
        		lv_s7_5_0, 
        		"ForStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS8BreakStatementParserRuleCall_6_0()); 
	    }
		lv_s8_6_0=ruleBreakStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s8",
        		lv_s8_6_0, 
        		"BreakStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS9IterateStatementParserRuleCall_7_0()); 
	    }
		lv_s9_7_0=ruleIterateStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s9",
        		lv_s9_7_0, 
        		"IterateStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getS10ReturnStatementParserRuleCall_8_0()); 
	    }
		lv_s10_8_0=ruleReturnStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"s10",
        		lv_s10_8_0, 
        		"ReturnStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_stname_0_0=RULE_LBRACE
		{
			newLeafNode(lv_stname_0_0, grammarAccess.getBlockAccess().getStnameLBRACETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stname",
        		lv_stname_0_0, 
        		"LBRACE");
	    }

)
)(this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getBlockAccess().getNLTerminalRuleCall_1()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getStatemBlStatementParserRuleCall_2_0_0()); 
	    }
		lv_statemBl_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"statemBl",
        		lv_statemBl_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getBlockAccess().getNLTerminalRuleCall_2_1_0()); 
    }

    |this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); 
    }
)+)*this_RBRACE_5=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_5, grammarAccess.getBlockAccess().getRBRACETerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleStatementExpression
entryRuleStatementExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getStatementExpressionRule()); }
	 iv_ruleStatementExpression=ruleStatementExpression 
	 { $current=$iv_ruleStatementExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StatementExpression
ruleStatementExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getTExpressionParserRuleCall_0_0()); 
	    }
		lv_t_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getStatementExpressionAccess().getCOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getT2TypeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_t2_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_BECOMES_3=RULE_BECOMES
    { 
    newLeafNode(this_BECOMES_3, grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getT3ExpressionParserRuleCall_2_1_0()); 
	    }
		lv_t3_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"t3",
        		lv_t3_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_EXIT_5=RULE_EXIT
    { 
    newLeafNode(this_EXIT_5, grammarAccess.getStatementExpressionAccess().getEXITTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementExpressionAccess().getT4ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_t4_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementExpressionRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	 iv_ruleForStatement=ruleForStatement 
	 { $current=$iv_ruleForStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ForStatement
ruleForStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
    }
((
(
		lv_stname_1_0=RULE_ID
		{
			newLeafNode(lv_stname_1_0, grammarAccess.getForStatementAccess().getStnameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stname",
        		lv_stname_1_0, 
        		"ID");
	    }

)
)	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getInKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getT1ExpressionParserRuleCall_1_2_0()); 
	    }
		lv_t1_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"t1",
        		lv_t1_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4='repeat' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getForStatementAccess().getRepeatKeyword_2());
    }
(this_NL_5=RULE_NL
    { 
    newLeafNode(this_NL_5, grammarAccess.getForStatementAccess().getNLTerminalRuleCall_3()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getS1StatementParserRuleCall_4_0()); 
	    }
		lv_s1_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"s1",
        		lv_s1_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	 iv_ruleWhileStatement=ruleWhileStatement 
	 { $current=$iv_ruleWhileStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_stname_0_0=	'while' 
    {
        newLeafNode(lv_stname_0_0, grammarAccess.getWhileStatementAccess().getStnameWhileKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileStatementRule());
	        }
       		setWithLastConsumed($current, "stname", lv_stname_0_0, "while");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getT2PredicateOrParserRuleCall_1_0()); 
	    }
		lv_t2_1_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='repeat' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhileStatementAccess().getRepeatKeyword_2());
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getWhileStatementAccess().getNLTerminalRuleCall_3()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getS1StatementParserRuleCall_4_0()); 
	    }
		lv_s1_4_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"s1",
        		lv_s1_4_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	 iv_ruleDoStatement=ruleDoStatement 
	 { $current=$iv_ruleDoStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DoStatement
ruleDoStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_stname_0_0=	'do' 
    {
        newLeafNode(lv_stname_0_0, grammarAccess.getDoStatementAccess().getStnameDoKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoStatementRule());
	        }
       		setWithLastConsumed($current, "stname", lv_stname_0_0, "do");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getS1StatementParserRuleCall_1_0()); 
	    }
		lv_s1_1_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"s1",
        		lv_s1_1_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='while' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getDoStatementAccess().getNLTerminalRuleCall_3()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getT2PredicateOrParserRuleCall_4_0()); 
	    }
		lv_t2_4_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_4_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIterateStatement
entryRuleIterateStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getIterateStatementRule()); }
	 iv_ruleIterateStatement=ruleIterateStatement 
	 { $current=$iv_ruleIterateStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IterateStatement
ruleIterateStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
(
		lv_stname_0_0=	'iterate' 
    {
        newLeafNode(lv_stname_0_0, grammarAccess.getIterateStatementAccess().getStnameIterateKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterateStatementRule());
	        }
       		setWithLastConsumed($current, "stname", lv_stname_0_0, "iterate");
	    }

)
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBreakStatement
entryRuleBreakStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getBreakStatementRule()); }
	 iv_ruleBreakStatement=ruleBreakStatement 
	 { $current=$iv_ruleBreakStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BreakStatement
ruleBreakStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
(
		lv_stname_0_0=	'break' 
    {
        newLeafNode(lv_stname_0_0, grammarAccess.getBreakStatementAccess().getStnameBreakKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBreakStatementRule());
	        }
       		setWithLastConsumed($current, "stname", lv_stname_0_0, "break");
	    }

)
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	 iv_ruleReturnStatement=ruleReturnStatement 
	 { $current=$iv_ruleReturnStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_stname_0_0=	'return' 
    {
        newLeafNode(lv_stname_0_0, grammarAccess.getReturnStatementAccess().getStnameReturnKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReturnStatementRule());
	        }
       		setWithLastConsumed($current, "stname", lv_stname_0_0, "return");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnStatementAccess().getT2ExpressionParserRuleCall_1_0()); 
	    }
		lv_t2_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnStatementRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	 iv_ruleIfStatement=ruleIfStatement 
	 { $current=$iv_ruleIfStatement.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IfStatement
ruleIfStatement returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getT2PredicateOrParserRuleCall_1_0()); 
	    }
		lv_t2_1_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getThenKeyword_2());
    }
(this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_3()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getS1StatementParserRuleCall_4_0()); 
	    }
		lv_s1_4_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"s1",
        		lv_s1_4_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
    }
)(this_NL_6=RULE_NL
    { 
    newLeafNode(this_NL_6, grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_5_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getS2StatementParserRuleCall_5_2_0()); 
	    }
		lv_s2_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"s2",
        		lv_s2_7_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePredicateOr
entryRulePredicateOr returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPredicateOrRule()); }
	 iv_rulePredicateOr=rulePredicateOr 
	 { $current=$iv_rulePredicateOr.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PredicateOr
rulePredicateOr returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredicateOrAccess().getPredicateAndParserRuleCall_0()); 
    }
    this_PredicateAnd_0=rulePredicateAnd
    { 
        $current = $this_PredicateAnd_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPredicateOrAccess().getPredicateOrLeftAction_1_0(),
            $current);
    }
)(
(
		lv_prname_2_0=	'or' 
    {
        newLeafNode(lv_prname_2_0, grammarAccess.getPredicateOrAccess().getPrnameOrKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredicateOrRule());
	        }
       		setWithLastConsumed($current, "prname", lv_prname_2_0, "or");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateOrAccess().getRightPredicateAndParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePredicateAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PredicateAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePredicateAnd
entryRulePredicateAnd returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPredicateAndRule()); }
	 iv_rulePredicateAnd=rulePredicateAnd 
	 { $current=$iv_rulePredicateAnd.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PredicateAnd
rulePredicateAnd returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredicateAndAccess().getPredicateNotParserRuleCall_0()); 
    }
    this_PredicateNot_0=rulePredicateNot
    { 
        $current = $this_PredicateNot_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPredicateAndAccess().getPredicateAndLeftAction_1_0(),
            $current);
    }
)(
(
		lv_prname_2_0=	'and' 
    {
        newLeafNode(lv_prname_2_0, grammarAccess.getPredicateAndAccess().getPrnameAndKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredicateAndRule());
	        }
       		setWithLastConsumed($current, "prname", lv_prname_2_0, "and");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateAndAccess().getRightPredicateNotParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePredicateNot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PredicateNot");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePredicateNot
entryRulePredicateNot returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPredicateNotRule()); }
	 iv_rulePredicateNot=rulePredicateNot 
	 { $current=$iv_rulePredicateNot.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PredicateNot
rulePredicateNot returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredicateNotAccess().getPredicatePrimaryParserRuleCall_0()); 
    }
    this_PredicatePrimary_0=rulePredicatePrimary
    { 
        $current = $this_PredicatePrimary_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPredicateNotAccess().getPredicateNotAction_1_0(),
            $current);
    }
)	otherlv_2='not' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredicateNotAccess().getNotKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateNotAccess().getT2PredicatePrimaryParserRuleCall_1_2_0()); 
	    }
		lv_t2_3_0=rulePredicatePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateNotRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_3_0, 
        		"PredicatePrimary");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePredicatePrimary
entryRulePredicatePrimary returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPredicatePrimaryRule()); }
	 iv_rulePredicatePrimary=rulePredicatePrimary 
	 { $current=$iv_rulePredicatePrimary.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PredicatePrimary
rulePredicatePrimary returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((((	RULE_LPAREN(
(
rulePredicateOr
)
)	RULE_RPAREN))=>(this_LPAREN_0=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_0, grammarAccess.getPredicatePrimaryAccess().getLPARENTerminalRuleCall_0_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicatePrimaryAccess().getTPredicateOrParserRuleCall_0_0_1_0()); 
	    }
		lv_t_1_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicatePrimaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_1_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_2=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_2, grammarAccess.getPredicatePrimaryAccess().getRPARENTerminalRuleCall_0_0_2()); 
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicatePrimaryAccess().getT2EqualityExpressionParserRuleCall_1_0()); 
	    }
		lv_t2_3_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicatePrimaryRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_3_0, 
        		"EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(((
(
		lv_ifname_0_0=	'if' 
    {
        newLeafNode(lv_ifname_0_0, grammarAccess.getExpressionAccess().getIfnameIfKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed($current, "ifname", lv_ifname_0_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getIfpredPredicateOrParserRuleCall_0_1_0()); 
	    }
		lv_ifpred_1_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"ifpred",
        		lv_ifpred_1_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getThenKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getThenexpExpressionParserRuleCall_0_3_0()); 
	    }
		lv_thenexp_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"thenexp",
        		lv_thenexp_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='else' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getElseKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getElseexpExpressionParserRuleCall_0_5_0()); 
	    }
		lv_elseexp_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"elseexp",
        		lv_elseexp_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getConditionExpressionParserRuleCall_1()); 
    }
    this_ConditionExpression_6=ruleConditionExpression
    { 
        $current = $this_ConditionExpression_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleConditionExpression
entryRuleConditionExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getConditionExpressionRule()); }
	 iv_ruleConditionExpression=ruleConditionExpression 
	 { $current=$iv_ruleConditionExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConditionExpression
ruleConditionExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConditionExpressionAccess().getInnerProdExpressionParserRuleCall_0()); 
    }
    this_InnerProdExpression_0=ruleInnerProdExpression
    { 
        $current = $this_InnerProdExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionExpressionAccess().getConditionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_BAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getConditionExpressionAccess().getOpBARTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"BAR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionExpressionAccess().getRightPredicateOrParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePredicateOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PredicateOr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleInnerProdExpression
entryRuleInnerProdExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getInnerProdExpressionRule()); }
	 iv_ruleInnerProdExpression=ruleInnerProdExpression 
	 { $current=$iv_ruleInnerProdExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InnerProdExpression
ruleInnerProdExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInnerProdExpressionAccess().getOuterProdExpressionParserRuleCall_0()); 
    }
    this_OuterProdExpression_0=ruleOuterProdExpression
    { 
        $current = $this_OuterProdExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getInnerProdExpressionAccess().getInnerProdExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_BACKSLASHSLASH
		{
			newLeafNode(lv_op_2_0, grammarAccess.getInnerProdExpressionAccess().getOpBACKSLASHSLASHTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerProdExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"BACKSLASHSLASH");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInnerProdExpressionAccess().getRightOuterProdExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleOuterProdExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInnerProdExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"OuterProdExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleOuterProdExpression
entryRuleOuterProdExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getOuterProdExpressionRule()); }
	 iv_ruleOuterProdExpression=ruleOuterProdExpression 
	 { $current=$iv_ruleOuterProdExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OuterProdExpression
ruleOuterProdExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOuterProdExpressionAccess().getHasExpressionParserRuleCall_0()); 
    }
    this_HasExpression_0=ruleHasExpression
    { 
        $current = $this_HasExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOuterProdExpressionAccess().getOuterProdExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_SLASHBACKSLASH
		{
			newLeafNode(lv_op_2_0, grammarAccess.getOuterProdExpressionAccess().getOpSLASHBACKSLASHTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOuterProdExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"SLASHBACKSLASH");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOuterProdExpressionAccess().getRightHasExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleHasExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOuterProdExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"HasExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleHasExpression
entryRuleHasExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getHasExpressionRule()); }
	 iv_ruleHasExpression=ruleHasExpression 
	 { $current=$iv_ruleHasExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HasExpression
ruleHasExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHasExpressionAccess().getCaseExpressionParserRuleCall_0()); 
    }
    this_CaseExpression_0=ruleCaseExpression
    { 
        $current = $this_CaseExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getHasExpressionAccess().getHasExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'has' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getHasExpressionAccess().getOpHasKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "has");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHasExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCaseExpression
entryRuleCaseExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCaseExpressionRule()); }
	 iv_ruleCaseExpression=ruleCaseExpression 
	 { $current=$iv_ruleCaseExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CaseExpression
ruleCaseExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCaseExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
    }
    this_EqualityExpression_0=ruleEqualityExpression
    { 
        $current = $this_EqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCaseExpressionAccess().getCaseExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'case' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getCaseExpressionAccess().getOpCaseKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "case");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	 iv_ruleEqualityExpression=ruleEqualityExpression 
	 { $current=$iv_ruleEqualityExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
    }
    this_RelationalExpression_0=ruleRelationalExpression
    { 
        $current = $this_RelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_EQUAL
		{
			newLeafNode(lv_op_2_0, grammarAccess.getEqualityExpressionAccess().getOpEQUALTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"EQUAL");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_NOTEQUAL
		{
			newLeafNode(lv_op_3_0, grammarAccess.getEqualityExpressionAccess().getOpNOTEQUALTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"NOTEQUAL");
	    }

)
)
    |(
(
		lv_op_4_0=	'^=' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getEqualityExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "^=");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getIsExpressionParserRuleCall_0()); 
    }
    this_IsExpression_0=ruleIsExpression
    { 
        $current = $this_IsExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_LT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getRelationalExpressionAccess().getOpLTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"LT");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_GT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getRelationalExpressionAccess().getOpGTTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"GT");
	    }

)
)
    |(
(
		lv_op_4_0=RULE_LE
		{
			newLeafNode(lv_op_4_0, grammarAccess.getRelationalExpressionAccess().getOpLETerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"LE");
	    }

)
)
    |(
(
		lv_op_5_0=RULE_GE
		{
			newLeafNode(lv_op_5_0, grammarAccess.getRelationalExpressionAccess().getOpGETerminalRuleCall_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"GE");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightIsExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_6_0=ruleIsExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_6_0, 
        		"IsExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIsExpression
entryRuleIsExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getIsExpressionRule()); }
	 iv_ruleIsExpression=ruleIsExpression 
	 { $current=$iv_ruleIsExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IsExpression
ruleIsExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIsExpressionAccess().getSegmentExpressionParserRuleCall_0()); 
    }
    this_SegmentExpression_0=ruleSegmentExpression
    { 
        $current = $this_SegmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIsExpressionAccess().getIsExpressionLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=	'is' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getIsExpressionAccess().getOpIsKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIsExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "is");
	    }

)
)
    |(
(
		lv_op_3_0=	'isnt' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getIsExpressionAccess().getOpIsntKeyword_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIsExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "isnt");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIsExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_4_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIsExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_4_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSegmentExpression
entryRuleSegmentExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getSegmentExpressionRule()); }
	 iv_ruleSegmentExpression=ruleSegmentExpression 
	 { $current=$iv_ruleSegmentExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SegmentExpression
ruleSegmentExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSegmentExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSegmentExpressionAccess().getSegmentExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_SEG
		{
			newLeafNode(lv_op_2_0, grammarAccess.getSegmentExpressionAccess().getOpSEGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSegmentExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"SEG");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getExquoExpressionParserRuleCall_0()); 
    }
    this_ExquoExpression_0=ruleExquoExpression
    { 
        $current = $this_ExquoExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_PLUS
		{
			newLeafNode(lv_op_2_0, grammarAccess.getAdditiveExpressionAccess().getOpPLUSTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"PLUS");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_MINUS
		{
			newLeafNode(lv_op_3_0, grammarAccess.getAdditiveExpressionAccess().getOpMINUSTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"MINUS");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExquoExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleExquoExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"ExquoExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExquoExpression
entryRuleExquoExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getExquoExpressionRule()); }
	 iv_ruleExquoExpression=ruleExquoExpression 
	 { $current=$iv_ruleExquoExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExquoExpression
ruleExquoExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExquoExpressionAccess().getDivisionExpressionParserRuleCall_0()); 
    }
    this_DivisionExpression_0=ruleDivisionExpression
    { 
        $current = $this_DivisionExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExquoExpressionAccess().getExquoExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'exquo' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getExquoExpressionAccess().getOpExquoKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExquoExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "exquo");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExquoExpressionAccess().getRightDivisionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleDivisionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExquoExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"DivisionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDivisionExpression
entryRuleDivisionExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getDivisionExpressionRule()); }
	 iv_ruleDivisionExpression=ruleDivisionExpression 
	 { $current=$iv_ruleDivisionExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DivisionExpression
ruleDivisionExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDivisionExpressionAccess().getQuoExpressionParserRuleCall_0()); 
    }
    this_QuoExpression_0=ruleQuoExpression
    { 
        $current = $this_QuoExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_SLASH
		{
			newLeafNode(lv_op_2_0, grammarAccess.getDivisionExpressionAccess().getOpSLASHTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDivisionExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"SLASH");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDivisionExpressionAccess().getRightQuoExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleQuoExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDivisionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"QuoExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQuoExpression
entryRuleQuoExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getQuoExpressionRule()); }
	 iv_ruleQuoExpression=ruleQuoExpression 
	 { $current=$iv_ruleQuoExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QuoExpression
ruleQuoExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQuoExpressionAccess().getModExpressionParserRuleCall_0()); 
    }
    this_ModExpression_0=ruleModExpression
    { 
        $current = $this_ModExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getQuoExpressionAccess().getQuoExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'quo' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getQuoExpressionAccess().getOpQuoKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuoExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "quo");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuoExpressionAccess().getRightModExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleModExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuoExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ModExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleModExpression
entryRuleModExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getModExpressionRule()); }
	 iv_ruleModExpression=ruleModExpression 
	 { $current=$iv_ruleModExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ModExpression
ruleModExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModExpressionAccess().getRemExpressionParserRuleCall_0()); 
    }
    this_RemExpression_0=ruleRemExpression
    { 
        $current = $this_RemExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getModExpressionAccess().getModExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'mod' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getModExpressionAccess().getOpModKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "mod");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModExpressionAccess().getRightRemExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleRemExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"RemExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleRemExpression
entryRuleRemExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getRemExpressionRule()); }
	 iv_ruleRemExpression=ruleRemExpression 
	 { $current=$iv_ruleRemExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RemExpression
ruleRemExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRemExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRemExpressionAccess().getRemExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'rem' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getRemExpressionAccess().getOpRemKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "rem");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRemExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExponentExpressionParserRuleCall_0()); 
    }
    this_ExponentExpression_0=ruleExponentExpression
    { 
        $current = $this_ExponentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_TIMES
		{
			newLeafNode(lv_op_2_0, grammarAccess.getMultiplicativeExpressionAccess().getOpTIMESTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"TIMES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExponentExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExponentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExponentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExponentExpression
entryRuleExponentExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getExponentExpressionRule()); }
	 iv_ruleExponentExpression=ruleExponentExpression 
	 { $current=$iv_ruleExponentExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExponentExpression
ruleExponentExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExponentExpressionAccess().getMapDefinitionParserRuleCall_0()); 
    }
    this_MapDefinition_0=ruleMapDefinition
    { 
        $current = $this_MapDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExponentExpressionAccess().getExponentExpressionLeftAction_1_0(),
            $current);
    }
)((
(
		lv_op_2_0=RULE_CARAT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getExponentExpressionAccess().getOpCARATTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExponentExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"CARAT");
	    }

)
)
    |(
(
		lv_op_3_0=RULE_POWER
		{
			newLeafNode(lv_op_3_0, grammarAccess.getExponentExpressionAccess().getOpPOWERTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExponentExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"POWER");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getExponentExpressionAccess().getRightMapDefinitionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleMapDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExponentExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"MapDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMapDefinition
entryRuleMapDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getMapDefinitionRule()); }
	 iv_ruleMapDefinition=ruleMapDefinition 
	 { $current=$iv_ruleMapDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MapDefinition
ruleMapDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMapDefinitionAccess().getPretendExpressionParserRuleCall_0()); 
    }
    this_PretendExpression_0=rulePretendExpression
    { 
        $current = $this_PretendExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMapDefinitionAccess().getMapDefinitionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_GIVES
		{
			newLeafNode(lv_op_2_0, grammarAccess.getMapDefinitionAccess().getOpGIVESTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"GIVES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMapDefinitionAccess().getRightPretendExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePretendExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapDefinitionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PretendExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePretendExpression
entryRulePretendExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getPretendExpressionRule()); }
	 iv_rulePretendExpression=rulePretendExpression 
	 { $current=$iv_rulePretendExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PretendExpression
rulePretendExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPretendExpressionAccess().getHintTypeExpressionParserRuleCall_0()); 
    }
    this_HintTypeExpression_0=ruleHintTypeExpression
    { 
        $current = $this_HintTypeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPretendExpressionAccess().getPretendExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'pretend' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getPretendExpressionAccess().getOpPretendKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPretendExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "pretend");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPretendExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPretendExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleHintTypeExpression
entryRuleHintTypeExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getHintTypeExpressionRule()); }
	 iv_ruleHintTypeExpression=ruleHintTypeExpression 
	 { $current=$iv_ruleHintTypeExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HintTypeExpression
ruleHintTypeExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHintTypeExpressionAccess().getCoerceExpressionParserRuleCall_0()); 
    }
    this_CoerceExpression_0=ruleCoerceExpression
    { 
        $current = $this_CoerceExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getHintTypeExpressionAccess().getHintTypeExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_AT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getHintTypeExpressionAccess().getOpATTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHintTypeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"AT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHintTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHintTypeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCoerceExpression
entryRuleCoerceExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCoerceExpressionRule()); }
	 iv_ruleCoerceExpression=ruleCoerceExpression 
	 { $current=$iv_ruleCoerceExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CoerceExpression
ruleCoerceExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCoerceExpressionAccess().getEltExpressionParserRuleCall_0()); 
    }
    this_EltExpression_0=ruleEltExpression
    { 
        $current = $this_EltExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCoerceExpressionAccess().getCoerceExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_COERCE
		{
			newLeafNode(lv_op_2_0, grammarAccess.getCoerceExpressionAccess().getOpCOERCETerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCoerceExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"COERCE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCoerceExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoerceExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleEltExpression
entryRuleEltExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getEltExpressionRule()); }
	 iv_ruleEltExpression=ruleEltExpression 
	 { $current=$iv_ruleEltExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EltExpression
ruleEltExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEltExpressionAccess().getExplicitTypeExpressionParserRuleCall_0()); 
    }
    this_ExplicitTypeExpression_0=ruleExplicitTypeExpression
    { 
        $current = $this_ExplicitTypeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEltExpressionAccess().getEltExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_DOT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getEltExpressionAccess().getOpDOTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEltExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"DOT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEltExpressionAccess().getRightExplicitTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExplicitTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEltExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExplicitTypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExplicitTypeExpression
entryRuleExplicitTypeExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getExplicitTypeExpressionRule()); }
	 iv_ruleExplicitTypeExpression=ruleExplicitTypeExpression 
	 { $current=$iv_ruleExplicitTypeExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExplicitTypeExpression
ruleExplicitTypeExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExplicitTypeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExplicitTypeExpressionAccess().getExplicitTypeExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_DOLAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getExplicitTypeExpressionAccess().getOpDOLARTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExplicitTypeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"DOLAR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightType_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitTypeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightType",
        		lv_rightType_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
            $current);
    }
)(
(
		lv_uop_2_0=RULE_TILDE
		{
			newLeafNode(lv_uop_2_0, grammarAccess.getUnaryExpressionAccess().getUopTILDETerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uop",
        		lv_uop_2_0, 
        		"TILDE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expr_3_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0(),
            $current);
    }
)(
(
		lv_uop_5_0=RULE_COLON
		{
			newLeafNode(lv_uop_5_0, grammarAccess.getUnaryExpressionAccess().getUopCOLONTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uop",
        		lv_uop_5_0, 
        		"COLON");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); 
	    }
		lv_expr_6_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0(),
            $current);
    }
)(
(
		lv_uop_8_0=RULE_MINUS
		{
			newLeafNode(lv_uop_8_0, grammarAccess.getUnaryExpressionAccess().getUopMINUSTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uop",
        		lv_uop_8_0, 
        		"MINUS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_3_2_0()); 
	    }
		lv_expr_9_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0(),
            $current);
    }
)(
(
		lv_uop_11_0=RULE_HASH
		{
			newLeafNode(lv_uop_11_0, grammarAccess.getUnaryExpressionAccess().getUopHASHTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uop",
        		lv_uop_11_0, 
        		"HASH");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_4_2_0()); 
	    }
		lv_expr_12_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_12_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_e2_13_0=RULE_PERCENT
		{
			newLeafNode(lv_e2_13_0, grammarAccess.getUnaryExpressionAccess().getE2PERCENTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"e2",
        		lv_e2_13_0, 
        		"PERCENT");
	    }

)
)
    |(
(
		lv_e3_14_0=	'Type' 
    {
        newLeafNode(lv_e3_14_0, grammarAccess.getUnaryExpressionAccess().getE3TypeKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_14_0, "Type");
	    }

)
)
    |((
(
		lv_e5_15_0=	'Record' 
    {
        newLeafNode(lv_e5_15_0, grammarAccess.getUnaryExpressionAccess().getE5RecordKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "e5", lv_e5_15_0, "Record");
	    }

)
)this_LPAREN_16=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_16, grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_7_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE6TypeExpressionParserRuleCall_7_2_0()); 
	    }
		lv_e6_17_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"e6",
        		lv_e6_17_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_18=RULE_COLON
    { 
    newLeafNode(this_COLON_18, grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_7_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE22TypeExpressionParserRuleCall_7_3_1_0()); 
	    }
		lv_e22_19_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e22",
        		lv_e22_19_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_20=RULE_COMMA
    { 
    newLeafNode(this_COMMA_20, grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_7_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE21TypeExpressionParserRuleCall_7_4_1_0()); 
	    }
		lv_e21_21_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e21",
        		lv_e21_21_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_22=RULE_COLON
    { 
    newLeafNode(this_COLON_22, grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_7_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE23TypeExpressionParserRuleCall_7_4_2_1_0()); 
	    }
		lv_e23_23_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e23",
        		lv_e23_23_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_24=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_24, grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_7_5()); 
    }
)
    |((
(
		lv_e9_25_0=	'Union' 
    {
        newLeafNode(lv_e9_25_0, grammarAccess.getUnaryExpressionAccess().getE9UnionKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "e9", lv_e9_25_0, "Union");
	    }

)
)this_LPAREN_26=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_26, grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_8_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE10TypeExpressionParserRuleCall_8_2_0()); 
	    }
		lv_e10_27_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"e10",
        		lv_e10_27_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_28=RULE_COLON
    { 
    newLeafNode(this_COLON_28, grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE25TypeExpressionParserRuleCall_8_3_1_0()); 
	    }
		lv_e25_29_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e25",
        		lv_e25_29_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_COMMA_30=RULE_COMMA
    { 
    newLeafNode(this_COMMA_30, grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_8_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE24TypeExpressionParserRuleCall_8_4_1_0()); 
	    }
		lv_e24_31_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e24",
        		lv_e24_31_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_32=RULE_COLON
    { 
    newLeafNode(this_COLON_32, grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_4_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE26TypeExpressionParserRuleCall_8_4_2_1_0()); 
	    }
		lv_e26_33_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e26",
        		lv_e26_33_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)*this_RPAREN_34=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_34, grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_8_5()); 
    }
)
    |((
(
		lv_e11_35_0=	'Join' 
    {
        newLeafNode(lv_e11_35_0, grammarAccess.getUnaryExpressionAccess().getE11JoinKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "e11", lv_e11_35_0, "Join");
	    }

)
)this_LPAREN_36=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_36, grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_9_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE12TypeExpressionParserRuleCall_9_2_0()); 
	    }
		lv_e12_37_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"e12",
        		lv_e12_37_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_38=RULE_COMMA
    { 
    newLeafNode(this_COMMA_38, grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_9_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getE13TypeExpressionParserRuleCall_9_3_1_0()); 
	    }
		lv_e13_39_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"e13",
        		lv_e13_39_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_40=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_40, grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_9_4()); 
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPrimaryPrefixParserRuleCall()); 
    }
    this_PrimaryPrefix_0=rulePrimaryPrefix
    { 
        $current = $this_PrimaryPrefix_0.current; 
        afterParserOrEnumRuleCall();
    }

;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePrimaryPrefix
entryRulePrimaryPrefix returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getPrimaryPrefixRule()); }
	 iv_rulePrimaryPrefix=rulePrimaryPrefix 
	 { $current=$iv_rulePrimaryPrefix.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PrimaryPrefix
rulePrimaryPrefix returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryPrefixAccess().getLiteralParserRuleCall_0()); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getPrimaryPrefixAccess().getLPARENTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryPrefixAccess().getT4ExpressionParserRuleCall_1_1_0()); 
	    }
		lv_t4_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryPrefixRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getPrimaryPrefixAccess().getRPARENTerminalRuleCall_1_2()); 
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryPrefixAccess().getT7NameOrFunctionCallParserRuleCall_2_0()); 
	    }
		lv_t7_4_0=ruleNameOrFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryPrefixRule());
	        }
       		set(
       			$current, 
       			"t7",
        		lv_t7_4_0, 
        		"NameOrFunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNameOrFunctionCall
entryRuleNameOrFunctionCall returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getNameOrFunctionCallRule()); }
	 iv_ruleNameOrFunctionCall=ruleNameOrFunctionCall 
	 { $current=$iv_ruleNameOrFunctionCall.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NameOrFunctionCall
ruleNameOrFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_fnname_0_0=RULE_ID
		{
			newLeafNode(lv_fnname_0_0, grammarAccess.getNameOrFunctionCallAccess().getFnnameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameOrFunctionCallRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fnname",
        		lv_fnname_0_0, 
        		"ID");
	    }

)
)(((
(
RULE_DOLAR

)
)=>
(
		lv_lsp_1_0=RULE_DOLAR
		{
			newLeafNode(lv_lsp_1_0, grammarAccess.getNameOrFunctionCallAccess().getLspDOLARTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameOrFunctionCallRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lsp",
        		lv_lsp_1_0, 
        		"DOLAR");
	    }

)
)	otherlv_2='Lisp' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNameOrFunctionCallAccess().getLispKeyword_1_1());
    }
)?((this_LPAREN_3=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_3, grammarAccess.getNameOrFunctionCallAccess().getLPARENTerminalRuleCall_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameOrFunctionCallAccess().getT4ExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_t4_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameOrFunctionCallRule());
	        }
       		set(
       			$current, 
       			"t4",
        		lv_t4_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getNameOrFunctionCallAccess().getCOMMATerminalRuleCall_2_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameOrFunctionCallAccess().getT5ExpressionParserRuleCall_2_0_2_1_0()); 
	    }
		lv_t5_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameOrFunctionCallRule());
	        }
       		add(
       			$current, 
       			"t5",
        		lv_t5_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_7=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_7, grammarAccess.getNameOrFunctionCallAccess().getRPARENTerminalRuleCall_2_0_3()); 
    }
)
    |((
(
rulePrimaryExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getNameOrFunctionCallAccess().getT6PrimaryExpressionParserRuleCall_2_1_0()); 
	    }
		lv_t6_8_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameOrFunctionCallRule());
	        }
       		set(
       			$current, 
       			"t6",
        		lv_t6_8_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_t2_1_0=RULE_STRING
		{
			newLeafNode(lv_t2_1_0, grammarAccess.getLiteralAccess().getT2STRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"t2",
        		lv_t2_1_0, 
        		"STRING");
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); 
    }
    this_ListLiteral_2=ruleListLiteral
    { 
        $current = $this_ListLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_3()); 
    }
    this_CharacterLiteral_3=ruleCharacterLiteral
    { 
        $current = $this_CharacterLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_4()); 
    }
    this_BooleanLiteral_4=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCharacterLiteralRule()); }
	 iv_ruleCharacterLiteral=ruleCharacterLiteral 
	 { $current=$iv_ruleCharacterLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CharacterLiteral
ruleCharacterLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(	otherlv_0='\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0());
    }
(
(
		lv_c1_1_0=RULE_ANY_OTHER
		{
			newLeafNode(lv_c1_1_0, grammarAccess.getCharacterLiteralAccess().getC1ANY_OTHERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharacterLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"c1",
        		lv_c1_1_0, 
        		"ANY_OTHER");
	    }

)
)	otherlv_2='\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_litname_0_0=	'true' 
    {
        newLeafNode(lv_litname_0_0, grammarAccess.getBooleanLiteralAccess().getLitnameTrueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "litname", lv_litname_0_0, "true");
	    }

)
)
    |(
(
		lv_litname_1_0=	'false' 
    {
        newLeafNode(lv_litname_1_0, grammarAccess.getBooleanLiteralAccess().getLitnameFalseKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "litname", lv_litname_1_0, "false");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	 iv_ruleListLiteral=ruleListLiteral 
	 { $current=$iv_ruleListLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ListLiteral
ruleListLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((
(
		lv_litname_0_0=RULE_LBRACKET
		{
			newLeafNode(lv_litname_0_0, grammarAccess.getListLiteralAccess().getLitnameLBRACKETTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"litname",
        		lv_litname_0_0, 
        		"LBRACKET");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getL2ExpressionParserRuleCall_1_0()); 
	    }
		lv_l2_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		set(
       			$current, 
       			"l2",
        		lv_l2_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getListLiteralAccess().getCOMMATerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getT3ExpressionParserRuleCall_2_1_0()); 
	    }
		lv_t3_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		add(
       			$current, 
       			"t3",
        		lv_t3_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4='for' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListLiteralAccess().getForKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getT14ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_t14_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		add(
       			$current, 
       			"t14",
        		lv_t14_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='in' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListLiteralAccess().getInKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getL5ExpressionParserRuleCall_3_3_0()); 
	    }
		lv_l5_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		add(
       			$current, 
       			"l5",
        		lv_l5_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_RBRACKET_8=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_8, grammarAccess.getListLiteralAccess().getRBRACKETTerminalRuleCall_4()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





RULE_ID : ('a'..'z'|'A'..'Z'|'_' .) ('a'..'z'|'A'..'Z'|'_' .|'0'..'9')* '!'? '?'?;

RULE_WS : (' '|'\t')+;

RULE_NL : ('\r'|'\n');

RULE_SL_COMMENT : ('--'|'++') ~(('\n'|'\r'))*;

RULE_MACROVALUE : '===>' ~(('\n'|'\r'))*;

RULE_STRING : '"' ~('"')* '"';

RULE_INT : ('0'..'9')+;

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_OANGLE : '<<';

RULE_CANGLE : '>>';

RULE_MDEF : '==>';

RULE_BAR : '|';

RULE_DOT : '.';

RULE_COERCE : '::';

RULE_COLON : ':';

RULE_COLONDASH : ':-';

RULE_AT : '@';

RULE_ATAT : '@@';

RULE_COMMA : ',';

RULE_SEMICOLON : ';';

RULE_POWER : '**';

RULE_TIMES : '*';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_LT : '<';

RULE_GT : '>';

RULE_LE : '<=';

RULE_GE : '>=';

RULE_EQUAL : '=';

RULE_NOTEQUAL : '~=';

RULE_TILDE : '~';

RULE_CARAT : '^';

RULE_SEG : '..';

RULE_HASH : '#';

RULE_AMPERSAND : '&';

RULE_DOLAR : '$';

RULE_SLASH : '/';

RULE_BACKSLASH : '\\';

RULE_SLASHSLASH : '//';

RULE_BACKSLASHBACKSLASH : '\\\\';

RULE_SLASHBACKSLASH : '/\\';

RULE_BACKSLASHSLASH : '\\/';

RULE_EXIT : '=>';

RULE_BECOMES : ':=';

RULE_DEF : '==';

RULE_ARROW : '->';

RULE_LARROW : '<-';

RULE_GIVES : '+->';

RULE_PERCENT : '%';

RULE_ELLIPSIS : '...';

RULE_ANY_OTHER : .;


