/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.euclideanspace.spad.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.euclideanspace.spad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.euclideanspace.spad.services.EditorGrammarAccess;

}

@parser::members {
 
 	private EditorGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EditorGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCategoryDef
entryRuleCategoryDef 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCategoryDefRule()); }
	 ruleCategoryDef
{ after(grammarAccess.getCategoryDefRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CategoryDef
ruleCategoryDef
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCategoryDefAccess().getGroup()); }
(rule__CategoryDef__Group__0)
{ after(grammarAccess.getCategoryDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePackageDef
entryRulePackageDef 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getPackageDefRule()); }
	 rulePackageDef
{ after(grammarAccess.getPackageDefRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PackageDef
rulePackageDef
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefAccess().getGroup()); }
(rule__PackageDef__Group__0)
{ after(grammarAccess.getPackageDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDomainDef
entryRuleDomainDef 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getDomainDefRule()); }
	 ruleDomainDef
{ after(grammarAccess.getDomainDefRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DomainDef
ruleDomainDef
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainDefAccess().getGroup()); }
(rule__DomainDef__Group__0)
{ after(grammarAccess.getDomainDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWherePart
entryRuleWherePart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getWherePartRule()); }
	 ruleWherePart
{ after(grammarAccess.getWherePartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WherePart
ruleWherePart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWherePartAccess().getGroup()); }
(rule__WherePart__Group__0)
{ after(grammarAccess.getWherePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWhereAssignments
entryRuleWhereAssignments 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getWhereAssignmentsRule()); }
	 ruleWhereAssignments
{ after(grammarAccess.getWhereAssignmentsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WhereAssignments
ruleWhereAssignments
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhereAssignmentsAccess().getAlternatives()); }
(rule__WhereAssignments__Alternatives)
{ after(grammarAccess.getWhereAssignmentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWithPart
entryRuleWithPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getWithPartRule()); }
	 ruleWithPart
{ after(grammarAccess.getWithPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WithPart
ruleWithPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithPartAccess().getGroup()); }
(rule__WithPart__Group__0)
{ after(grammarAccess.getWithPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAddPart
entryRuleAddPart 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAddPartRule()); }
	 ruleAddPart
{ after(grammarAccess.getAddPartRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AddPart
ruleAddPart
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddPartAccess().getGroup()); }
(rule__AddPart__Group__0)
{ after(grammarAccess.getAddPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAddStatements
entryRuleAddStatements 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAddStatementsRule()); }
	 ruleAddStatements
{ after(grammarAccess.getAddStatementsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AddStatements
ruleAddStatements
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddStatementsAccess().getAlternatives()); }
(rule__AddStatements__Alternatives)
{ after(grammarAccess.getAddStatementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionDefinition
ruleFunctionDefinition
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFunctionDefinitionBlock
entryRuleFunctionDefinitionBlock 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFunctionDefinitionBlockRule()); }
	 ruleFunctionDefinitionBlock
{ after(grammarAccess.getFunctionDefinitionBlockRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionDefinitionBlock
ruleFunctionDefinitionBlock
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getGroup()); }
(rule__FunctionDefinitionBlock__Group__0)
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFunctionSignature
entryRuleFunctionSignature 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getFunctionSignatureRule()); }
	 ruleFunctionSignature
{ after(grammarAccess.getFunctionSignatureRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionSignature
ruleFunctionSignature
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionSignatureAccess().getAlternatives()); }
(rule__FunctionSignature__Alternatives)
{ after(grammarAccess.getFunctionSignatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleMacroDef
entryRuleMacroDef 
:
{ before(grammarAccess.getMacroDefRule()); }
	 ruleMacroDef
{ after(grammarAccess.getMacroDefRule()); } 
	 EOF 
;

// Rule MacroDef
ruleMacroDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroDefAccess().getGroup()); }
(rule__MacroDef__Group__0)
{ after(grammarAccess.getMacroDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Import
ruleImport
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVariableDeclarationBlock
entryRuleVariableDeclarationBlock 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVariableDeclarationBlockRule()); }
	 ruleVariableDeclarationBlock
{ after(grammarAccess.getVariableDeclarationBlockRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclarationBlock
ruleVariableDeclarationBlock
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getGroup()); }
(rule__VariableDeclarationBlock__Group__0)
{ after(grammarAccess.getVariableDeclarationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVariableTyped
entryRuleVariableTyped 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getVariableTypedRule()); }
	 ruleVariableTyped
{ after(grammarAccess.getVariableTypedRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableTyped
ruleVariableTyped
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableTypedAccess().getGroup()); }
(rule__VariableTyped__Group__0)
{ after(grammarAccess.getVariableTypedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleVariableDeclarationAssign
entryRuleVariableDeclarationAssign 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getVariableDeclarationAssignRule()); }
	 ruleVariableDeclarationAssign
{ after(grammarAccess.getVariableDeclarationAssignRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclarationAssign
ruleVariableDeclarationAssign
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getAlternatives()); }
(rule__VariableDeclarationAssign__Alternatives)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}







// Entry rule entryRuleTypeExpression
entryRuleTypeExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeExpression
ruleTypeExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
(rule__TypeExpression__Alternatives)
{ after(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeParameterList
entryRuleTypeParameterList 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeParameterListRule()); }
	 ruleTypeParameterList
{ after(grammarAccess.getTypeParameterListRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeParameterList
ruleTypeParameterList
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParameterListAccess().getGroup()); }
(rule__TypeParameterList__Group__0)
{ after(grammarAccess.getTypeParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeArguments
entryRuleTypeArguments 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeArgumentsRule()); }
	 ruleTypeArguments
{ after(grammarAccess.getTypeArgumentsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeArguments
ruleTypeArguments
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeArgumentsAccess().getAlternatives()); }
(rule__TypeArguments__Alternatives)
{ after(grammarAccess.getTypeArgumentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeResult
entryRuleTypeResult 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeResultRule()); }
	 ruleTypeResult
{ after(grammarAccess.getTypeResultRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeResult
ruleTypeResult
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeResultAccess().getAlternatives()); }
(rule__TypeResult__Alternatives)
{ after(grammarAccess.getTypeResultAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypePrimaryExpression
entryRuleTypePrimaryExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypePrimaryExpressionRule()); }
	 ruleTypePrimaryExpression
{ after(grammarAccess.getTypePrimaryExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypePrimaryExpression
ruleTypePrimaryExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getAlternatives()); }
(rule__TypePrimaryExpression__Alternatives)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeNameOrFunctionCall
entryRuleTypeNameOrFunctionCall 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeNameOrFunctionCallRule()); }
	 ruleTypeNameOrFunctionCall
{ after(grammarAccess.getTypeNameOrFunctionCallRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeNameOrFunctionCall
ruleTypeNameOrFunctionCall
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup()); }
(rule__TypeNameOrFunctionCall__Group__0)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTupleDefinition
entryRuleTupleDefinition 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTupleDefinitionRule()); }
	 ruleTupleDefinition
{ after(grammarAccess.getTupleDefinitionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TupleDefinition
ruleTupleDefinition
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleDefinitionAccess().getGroup()); }
(rule__TupleDefinition__Group__0)
{ after(grammarAccess.getTupleDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeLiteral
entryRuleTypeLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeLiteralRule()); }
	 ruleTypeLiteral
{ after(grammarAccess.getTypeLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeLiteral
ruleTypeLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
(rule__TypeLiteral__Alternatives)
{ after(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStatement
entryRuleStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Statement
ruleStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBlock
entryRuleBlock 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStatementExpression
entryRuleStatementExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getStatementExpressionRule()); }
	 ruleStatementExpression
{ after(grammarAccess.getStatementExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StatementExpression
ruleStatementExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup()); }
(rule__StatementExpression__Group__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ForStatement
ruleForStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WhileStatement
ruleWhileStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DoStatement
ruleDoStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRepeatStatement
entryRuleRepeatStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getRepeatStatementRule()); }
	 ruleRepeatStatement
{ after(grammarAccess.getRepeatStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RepeatStatement
ruleRepeatStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepeatStatementAccess().getGroup()); }
(rule__RepeatStatement__Group__0)
{ after(grammarAccess.getRepeatStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIterateStatement
entryRuleIterateStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getIterateStatementRule()); }
	 ruleIterateStatement
{ after(grammarAccess.getIterateStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IterateStatement
ruleIterateStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterateStatementAccess().getStnameAssignment()); }
(rule__IterateStatement__StnameAssignment)
{ after(grammarAccess.getIterateStatementAccess().getStnameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BreakStatement
ruleBreakStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakStatementAccess().getStnameAssignment()); }
(rule__BreakStatement__StnameAssignment)
{ after(grammarAccess.getBreakStatementAccess().getStnameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ReturnStatement
ruleReturnStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IfStatement
ruleIfStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIfElseStatement
entryRuleIfElseStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getIfElseStatementRule()); }
	 ruleIfElseStatement
{ after(grammarAccess.getIfElseStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IfElseStatement
ruleIfElseStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfElseStatementAccess().getGroup()); }
(rule__IfElseStatement__Group__0)
{ after(grammarAccess.getIfElseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExpression
entryRuleExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Expression
ruleExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleConditionExpression
entryRuleConditionExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getConditionExpressionRule()); }
	 ruleConditionExpression
{ after(grammarAccess.getConditionExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConditionExpression
ruleConditionExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionExpressionAccess().getGroup()); }
(rule__ConditionExpression__Group__0)
{ after(grammarAccess.getConditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OrExpression
ruleOrExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AndExpression
ruleAndExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInnerProdExpression
entryRuleInnerProdExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getInnerProdExpressionRule()); }
	 ruleInnerProdExpression
{ after(grammarAccess.getInnerProdExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InnerProdExpression
ruleInnerProdExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getGroup()); }
(rule__InnerProdExpression__Group__0)
{ after(grammarAccess.getInnerProdExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOuterProdExpression
entryRuleOuterProdExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getOuterProdExpressionRule()); }
	 ruleOuterProdExpression
{ after(grammarAccess.getOuterProdExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OuterProdExpression
ruleOuterProdExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getGroup()); }
(rule__OuterProdExpression__Group__0)
{ after(grammarAccess.getOuterProdExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHasExpression
entryRuleHasExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getHasExpressionRule()); }
	 ruleHasExpression
{ after(grammarAccess.getHasExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HasExpression
ruleHasExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasExpressionAccess().getGroup()); }
(rule__HasExpression__Group__0)
{ after(grammarAccess.getHasExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCaseExpression
entryRuleCaseExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCaseExpressionRule()); }
	 ruleCaseExpression
{ after(grammarAccess.getCaseExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CaseExpression
ruleCaseExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseExpressionAccess().getGroup()); }
(rule__CaseExpression__Group__0)
{ after(grammarAccess.getCaseExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIsExpression
entryRuleIsExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getIsExpressionRule()); }
	 ruleIsExpression
{ after(grammarAccess.getIsExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IsExpression
ruleIsExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsExpressionAccess().getGroup()); }
(rule__IsExpression__Group__0)
{ after(grammarAccess.getIsExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSegmentExpression
entryRuleSegmentExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getSegmentExpressionRule()); }
	 ruleSegmentExpression
{ after(grammarAccess.getSegmentExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SegmentExpression
ruleSegmentExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSegmentExpressionAccess().getGroup()); }
(rule__SegmentExpression__Group__0)
{ after(grammarAccess.getSegmentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExquoExpression
entryRuleExquoExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getExquoExpressionRule()); }
	 ruleExquoExpression
{ after(grammarAccess.getExquoExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExquoExpression
ruleExquoExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExquoExpressionAccess().getGroup()); }
(rule__ExquoExpression__Group__0)
{ after(grammarAccess.getExquoExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDivisionExpression
entryRuleDivisionExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getDivisionExpressionRule()); }
	 ruleDivisionExpression
{ after(grammarAccess.getDivisionExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DivisionExpression
ruleDivisionExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivisionExpressionAccess().getGroup()); }
(rule__DivisionExpression__Group__0)
{ after(grammarAccess.getDivisionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleQuoExpression
entryRuleQuoExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getQuoExpressionRule()); }
	 ruleQuoExpression
{ after(grammarAccess.getQuoExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QuoExpression
ruleQuoExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuoExpressionAccess().getGroup()); }
(rule__QuoExpression__Group__0)
{ after(grammarAccess.getQuoExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ModExpression
ruleModExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRemExpression
entryRuleRemExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getRemExpressionRule()); }
	 ruleRemExpression
{ after(grammarAccess.getRemExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RemExpression
ruleRemExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemExpressionAccess().getGroup()); }
(rule__RemExpression__Group__0)
{ after(grammarAccess.getRemExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExponentExpression
entryRuleExponentExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getExponentExpressionRule()); }
	 ruleExponentExpression
{ after(grammarAccess.getExponentExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExponentExpression
ruleExponentExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExponentExpressionAccess().getGroup()); }
(rule__ExponentExpression__Group__0)
{ after(grammarAccess.getExponentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleMapDefinition
entryRuleMapDefinition 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getMapDefinitionRule()); }
	 ruleMapDefinition
{ after(grammarAccess.getMapDefinitionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MapDefinition
ruleMapDefinition
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapDefinitionAccess().getGroup()); }
(rule__MapDefinition__Group__0)
{ after(grammarAccess.getMapDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePretendExpression
entryRulePretendExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getPretendExpressionRule()); }
	 rulePretendExpression
{ after(grammarAccess.getPretendExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PretendExpression
rulePretendExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPretendExpressionAccess().getGroup()); }
(rule__PretendExpression__Group__0)
{ after(grammarAccess.getPretendExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHintTypeExpression
entryRuleHintTypeExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getHintTypeExpressionRule()); }
	 ruleHintTypeExpression
{ after(grammarAccess.getHintTypeExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HintTypeExpression
ruleHintTypeExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getGroup()); }
(rule__HintTypeExpression__Group__0)
{ after(grammarAccess.getHintTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCoerceExpression
entryRuleCoerceExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCoerceExpressionRule()); }
	 ruleCoerceExpression
{ after(grammarAccess.getCoerceExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CoerceExpression
ruleCoerceExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoerceExpressionAccess().getGroup()); }
(rule__CoerceExpression__Group__0)
{ after(grammarAccess.getCoerceExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEltExpression
entryRuleEltExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getEltExpressionRule()); }
	 ruleEltExpression
{ after(grammarAccess.getEltExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EltExpression
ruleEltExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEltExpressionAccess().getGroup()); }
(rule__EltExpression__Group__0)
{ after(grammarAccess.getEltExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExplicitTypeExpression
entryRuleExplicitTypeExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getExplicitTypeExpressionRule()); }
	 ruleExplicitTypeExpression
{ after(grammarAccess.getExplicitTypeExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ExplicitTypeExpression
ruleExplicitTypeExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getGroup()); }
(rule__ExplicitTypeExpression__Group__0)
{ after(grammarAccess.getExplicitTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryPrefixParserRuleCall()); }
	rulePrimaryPrefix
{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryPrefixParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePrimaryPrefix
entryRulePrimaryPrefix 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getPrimaryPrefixRule()); }
	 rulePrimaryPrefix
{ after(grammarAccess.getPrimaryPrefixRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PrimaryPrefix
rulePrimaryPrefix
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getAlternatives()); }
(rule__PrimaryPrefix__Alternatives)
{ after(grammarAccess.getPrimaryPrefixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNameOrFunctionCall
entryRuleNameOrFunctionCall 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getNameOrFunctionCallRule()); }
	 ruleNameOrFunctionCall
{ after(grammarAccess.getNameOrFunctionCallRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NameOrFunctionCall
ruleNameOrFunctionCall
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup()); }
(rule__NameOrFunctionCall__Group__0)
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Literal
ruleLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCharacterLiteral
entryRuleCharacterLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getCharacterLiteralRule()); }
	 ruleCharacterLiteral
{ after(grammarAccess.getCharacterLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CharacterLiteral
ruleCharacterLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterLiteralAccess().getGroup()); }
(rule__CharacterLiteral__Group__0)
{ after(grammarAccess.getCharacterLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
(rule__BooleanLiteral__Alternatives)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleListLiteral
entryRuleListLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ListLiteral
ruleListLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListLiteralAccess().getGroup()); }
(rule__ListLiteral__Group__0)
{ after(grammarAccess.getListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




rule__Model__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCAssignment_2_0()); }
(rule__Model__CAssignment_2_0)
{ after(grammarAccess.getModelAccess().getCAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getPAssignment_2_1()); }
(rule__Model__PAssignment_2_1)
{ after(grammarAccess.getModelAccess().getPAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDAssignment_2_2()); }
(rule__Model__DAssignment_2_2)
{ after(grammarAccess.getModelAccess().getDAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getGroup_8_0()); }
(rule__CategoryDef__Group_8_0__0)
{ after(grammarAccess.getCategoryDefAccess().getGroup_8_0()); }
)

    |(
{ before(grammarAccess.getCategoryDefAccess().getGroup_8_1()); }
(rule__CategoryDef__Group_8_1__0)
{ after(grammarAccess.getCategoryDefAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Alternatives_8_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getGroup_8_0_1_0()); }
(rule__CategoryDef__Group_8_0_1_0__0)
{ after(grammarAccess.getCategoryDefAccess().getGroup_8_0_1_0()); }
)

    |(
{ before(grammarAccess.getCategoryDefAccess().getWh5Assignment_8_0_1_1()); }
(rule__CategoryDef__Wh5Assignment_8_0_1_1)
{ after(grammarAccess.getCategoryDefAccess().getWh5Assignment_8_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Alternatives_8_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getGroup_8_1_3_0()); }
(rule__CategoryDef__Group_8_1_3_0__0)
{ after(grammarAccess.getCategoryDefAccess().getGroup_8_1_3_0()); }
)

    |(
{ before(grammarAccess.getCategoryDefAccess().getWh5Assignment_8_1_3_1()); }
(rule__CategoryDef__Wh5Assignment_8_1_3_1)
{ after(grammarAccess.getCategoryDefAccess().getWh5Assignment_8_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getWAssignment_9_0()); }
(rule__PackageDef__WAssignment_9_0)
{ after(grammarAccess.getPackageDefAccess().getWAssignment_9_0()); }
)

    |(
{ before(grammarAccess.getPackageDefAccess().getWh5Assignment_9_1()); }
(rule__PackageDef__Wh5Assignment_9_1)
{ after(grammarAccess.getPackageDefAccess().getWh5Assignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getWAssignment_9_0()); }
(rule__DomainDef__WAssignment_9_0)
{ after(grammarAccess.getDomainDefAccess().getWAssignment_9_0()); }
)

    |(
{ before(grammarAccess.getDomainDefAccess().getWh5Assignment_9_1()); }
(rule__DomainDef__Wh5Assignment_9_1)
{ after(grammarAccess.getDomainDefAccess().getWh5Assignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_4_1_0()); }
	RULE_NL
{ after(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_4_1_0()); }
)

    |(
{ before(grammarAccess.getWherePartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getWherePartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Alternatives_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_5_1_0_0()); }
	RULE_DEF
{ after(grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_5_1_0_0()); }
)

    |(
{ before(grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_5_1_0_1()); }
	RULE_MDEF
{ after(grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_5_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_6_1_0()); }
	RULE_DEF
{ after(grammarAccess.getWherePartAccess().getDEFTerminalRuleCall_6_1_0()); }
)

    |(
{ before(grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_6_1_1()); }
	RULE_MDEF
{ after(grammarAccess.getWherePartAccess().getMDEFTerminalRuleCall_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhereAssignments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereAssignmentsAccess().getVariableDeclarationParserRuleCall_0()); }
	ruleVariableDeclaration
{ after(grammarAccess.getWhereAssignmentsAccess().getVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWhereAssignmentsAccess().getMacroDefParserRuleCall_1()); }
	ruleMacroDef
{ after(grammarAccess.getWhereAssignmentsAccess().getMacroDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWhereAssignmentsAccess().getImportParserRuleCall_2()); }
	ruleImport
{ after(grammarAccess.getWhereAssignmentsAccess().getImportParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_4_1_0()); }
	RULE_NL
{ after(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_4_1_0()); }
)

    |(
{ before(grammarAccess.getWithPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getWithPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_4_1_0()); }
	RULE_NL
{ after(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_4_1_0()); }
)

    |(
{ before(grammarAccess.getAddPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getAddPartAccess().getSEMICOLONTerminalRuleCall_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getVariableDeclarationAssignParserRuleCall_0()); }
	ruleVariableDeclarationAssign
{ after(grammarAccess.getAddStatementsAccess().getVariableDeclarationAssignParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAddStatementsAccess().getFunctionDefinitionParserRuleCall_1()); }
	ruleFunctionDefinition
{ after(grammarAccess.getAddStatementsAccess().getFunctionDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAddStatementsAccess().getGroup_2()); }
(rule__AddStatements__Group_2__0)
{ after(grammarAccess.getAddStatementsAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAddStatementsAccess().getMacroDefParserRuleCall_3()); }
	ruleMacroDef
{ after(grammarAccess.getAddStatementsAccess().getMacroDefParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAddStatementsAccess().getImportParserRuleCall_4()); }
	ruleImport
{ after(grammarAccess.getAddStatementsAccess().getImportParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getNLTerminalRuleCall_2_1_0()); }
	RULE_NL
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getNLTerminalRuleCall_2_1_0()); }
)

    |(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getGroup_0()); }
(rule__FunctionSignature__Group_0__0)
{ after(grammarAccess.getFunctionSignatureAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getGroup_1()); }
(rule__FunctionSignature__Group_1__0)
{ after(grammarAccess.getFunctionSignatureAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getGroup_2()); }
(rule__FunctionSignature__Group_2__0)
{ after(grammarAccess.getFunctionSignatureAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB3Assignment_3()); }
(rule__FunctionSignature__B3Assignment_3)
{ after(grammarAccess.getFunctionSignatureAccess().getB3Assignment_3()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getGroup_4()); }
(rule__FunctionSignature__Group_4__0)
{ after(grammarAccess.getFunctionSignatureAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_0()); }
(rule__FunctionSignature__B1Assignment_2_1_0)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_1()); }
(rule__FunctionSignature__B1Assignment_2_1_1)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_1()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_2()); }
(rule__FunctionSignature__B1Assignment_2_1_2)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_2()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_3()); }
(rule__FunctionSignature__B1Assignment_2_1_3)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_3()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_4()); }
(rule__FunctionSignature__B1Assignment_2_1_4)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_4()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_5()); }
(rule__FunctionSignature__B1Assignment_2_1_5)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_5()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_6()); }
(rule__FunctionSignature__B1Assignment_2_1_6)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_6()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_7()); }
(rule__FunctionSignature__B1Assignment_2_1_7)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_7()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_8()); }
(rule__FunctionSignature__B1Assignment_2_1_8)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_8()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_9()); }
(rule__FunctionSignature__B1Assignment_2_1_9)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_9()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_10()); }
(rule__FunctionSignature__B1Assignment_2_1_10)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_10()); }
)

    |(
{ before(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_11()); }
(rule__FunctionSignature__B1Assignment_2_1_11)
{ after(grammarAccess.getFunctionSignatureAccess().getB1Assignment_2_1_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getNLTerminalRuleCall_2_1_0()); }
	RULE_NL
{ after(grammarAccess.getVariableDeclarationBlockAccess().getNLTerminalRuleCall_2_1_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getVariableDeclarationBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getV1Assignment_1_0()); }
(rule__VariableDeclaration__V1Assignment_1_0)
{ after(grammarAccess.getVariableDeclarationAccess().getV1Assignment_1_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getV2Assignment_1_1()); }
(rule__VariableDeclaration__V2Assignment_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getV2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getVarNameAssignment_0_0()); }
(rule__VariableTyped__VarNameAssignment_0_0)
{ after(grammarAccess.getVariableTypedAccess().getVarNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getVariableTypedAccess().getVarNameStAssignment_0_1()); }
(rule__VariableTyped__VarNameStAssignment_0_1)
{ after(grammarAccess.getVariableTypedAccess().getVarNameStAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0()); }
(rule__VariableDeclarationAssign__Group_0__0)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1()); }
(rule__VariableDeclarationAssign__Group_1__0)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getGroup_0()); }
(rule__TypeExpression__Group_0__0)
{ after(grammarAccess.getTypeExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeExpressionAccess().getTypePrimaryExpressionParserRuleCall_1()); }
	ruleTypePrimaryExpression
{ after(grammarAccess.getTypeExpressionAccess().getTypePrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTAssignment_0()); }
(rule__TypeArguments__TAssignment_0)
{ after(grammarAccess.getTypeArgumentsAccess().getTAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getT2Assignment_1()); }
(rule__TypeArguments__T2Assignment_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT2Assignment_1()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getT3Assignment_2()); }
(rule__TypeArguments__T3Assignment_2)
{ after(grammarAccess.getTypeArgumentsAccess().getT3Assignment_2()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_3()); }
(rule__TypeArguments__Group_3__0)
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_4()); }
(rule__TypeArguments__Group_4__0)
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_5()); }
(rule__TypeArguments__Group_5__0)
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_6()); }
(rule__TypeArguments__Group_6__0)
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTypeArgumentsAccess().getT15Assignment_7()); }
(rule__TypeArguments__T15Assignment_7)
{ after(grammarAccess.getTypeArgumentsAccess().getT15Assignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getTAssignment_0()); }
(rule__TypeResult__TAssignment_0)
{ after(grammarAccess.getTypeResultAccess().getTAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getT2Assignment_1()); }
(rule__TypeResult__T2Assignment_1)
{ after(grammarAccess.getTypeResultAccess().getT2Assignment_1()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getTynameAssignment_2()); }
(rule__TypeResult__TynameAssignment_2)
{ after(grammarAccess.getTypeResultAccess().getTynameAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getGroup_3()); }
(rule__TypeResult__Group_3__0)
{ after(grammarAccess.getTypeResultAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getGroup_4()); }
(rule__TypeResult__Group_4__0)
{ after(grammarAccess.getTypeResultAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getGroup_5()); }
(rule__TypeResult__Group_5__0)
{ after(grammarAccess.getTypeResultAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTypeResultAccess().getT15Assignment_6()); }
(rule__TypeResult__T15Assignment_6)
{ after(grammarAccess.getTypeResultAccess().getT15Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypeLiteralParserRuleCall_0()); }
	ruleTypeLiteral
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypeLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_1()); }
(rule__TypePrimaryExpression__Group_1__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_2()); }
(rule__TypePrimaryExpression__Group_2__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_3()); }
(rule__TypePrimaryExpression__Group_3__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_4()); }
(rule__TypePrimaryExpression__Group_4__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5()); }
(rule__TypePrimaryExpression__Group_5__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6()); }
(rule__TypePrimaryExpression__Group_6__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_7()); }
(rule__TypePrimaryExpression__Group_7__0)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypeNameOrFunctionCallParserRuleCall_8()); }
	ruleTypeNameOrFunctionCall
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypeNameOrFunctionCallParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTupleDefinitionParserRuleCall_9()); }
(	ruleTupleDefinition)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTupleDefinitionParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0()); }
(rule__TypeNameOrFunctionCall__Group_1_0__0)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT6Assignment_1_1()); }
(rule__TypeNameOrFunctionCall__T6Assignment_1_1)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT6Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getT1Assignment_0()); }
(rule__TypeLiteral__T1Assignment_0)
{ after(grammarAccess.getTypeLiteralAccess().getT1Assignment_0()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getT22Assignment_1()); }
(rule__TypeLiteral__T22Assignment_1)
{ after(grammarAccess.getTypeLiteralAccess().getT22Assignment_1()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getT34Assignment_2()); }
(rule__TypeLiteral__T34Assignment_2)
{ after(grammarAccess.getTypeLiteralAccess().getT34Assignment_2()); }
)

    |(
{ before(grammarAccess.getTypeLiteralAccess().getT35Assignment_3()); }
(rule__TypeLiteral__T35Assignment_3)
{ after(grammarAccess.getTypeLiteralAccess().getT35Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS1Assignment_0()); }
(rule__Statement__S1Assignment_0)
{ after(grammarAccess.getStatementAccess().getS1Assignment_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS3Assignment_1()); }
(rule__Statement__S3Assignment_1)
{ after(grammarAccess.getStatementAccess().getS3Assignment_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS4Assignment_2()); }
(rule__Statement__S4Assignment_2)
{ after(grammarAccess.getStatementAccess().getS4Assignment_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS4bAssignment_3()); }
(rule__Statement__S4bAssignment_3)
{ after(grammarAccess.getStatementAccess().getS4bAssignment_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS5Assignment_4()); }
(rule__Statement__S5Assignment_4)
{ after(grammarAccess.getStatementAccess().getS5Assignment_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS6Assignment_5()); }
(rule__Statement__S6Assignment_5)
{ after(grammarAccess.getStatementAccess().getS6Assignment_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS7Assignment_6()); }
(rule__Statement__S7Assignment_6)
{ after(grammarAccess.getStatementAccess().getS7Assignment_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS8Assignment_7()); }
(rule__Statement__S8Assignment_7)
{ after(grammarAccess.getStatementAccess().getS8Assignment_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS12Assignment_8()); }
(rule__Statement__S12Assignment_8)
{ after(grammarAccess.getStatementAccess().getS12Assignment_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS9Assignment_9()); }
(rule__Statement__S9Assignment_9)
{ after(grammarAccess.getStatementAccess().getS9Assignment_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getS10Assignment_10()); }
(rule__Statement__S10Assignment_10)
{ after(grammarAccess.getStatementAccess().getS10Assignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getNLTerminalRuleCall_2_1_0()); }
	RULE_NL
{ after(grammarAccess.getBlockAccess().getNLTerminalRuleCall_2_1_0()); }
)

    |(
{ before(grammarAccess.getBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
	RULE_SEMICOLON
{ after(grammarAccess.getBlockAccess().getSEMICOLONTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getConditionExpressionParserRuleCall_1()); }
	ruleConditionExpression
{ after(grammarAccess.getExpressionAccess().getConditionExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_0()); }
(rule__EqualityExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_1()); }
(rule__EqualityExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_2()); }
(rule__EqualityExpression__OpAssignment_1_1_2)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_0()); }
(rule__RelationalExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_1()); }
(rule__RelationalExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_2()); }
(rule__RelationalExpression__OpAssignment_1_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_3()); }
(rule__RelationalExpression__OpAssignment_1_1_3)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getOpAssignment_1_1_0()); }
(rule__IsExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getIsExpressionAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getIsExpressionAccess().getOpAssignment_1_1_1()); }
(rule__IsExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getIsExpressionAccess().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_0()); }
(rule__AdditiveExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_1()); }
(rule__AdditiveExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getOpAssignment_1_1_0()); }
(rule__ExponentExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getExponentExpressionAccess().getOpAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getExponentExpressionAccess().getOpAssignment_1_1_1()); }
(rule__ExponentExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getExponentExpressionAccess().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
(rule__UnaryExpression__Group_2__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
(rule__UnaryExpression__Group_3__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
(rule__UnaryExpression__Group_4__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_5()); }
(rule__UnaryExpression__Group_5__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getE2Assignment_6()); }
(rule__UnaryExpression__E2Assignment_6)
{ after(grammarAccess.getUnaryExpressionAccess().getE2Assignment_6()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getE3Assignment_7()); }
(rule__UnaryExpression__E3Assignment_7)
{ after(grammarAccess.getUnaryExpressionAccess().getE3Assignment_7()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_8()); }
(rule__UnaryExpression__Group_8__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_9()); }
(rule__UnaryExpression__Group_9__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_10()); }
(rule__UnaryExpression__Group_10__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryPrefixAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryPrefixAccess().getGroup_1()); }
(rule__PrimaryPrefix__Group_1__0)
{ after(grammarAccess.getPrimaryPrefixAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryPrefixAccess().getT7Assignment_2()); }
(rule__PrimaryPrefix__T7Assignment_2)
{ after(grammarAccess.getPrimaryPrefixAccess().getT7Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0()); }
(rule__NameOrFunctionCall__Group_2_0__0)
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT6Assignment_2_1()); }
(rule__NameOrFunctionCall__T6Assignment_2_1)
{ after(grammarAccess.getNameOrFunctionCallAccess().getT6Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_0()); }
(rule__Literal__ValueAssignment_0)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getT2Assignment_1()); }
(rule__Literal__T2Assignment_1)
{ after(grammarAccess.getLiteralAccess().getT2Assignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); }
	ruleListLiteral
{ after(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_3()); }
	ruleCharacterLiteral
{ after(grammarAccess.getLiteralAccess().getCharacterLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_4()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameAssignment_0()); }
(rule__BooleanLiteral__LitnameAssignment_0)
{ after(grammarAccess.getBooleanLiteralAccess().getLitnameAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameAssignment_1()); }
(rule__BooleanLiteral__LitnameAssignment_1)
{ after(grammarAccess.getBooleanLiteralAccess().getLitnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAbbrevKeyword_0()); }

	')abbrev' 

{ after(grammarAccess.getModelAccess().getAbbrevKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
{ after(grammarAccess.getModelAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_2()); }
(rule__Model__Alternatives_2)
{ after(grammarAccess.getModelAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getATTerminalRuleCall_3()); }
	RULE_AT
{ after(grammarAccess.getModelAccess().getATTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CategoryDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__0__Impl
	rule__CategoryDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getNameAssignment_0()); }
(rule__CategoryDef__NameAssignment_0)
{ after(grammarAccess.getCategoryDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__1__Impl
	rule__CategoryDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getShortnameAssignment_1()); }
(rule__CategoryDef__ShortnameAssignment_1)
{ after(grammarAccess.getCategoryDefAccess().getShortnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__2__Impl
	rule__CategoryDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getLongnameAssignment_2()); }
(rule__CategoryDef__LongnameAssignment_2)
{ after(grammarAccess.getCategoryDefAccess().getLongnameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__3__Impl
	rule__CategoryDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getLongname2Assignment_3()); }
(rule__CategoryDef__Longname2Assignment_3)
{ after(grammarAccess.getCategoryDefAccess().getLongname2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__4__Impl
	rule__CategoryDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getCpAssignment_4()); }
(rule__CategoryDef__CpAssignment_4)?
{ after(grammarAccess.getCategoryDefAccess().getCpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__5__Impl
	rule__CategoryDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getCOLONTerminalRuleCall_5()); }
	RULE_COLON
{ after(grammarAccess.getCategoryDefAccess().getCOLONTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__6__Impl
	rule__CategoryDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getCategoryKeyword_6()); }

	'Category' 

{ after(grammarAccess.getCategoryDefAccess().getCategoryKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__7__Impl
	rule__CategoryDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getDEFTerminalRuleCall_7()); }
	RULE_DEF
{ after(grammarAccess.getCategoryDefAccess().getDEFTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAlternatives_8()); }
(rule__CategoryDef__Alternatives_8)
{ after(grammarAccess.getCategoryDefAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__CategoryDef__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_0__0__Impl
	rule__CategoryDef__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getImplNameAssignment_8_0_0()); }
(rule__CategoryDef__ImplNameAssignment_8_0_0)
{ after(grammarAccess.getCategoryDefAccess().getImplNameAssignment_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAlternatives_8_0_1()); }
(rule__CategoryDef__Alternatives_8_0_1)
{ after(grammarAccess.getCategoryDefAccess().getAlternatives_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CategoryDef__Group_8_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_0_1_0__0__Impl
	rule__CategoryDef__Group_8_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWAssignment_8_0_1_0_0()); }
(rule__CategoryDef__WAssignment_8_0_1_0_0)?
{ after(grammarAccess.getCategoryDefAccess().getWAssignment_8_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAAssignment_8_0_1_0_1()); }
(rule__CategoryDef__AAssignment_8_0_1_0_1)?
{ after(grammarAccess.getCategoryDefAccess().getAAssignment_8_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CategoryDef__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__0__Impl
	rule__CategoryDef__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getLBRACETerminalRuleCall_8_1_0()); }
	RULE_LBRACE
{ after(grammarAccess.getCategoryDefAccess().getLBRACETerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__1__Impl
	rule__CategoryDef__Group_8_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getNLTerminalRuleCall_8_1_1()); }
(	RULE_NL)*
{ after(grammarAccess.getCategoryDefAccess().getNLTerminalRuleCall_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__2__Impl
	rule__CategoryDef__Group_8_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getImplNameAssignment_8_1_2()); }
(rule__CategoryDef__ImplNameAssignment_8_1_2)
{ after(grammarAccess.getCategoryDefAccess().getImplNameAssignment_8_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__3__Impl
	rule__CategoryDef__Group_8_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAlternatives_8_1_3()); }
(rule__CategoryDef__Alternatives_8_1_3)
{ after(grammarAccess.getCategoryDefAccess().getAlternatives_8_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__4__Impl
	rule__CategoryDef__Group_8_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getRBRACETerminalRuleCall_8_1_4()); }
	RULE_RBRACE
{ after(grammarAccess.getCategoryDefAccess().getRBRACETerminalRuleCall_8_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getNLTerminalRuleCall_8_1_5()); }
(	RULE_NL)*
{ after(grammarAccess.getCategoryDefAccess().getNLTerminalRuleCall_8_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CategoryDef__Group_8_1_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1_3_0__0__Impl
	rule__CategoryDef__Group_8_1_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWAssignment_8_1_3_0_0()); }
(rule__CategoryDef__WAssignment_8_1_3_0_0)?
{ after(grammarAccess.getCategoryDefAccess().getWAssignment_8_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CategoryDef__Group_8_1_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CategoryDef__Group_8_1_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Group_8_1_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAAssignment_8_1_3_0_1()); }
(rule__CategoryDef__AAssignment_8_1_3_0_1)?
{ after(grammarAccess.getCategoryDefAccess().getAAssignment_8_1_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__0__Impl
	rule__PackageDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getNameAssignment_0()); }
(rule__PackageDef__NameAssignment_0)
{ after(grammarAccess.getPackageDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__1__Impl
	rule__PackageDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getShortnameAssignment_1()); }
(rule__PackageDef__ShortnameAssignment_1)
{ after(grammarAccess.getPackageDefAccess().getShortnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__2__Impl
	rule__PackageDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getLongnameAssignment_2()); }
(rule__PackageDef__LongnameAssignment_2)
{ after(grammarAccess.getPackageDefAccess().getLongnameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__3__Impl
	rule__PackageDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getLongname2Assignment_3()); }
(rule__PackageDef__Longname2Assignment_3)
{ after(grammarAccess.getPackageDefAccess().getLongname2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__4__Impl
	rule__PackageDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getCpAssignment_4()); }
(rule__PackageDef__CpAssignment_4)?
{ after(grammarAccess.getPackageDefAccess().getCpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__5__Impl
	rule__PackageDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getCOLONTerminalRuleCall_5()); }
	RULE_COLON
{ after(grammarAccess.getPackageDefAccess().getCOLONTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__6__Impl
	rule__PackageDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getExportNameAssignment_6()); }
(rule__PackageDef__ExportNameAssignment_6)
{ after(grammarAccess.getPackageDefAccess().getExportNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__7__Impl
	rule__PackageDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getDEFTerminalRuleCall_7()); }
	RULE_DEF
{ after(grammarAccess.getPackageDefAccess().getDEFTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__8__Impl
	rule__PackageDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getImplNameAssignment_8()); }
(rule__PackageDef__ImplNameAssignment_8)
{ after(grammarAccess.getPackageDefAccess().getImplNameAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDef__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getAlternatives_9()); }
(rule__PackageDef__Alternatives_9)
{ after(grammarAccess.getPackageDefAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__DomainDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__0__Impl
	rule__DomainDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getNameAssignment_0()); }
(rule__DomainDef__NameAssignment_0)
{ after(grammarAccess.getDomainDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__1__Impl
	rule__DomainDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getShortname5Assignment_1()); }
(rule__DomainDef__Shortname5Assignment_1)
{ after(grammarAccess.getDomainDefAccess().getShortname5Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__2__Impl
	rule__DomainDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getLongname5Assignment_2()); }
(rule__DomainDef__Longname5Assignment_2)
{ after(grammarAccess.getDomainDefAccess().getLongname5Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__3__Impl
	rule__DomainDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getLongname6Assignment_3()); }
(rule__DomainDef__Longname6Assignment_3)
{ after(grammarAccess.getDomainDefAccess().getLongname6Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__4__Impl
	rule__DomainDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getCp5Assignment_4()); }
(rule__DomainDef__Cp5Assignment_4)?
{ after(grammarAccess.getDomainDefAccess().getCp5Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__5__Impl
	rule__DomainDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getCOLONTerminalRuleCall_5()); }
	RULE_COLON
{ after(grammarAccess.getDomainDefAccess().getCOLONTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__6__Impl
	rule__DomainDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getExportNameAssignment_6()); }
(rule__DomainDef__ExportNameAssignment_6)
{ after(grammarAccess.getDomainDefAccess().getExportNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__7__Impl
	rule__DomainDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getDEFTerminalRuleCall_7()); }
	RULE_DEF
{ after(grammarAccess.getDomainDefAccess().getDEFTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__8__Impl
	rule__DomainDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getImplName5Assignment_8()); }
(rule__DomainDef__ImplName5Assignment_8)
{ after(grammarAccess.getDomainDefAccess().getImplName5Assignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDef__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getAlternatives_9()); }
(rule__DomainDef__Alternatives_9)
{ after(grammarAccess.getDomainDefAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__WherePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__0__Impl
	rule__WherePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getNameAssignment_0()); }
(rule__WherePart__NameAssignment_0)
{ after(grammarAccess.getWherePartAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__1__Impl
	rule__WherePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__2__Impl
	rule__WherePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getLBRACETerminalRuleCall_2()); }
	RULE_LBRACE
{ after(grammarAccess.getWherePartAccess().getLBRACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__3__Impl
	rule__WherePart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)*
{ after(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__4__Impl
	rule__WherePart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getGroup_4()); }
(rule__WherePart__Group_4__0)*
{ after(grammarAccess.getWherePartAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__5__Impl
	rule__WherePart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getGroup_5()); }
(rule__WherePart__Group_5__0)?
{ after(grammarAccess.getWherePartAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__6__Impl
	rule__WherePart__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getGroup_6()); }
(rule__WherePart__Group_6__0)?
{ after(grammarAccess.getWherePartAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__7__Impl
	rule__WherePart__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getRBRACETerminalRuleCall_7()); }
	RULE_RBRACE
{ after(grammarAccess.getWherePartAccess().getRBRACETerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_8()); }
(	RULE_NL)
{ after(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_8()); }
)
(
{ before(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_8()); }
(	RULE_NL)*
{ after(grammarAccess.getWherePartAccess().getNLTerminalRuleCall_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__WherePart__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_4__0__Impl
	rule__WherePart__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getWhereAssigAssignment_4_0()); }
(rule__WherePart__WhereAssigAssignment_4_0)
{ after(grammarAccess.getWherePartAccess().getWhereAssigAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWherePartAccess().getAlternatives_4_1()); }
(rule__WherePart__Alternatives_4_1)
{ after(grammarAccess.getWherePartAccess().getAlternatives_4_1()); }
)
(
{ before(grammarAccess.getWherePartAccess().getAlternatives_4_1()); }
(rule__WherePart__Alternatives_4_1)*
{ after(grammarAccess.getWherePartAccess().getAlternatives_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WherePart__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_5__0__Impl
	rule__WherePart__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getLongname8Assignment_5_0()); }
(rule__WherePart__Longname8Assignment_5_0)
{ after(grammarAccess.getWherePartAccess().getLongname8Assignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_5__1__Impl
	rule__WherePart__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getGroup_5_1()); }
(rule__WherePart__Group_5_1__0)?
{ after(grammarAccess.getWherePartAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getW8Assignment_5_2()); }
(rule__WherePart__W8Assignment_5_2)
{ after(grammarAccess.getWherePartAccess().getW8Assignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WherePart__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_5_1__0__Impl
	rule__WherePart__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getAlternatives_5_1_0()); }
(rule__WherePart__Alternatives_5_1_0)
{ after(grammarAccess.getWherePartAccess().getAlternatives_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getImpAssignment_5_1_1()); }
(rule__WherePart__ImpAssignment_5_1_1)?
{ after(grammarAccess.getWherePartAccess().getImpAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WherePart__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_6__0__Impl
	rule__WherePart__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getLongname9Assignment_6_0()); }
(rule__WherePart__Longname9Assignment_6_0)
{ after(grammarAccess.getWherePartAccess().getLongname9Assignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_6__1__Impl
	rule__WherePart__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getAlternatives_6_1()); }
(rule__WherePart__Alternatives_6_1)?
{ after(grammarAccess.getWherePartAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WherePart__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WherePart__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getAddAssignment_6_2()); }
(rule__WherePart__AddAssignment_6_2)
{ after(grammarAccess.getWherePartAccess().getAddAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WithPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__0__Impl
	rule__WithPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNameAssignment_0()); }
(rule__WithPart__NameAssignment_0)
{ after(grammarAccess.getWithPartAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__1__Impl
	rule__WithPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__2__Impl
	rule__WithPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getLBRACETerminalRuleCall_2()); }
	RULE_LBRACE
{ after(grammarAccess.getWithPartAccess().getLBRACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__3__Impl
	rule__WithPart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)*
{ after(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__4__Impl
	rule__WithPart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getGroup_4()); }
(rule__WithPart__Group_4__0)*
{ after(grammarAccess.getWithPartAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__5__Impl
	rule__WithPart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getRBRACETerminalRuleCall_5()); }
	RULE_RBRACE
{ after(grammarAccess.getWithPartAccess().getRBRACETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_6()); }
(	RULE_NL)*
{ after(grammarAccess.getWithPartAccess().getNLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__WithPart__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group_4__0__Impl
	rule__WithPart__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getFundecAssignment_4_0()); }
(rule__WithPart__FundecAssignment_4_0)
{ after(grammarAccess.getWithPartAccess().getFundecAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithPart__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithPart__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWithPartAccess().getAlternatives_4_1()); }
(rule__WithPart__Alternatives_4_1)
{ after(grammarAccess.getWithPartAccess().getAlternatives_4_1()); }
)
(
{ before(grammarAccess.getWithPartAccess().getAlternatives_4_1()); }
(rule__WithPart__Alternatives_4_1)*
{ after(grammarAccess.getWithPartAccess().getAlternatives_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__0__Impl
	rule__AddPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNameAssignment_0()); }
(rule__AddPart__NameAssignment_0)
{ after(grammarAccess.getAddPartAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__1__Impl
	rule__AddPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__2__Impl
	rule__AddPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getLBRACETerminalRuleCall_2()); }
	RULE_LBRACE
{ after(grammarAccess.getAddPartAccess().getLBRACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__3__Impl
	rule__AddPart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)*
{ after(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__4__Impl
	rule__AddPart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getGroup_4()); }
(rule__AddPart__Group_4__0)*
{ after(grammarAccess.getAddPartAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__5__Impl
	rule__AddPart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getRBRACETerminalRuleCall_5()); }
	RULE_RBRACE
{ after(grammarAccess.getAddPartAccess().getRBRACETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_6()); }
(	RULE_NL)*
{ after(grammarAccess.getAddPartAccess().getNLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AddPart__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group_4__0__Impl
	rule__AddPart__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getTAssignment_4_0()); }
(rule__AddPart__TAssignment_4_0)
{ after(grammarAccess.getAddPartAccess().getTAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddPart__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddPart__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAddPartAccess().getAlternatives_4_1()); }
(rule__AddPart__Alternatives_4_1)
{ after(grammarAccess.getAddPartAccess().getAlternatives_4_1()); }
)
(
{ before(grammarAccess.getAddPartAccess().getAlternatives_4_1()); }
(rule__AddPart__Alternatives_4_1)*
{ after(grammarAccess.getAddPartAccess().getAlternatives_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddStatements__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddStatements__Group_2__0__Impl
	rule__AddStatements__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getAddStatementsAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddStatements__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddStatements__Group_2__1__Impl
	rule__AddStatements__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getT1Assignment_2_1()); }
(rule__AddStatements__T1Assignment_2_1)
{ after(grammarAccess.getAddStatementsAccess().getT1Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddStatements__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddStatements__Group_2__2__Impl
	rule__AddStatements__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getThenKeyword_2_2()); }

	'then' 

{ after(grammarAccess.getAddStatementsAccess().getThenKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddStatements__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddStatements__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getT13Assignment_2_3()); }
(rule__AddStatements__T13Assignment_2_3)
{ after(grammarAccess.getAddStatementsAccess().getT13Assignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar3Assignment_0()); }
(rule__FunctionDefinition__Par3Assignment_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getPar3Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_1()); }
(rule__FunctionDefinition__Group_1__0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getDEFTerminalRuleCall_2()); }
	RULE_DEF
{ after(grammarAccess.getFunctionDefinitionAccess().getDEFTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar5Assignment_3()); }
(rule__FunctionDefinition__Par5Assignment_3)
{ after(grammarAccess.getFunctionDefinitionAccess().getPar5Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_1__0__Impl
	rule__FunctionDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCOLONTerminalRuleCall_1_0()); }
	RULE_COLON
{ after(grammarAccess.getFunctionDefinitionAccess().getCOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar4Assignment_1_1()); }
(rule__FunctionDefinition__Par4Assignment_1_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getPar4Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinitionBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group__0__Impl
	rule__FunctionDefinitionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBrAssignment_0()); }
(rule__FunctionDefinitionBlock__FnDecBrAssignment_0)
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinitionBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group__1__Impl
	rule__FunctionDefinitionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinitionBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group__2__Impl
	rule__FunctionDefinitionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getGroup_2()); }
(rule__FunctionDefinitionBlock__Group_2__0)*
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinitionBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getRBRACETerminalRuleCall_3()); }
	RULE_RBRACE
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getRBRACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinitionBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group_2__0__Impl
	rule__FunctionDefinitionBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBkAssignment_2_0()); }
(rule__FunctionDefinitionBlock__FnDecBkAssignment_2_0)
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBkAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinitionBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinitionBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getAlternatives_2_1()); }
(rule__FunctionDefinitionBlock__Alternatives_2_1)
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getAlternatives_2_1()); }
)
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getAlternatives_2_1()); }
(rule__FunctionDefinitionBlock__Alternatives_2_1)*
{ after(grammarAccess.getFunctionDefinitionBlockAccess().getAlternatives_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionSignature__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0__0__Impl
	rule__FunctionSignature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getFnNamAssignment_0_0()); }
(rule__FunctionSignature__FnNamAssignment_0_0)
{ after(grammarAccess.getFunctionSignatureAccess().getFnNamAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0__1__Impl
	rule__FunctionSignature__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getLPARENTerminalRuleCall_0_1()); }
	RULE_LPAREN
{ after(grammarAccess.getFunctionSignatureAccess().getLPARENTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0__2__Impl
	rule__FunctionSignature__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getPar2Assignment_0_2()); }
(rule__FunctionSignature__Par2Assignment_0_2)?
{ after(grammarAccess.getFunctionSignatureAccess().getPar2Assignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0__3__Impl
	rule__FunctionSignature__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getGroup_0_3()); }
(rule__FunctionSignature__Group_0_3__0)*
{ after(grammarAccess.getFunctionSignatureAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getRPARENTerminalRuleCall_0_4()); }
	RULE_RPAREN
{ after(grammarAccess.getFunctionSignatureAccess().getRPARENTerminalRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionSignature__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0_3__0__Impl
	rule__FunctionSignature__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getCOMMATerminalRuleCall_0_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getFunctionSignatureAccess().getCOMMATerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getPar3Assignment_0_3_1()); }
(rule__FunctionSignature__Par3Assignment_0_3_1)
{ after(grammarAccess.getFunctionSignatureAccess().getPar3Assignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionSignature__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_1__0__Impl
	rule__FunctionSignature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getFnNamAssignment_1_0()); }
(rule__FunctionSignature__FnNamAssignment_1_0)
{ after(grammarAccess.getFunctionSignatureAccess().getFnNamAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getParAssignment_1_1()); }
(rule__FunctionSignature__ParAssignment_1_1)
{ after(grammarAccess.getFunctionSignatureAccess().getParAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionSignature__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_2__0__Impl
	rule__FunctionSignature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT4Assignment_2_0()); }
(rule__FunctionSignature__T4Assignment_2_0)
{ after(grammarAccess.getFunctionSignatureAccess().getT4Assignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_2__1__Impl
	rule__FunctionSignature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getAlternatives_2_1()); }
(rule__FunctionSignature__Alternatives_2_1)
{ after(grammarAccess.getFunctionSignatureAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT5Assignment_2_2()); }
(rule__FunctionSignature__T5Assignment_2_2)
{ after(grammarAccess.getFunctionSignatureAccess().getT5Assignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionSignature__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_4__0__Impl
	rule__FunctionSignature__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB2Assignment_4_0()); }
(rule__FunctionSignature__B2Assignment_4_0)
{ after(grammarAccess.getFunctionSignatureAccess().getB2Assignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSignature__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSignature__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT6Assignment_4_1()); }
(rule__FunctionSignature__T6Assignment_4_1)
{ after(grammarAccess.getFunctionSignatureAccess().getT6Assignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroDef__Group__0__Impl
	rule__MacroDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroDefAccess().getMacronameAssignment_0()); }
(rule__MacroDef__MacronameAssignment_0)
{ after(grammarAccess.getMacroDefAccess().getMacronameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroDefAccess().getMACROVALUETerminalRuleCall_1()); }
	RULE_MACROVALUE
{ after(grammarAccess.getMacroDefAccess().getMACROVALUETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getImportAccess().getImpnameAssignment_1()); }
(rule__Import__ImpnameAssignment_1)
{ after(grammarAccess.getImportAccess().getImpnameAssignment_1()); }
)
(
{ before(grammarAccess.getImportAccess().getImpnameAssignment_1()); }
(rule__Import__ImpnameAssignment_1)*
{ after(grammarAccess.getImportAccess().getImpnameAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group__0__Impl
	rule__VariableDeclarationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getVardecbrAssignment_0()); }
(rule__VariableDeclarationBlock__VardecbrAssignment_0)
{ after(grammarAccess.getVariableDeclarationBlockAccess().getVardecbrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group__1__Impl
	rule__VariableDeclarationBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getVariableDeclarationBlockAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group__2__Impl
	rule__VariableDeclarationBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getGroup_2()); }
(rule__VariableDeclarationBlock__Group_2__0)*
{ after(grammarAccess.getVariableDeclarationBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getRBRACETerminalRuleCall_3()); }
	RULE_RBRACE
{ after(grammarAccess.getVariableDeclarationBlockAccess().getRBRACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclarationBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group_2__0__Impl
	rule__VariableDeclarationBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getVardecBlkAssignment_2_0()); }
(rule__VariableDeclarationBlock__VardecBlkAssignment_2_0)
{ after(grammarAccess.getVariableDeclarationBlockAccess().getVardecBlkAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getAlternatives_2_1()); }
(rule__VariableDeclarationBlock__Alternatives_2_1)
{ after(grammarAccess.getVariableDeclarationBlockAccess().getAlternatives_2_1()); }
)
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getAlternatives_2_1()); }
(rule__VariableDeclarationBlock__Alternatives_2_1)*
{ after(grammarAccess.getVariableDeclarationBlockAccess().getAlternatives_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
(rule__VariableDeclaration__Group_0__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
(rule__VariableDeclaration__Alternatives_1)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0__0__Impl
	rule__VariableDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getVariableDeclarationAccess().getIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0__1__Impl
	rule__VariableDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getT1Assignment_0_1()); }
(rule__VariableDeclaration__T1Assignment_0_1)
{ after(grammarAccess.getVariableDeclarationAccess().getT1Assignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getThenKeyword_0_2()); }

	'then' 

{ after(grammarAccess.getVariableDeclarationAccess().getThenKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableTyped__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableTyped__Group__0__Impl
	rule__VariableTyped__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getAlternatives_0()); }
(rule__VariableTyped__Alternatives_0)
{ after(grammarAccess.getVariableTypedAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableTyped__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableTyped__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getGroup_1()); }
(rule__VariableTyped__Group_1__0)?
{ after(grammarAccess.getVariableTypedAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableTyped__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableTyped__Group_1__0__Impl
	rule__VariableTyped__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getCOLONTerminalRuleCall_1_0()); }
	RULE_COLON
{ after(grammarAccess.getVariableTypedAccess().getCOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableTyped__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableTyped__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getTypAssignment_1_1()); }
(rule__VariableTyped__TypAssignment_1_1)
{ after(grammarAccess.getVariableTypedAccess().getTypAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationAssign__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0__0__Impl
	rule__VariableDeclarationAssign__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getVarNameAssignment_0_0()); }
(rule__VariableDeclarationAssign__VarNameAssignment_0_0)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getVarNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1()); }
(rule__VariableDeclarationAssign__Group_0_1__0)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationAssign__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1__0__Impl
	rule__VariableDeclarationAssign__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_0()); }
(rule__VariableDeclarationAssign__Group_0_1_0__0)*
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1__1__Impl
	rule__VariableDeclarationAssign__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_1()); }
(rule__VariableDeclarationAssign__Group_0_1_1__0)?
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_2()); }
(rule__VariableDeclarationAssign__Group_0_1_2__0)?
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclarationAssign__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_0__0__Impl
	rule__VariableDeclarationAssign__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getCOMMATerminalRuleCall_0_1_0_0()); }
	RULE_COMMA
{ after(grammarAccess.getVariableDeclarationAssignAccess().getCOMMATerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT2Assignment_0_1_0_1()); }
(rule__VariableDeclarationAssign__T2Assignment_0_1_0_1)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getT2Assignment_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationAssign__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_1__0__Impl
	rule__VariableDeclarationAssign__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getCOLONTerminalRuleCall_0_1_1_0()); }
	RULE_COLON
{ after(grammarAccess.getVariableDeclarationAssignAccess().getCOLONTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getTypAssignment_0_1_1_1()); }
(rule__VariableDeclarationAssign__TypAssignment_0_1_1_1)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getTypAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationAssign__Group_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_2__0__Impl
	rule__VariableDeclarationAssign__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_0_1_2_0()); }
	RULE_BECOMES
{ after(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT4Assignment_0_1_2_1()); }
(rule__VariableDeclarationAssign__T4Assignment_0_1_2_1)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getT4Assignment_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationAssign__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_1__0__Impl
	rule__VariableDeclarationAssign__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1_0()); }
(rule__VariableDeclarationAssign__Group_1_0__0)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1_0()); }
)
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1_0()); }
(rule__VariableDeclarationAssign__Group_1_0__0)*
{ after(grammarAccess.getVariableDeclarationAssignAccess().getGroup_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_1__1__Impl
	rule__VariableDeclarationAssign__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_1_1()); }
	RULE_BECOMES
{ after(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT4Assignment_1_2()); }
(rule__VariableDeclarationAssign__T4Assignment_1_2)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getT4Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclarationAssign__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_1_0__0__Impl
	rule__VariableDeclarationAssign__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_1_0_0()); }
	RULE_BECOMES
{ after(grammarAccess.getVariableDeclarationAssignAccess().getBECOMESTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationAssign__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationAssign__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT2Assignment_1_0_1()); }
(rule__VariableDeclarationAssign__T2Assignment_1_0_1)
{ after(grammarAccess.getVariableDeclarationAssignAccess().getT2Assignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getGroup_0_0()); }
(rule__TypeExpression__Group_0_0__0)
{ after(grammarAccess.getTypeExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TypeExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpression__Group_0_0__0__Impl
	rule__TypeExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getT2Assignment_0_0_0()); }
(rule__TypeExpression__T2Assignment_0_0_0)
{ after(grammarAccess.getTypeExpressionAccess().getT2Assignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpression__Group_0_0__1__Impl
	rule__TypeExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getARROWTerminalRuleCall_0_0_1()); }
	RULE_ARROW
{ after(grammarAccess.getTypeExpressionAccess().getARROWTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpression__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpression__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getT3Assignment_0_0_2()); }
(rule__TypeExpression__T3Assignment_0_0_2)
{ after(grammarAccess.getTypeExpressionAccess().getT3Assignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group__0__Impl
	rule__TypeParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getTynameAssignment_0()); }
(rule__TypeParameterList__TynameAssignment_0)
{ after(grammarAccess.getTypeParameterListAccess().getTynameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group__1__Impl
	rule__TypeParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getParAssignment_1()); }
(rule__TypeParameterList__ParAssignment_1)?
{ after(grammarAccess.getTypeParameterListAccess().getParAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group__2__Impl
	rule__TypeParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getGroup_2()); }
(rule__TypeParameterList__Group_2__0)?
{ after(grammarAccess.getTypeParameterListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group__3__Impl
	rule__TypeParameterList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getGroup_3()); }
(rule__TypeParameterList__Group_3__0)*
{ after(grammarAccess.getTypeParameterListAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getRPARENTerminalRuleCall_4()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeParameterListAccess().getRPARENTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_2__0__Impl
	rule__TypeParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getCOLONTerminalRuleCall_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeParameterListAccess().getCOLONTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar22Assignment_2_1()); }
(rule__TypeParameterList__Par22Assignment_2_1)
{ after(grammarAccess.getTypeParameterListAccess().getPar22Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameterList__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_3__0__Impl
	rule__TypeParameterList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getCOMMATerminalRuleCall_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeParameterListAccess().getCOMMATerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_3__1__Impl
	rule__TypeParameterList__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar2Assignment_3_1()); }
(rule__TypeParameterList__Par2Assignment_3_1)
{ after(grammarAccess.getTypeParameterListAccess().getPar2Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getGroup_3_2()); }
(rule__TypeParameterList__Group_3_2__0)?
{ after(grammarAccess.getTypeParameterListAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeParameterList__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_3_2__0__Impl
	rule__TypeParameterList__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getCOLONTerminalRuleCall_3_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeParameterListAccess().getCOLONTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameterList__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameterList__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar22Assignment_3_2_1()); }
(rule__TypeParameterList__Par22Assignment_3_2_1)
{ after(grammarAccess.getTypeParameterListAccess().getPar22Assignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3__0__Impl
	rule__TypeArguments__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getB1Assignment_3_0()); }
(rule__TypeArguments__B1Assignment_3_0)
{ after(grammarAccess.getTypeArgumentsAccess().getB1Assignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3__1__Impl
	rule__TypeArguments__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT4Assignment_3_1()); }
(rule__TypeArguments__T4Assignment_3_1)?
{ after(grammarAccess.getTypeArgumentsAccess().getT4Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3__2__Impl
	rule__TypeArguments__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_3_2()); }
(rule__TypeArguments__Group_3_2__0)*
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_3_3()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeArguments__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3_2__0__Impl
	rule__TypeArguments__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_3_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT16Assignment_3_2_1()); }
(rule__TypeArguments__T16Assignment_3_2_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT16Assignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__0__Impl
	rule__TypeArguments__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT5Assignment_4_0()); }
(rule__TypeArguments__T5Assignment_4_0)
{ after(grammarAccess.getTypeArgumentsAccess().getT5Assignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__1__Impl
	rule__TypeArguments__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_4_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__2__Impl
	rule__TypeArguments__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT6Assignment_4_2()); }
(rule__TypeArguments__T6Assignment_4_2)
{ after(grammarAccess.getTypeArgumentsAccess().getT6Assignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__3__Impl
	rule__TypeArguments__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_4_3()); }
(rule__TypeArguments__Group_4_3__0)?
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__4__Impl
	rule__TypeArguments__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_4_4()); }
(rule__TypeArguments__Group_4_4__0)*
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_4_5()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeArguments__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_3__0__Impl
	rule__TypeArguments__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_3_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT22Assignment_4_3_1()); }
(rule__TypeArguments__T22Assignment_4_3_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT22Assignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_4__0__Impl
	rule__TypeArguments__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_4_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_4__1__Impl
	rule__TypeArguments__Group_4_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT21Assignment_4_4_1()); }
(rule__TypeArguments__T21Assignment_4_4_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT21Assignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_4_4_2()); }
(rule__TypeArguments__Group_4_4_2__0)?
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_4_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeArguments__Group_4_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_4_2__0__Impl
	rule__TypeArguments__Group_4_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_4_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_4_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_4_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_4_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT23Assignment_4_4_2_1()); }
(rule__TypeArguments__T23Assignment_4_4_2_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT23Assignment_4_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__0__Impl
	rule__TypeArguments__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT9Assignment_5_0()); }
(rule__TypeArguments__T9Assignment_5_0)
{ after(grammarAccess.getTypeArgumentsAccess().getT9Assignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__1__Impl
	rule__TypeArguments__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_5_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__2__Impl
	rule__TypeArguments__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT10Assignment_5_2()); }
(rule__TypeArguments__T10Assignment_5_2)
{ after(grammarAccess.getTypeArgumentsAccess().getT10Assignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__3__Impl
	rule__TypeArguments__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_5_3()); }
(rule__TypeArguments__Group_5_3__0)?
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__4__Impl
	rule__TypeArguments__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_5_4()); }
(rule__TypeArguments__Group_5_4__0)*
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_5_5()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeArguments__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_3__0__Impl
	rule__TypeArguments__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_3_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT25Assignment_5_3_1()); }
(rule__TypeArguments__T25Assignment_5_3_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT25Assignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_5_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_4__0__Impl
	rule__TypeArguments__Group_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_5_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_4__1__Impl
	rule__TypeArguments__Group_5_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT24Assignment_5_4_1()); }
(rule__TypeArguments__T24Assignment_5_4_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT24Assignment_5_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_5_4_2()); }
(rule__TypeArguments__Group_5_4_2__0)?
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_5_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeArguments__Group_5_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_4_2__0__Impl
	rule__TypeArguments__Group_5_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeArgumentsAccess().getCOLONTerminalRuleCall_5_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_5_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_5_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_5_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT26Assignment_5_4_2_1()); }
(rule__TypeArguments__T26Assignment_5_4_2_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT26Assignment_5_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6__0__Impl
	rule__TypeArguments__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT11Assignment_6_0()); }
(rule__TypeArguments__T11Assignment_6_0)
{ after(grammarAccess.getTypeArgumentsAccess().getT11Assignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6__1__Impl
	rule__TypeArguments__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_6_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getLPARENTerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6__2__Impl
	rule__TypeArguments__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT12Assignment_6_2()); }
(rule__TypeArguments__T12Assignment_6_2)
{ after(grammarAccess.getTypeArgumentsAccess().getT12Assignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6__3__Impl
	rule__TypeArguments__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_6_3()); }
(rule__TypeArguments__Group_6_3__0)*
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_6_4()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeArgumentsAccess().getRPARENTerminalRuleCall_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeArguments__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6_3__0__Impl
	rule__TypeArguments__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_6_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeArgumentsAccess().getCOMMATerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT13Assignment_6_3_1()); }
(rule__TypeArguments__T13Assignment_6_3_1)
{ after(grammarAccess.getTypeArgumentsAccess().getT13Assignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeResult__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__0__Impl
	rule__TypeResult__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameAssignment_3_0()); }
(rule__TypeResult__NameAssignment_3_0)
{ after(grammarAccess.getTypeResultAccess().getNameAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__1__Impl
	rule__TypeResult__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_3_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__2__Impl
	rule__TypeResult__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT7Assignment_3_2()); }
(rule__TypeResult__T7Assignment_3_2)
{ after(grammarAccess.getTypeResultAccess().getT7Assignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__3__Impl
	rule__TypeResult__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_3_3()); }
(rule__TypeResult__Group_3_3__0)?
{ after(grammarAccess.getTypeResultAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__4__Impl
	rule__TypeResult__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_3_4()); }
(rule__TypeResult__Group_3_4__0)*
{ after(grammarAccess.getTypeResultAccess().getGroup_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_3_5()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeResult__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_3__0__Impl
	rule__TypeResult__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_3_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT8Assignment_3_3_1()); }
(rule__TypeResult__T8Assignment_3_3_1)
{ after(grammarAccess.getTypeResultAccess().getT8Assignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeResult__Group_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_4__0__Impl
	rule__TypeResult__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_3_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_4__1__Impl
	rule__TypeResult__Group_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT21Assignment_3_4_1()); }
(rule__TypeResult__T21Assignment_3_4_1)
{ after(grammarAccess.getTypeResultAccess().getT21Assignment_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_3_4_2()); }
(rule__TypeResult__Group_3_4_2__0)?
{ after(grammarAccess.getTypeResultAccess().getGroup_3_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeResult__Group_3_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_4_2__0__Impl
	rule__TypeResult__Group_3_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_3_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_3_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_3_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_3_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT23Assignment_3_4_2_1()); }
(rule__TypeResult__T23Assignment_3_4_2_1)
{ after(grammarAccess.getTypeResultAccess().getT23Assignment_3_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeResult__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__0__Impl
	rule__TypeResult__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameAssignment_4_0()); }
(rule__TypeResult__NameAssignment_4_0)
{ after(grammarAccess.getTypeResultAccess().getNameAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__1__Impl
	rule__TypeResult__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_4_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__2__Impl
	rule__TypeResult__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT10Assignment_4_2()); }
(rule__TypeResult__T10Assignment_4_2)
{ after(grammarAccess.getTypeResultAccess().getT10Assignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__3__Impl
	rule__TypeResult__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_4_3()); }
(rule__TypeResult__Group_4_3__0)?
{ after(grammarAccess.getTypeResultAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__4__Impl
	rule__TypeResult__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_4_4()); }
(rule__TypeResult__Group_4_4__0)*
{ after(grammarAccess.getTypeResultAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_4_5()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeResult__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_3__0__Impl
	rule__TypeResult__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_3_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT11Assignment_4_3_1()); }
(rule__TypeResult__T11Assignment_4_3_1)
{ after(grammarAccess.getTypeResultAccess().getT11Assignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeResult__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_4__0__Impl
	rule__TypeResult__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_4_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_4__1__Impl
	rule__TypeResult__Group_4_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT24Assignment_4_4_1()); }
(rule__TypeResult__T24Assignment_4_4_1)
{ after(grammarAccess.getTypeResultAccess().getT24Assignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_4_4_2()); }
(rule__TypeResult__Group_4_4_2__0)?
{ after(grammarAccess.getTypeResultAccess().getGroup_4_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeResult__Group_4_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_4_2__0__Impl
	rule__TypeResult__Group_4_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypeResultAccess().getCOLONTerminalRuleCall_4_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_4_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_4_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_4_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT26Assignment_4_4_2_1()); }
(rule__TypeResult__T26Assignment_4_4_2_1)
{ after(grammarAccess.getTypeResultAccess().getT26Assignment_4_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeResult__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5__0__Impl
	rule__TypeResult__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameAssignment_5_0()); }
(rule__TypeResult__NameAssignment_5_0)
{ after(grammarAccess.getTypeResultAccess().getNameAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5__1__Impl
	rule__TypeResult__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_5_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeResultAccess().getLPARENTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5__2__Impl
	rule__TypeResult__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT12Assignment_5_2()); }
(rule__TypeResult__T12Assignment_5_2)
{ after(grammarAccess.getTypeResultAccess().getT12Assignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5__3__Impl
	rule__TypeResult__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getGroup_5_3()); }
(rule__TypeResult__Group_5_3__0)*
{ after(grammarAccess.getTypeResultAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_5_4()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeResultAccess().getRPARENTerminalRuleCall_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeResult__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5_3__0__Impl
	rule__TypeResult__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_5_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeResultAccess().getCOMMATerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeResult__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeResult__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT13Assignment_5_3_1()); }
(rule__TypeResult__T13Assignment_5_3_1)
{ after(grammarAccess.getTypeResultAccess().getT13Assignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_1__0__Impl
	rule__TypePrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT32Assignment_1_1()); }
(rule__TypePrimaryExpression__T32Assignment_1_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT32Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_2__0__Impl
	rule__TypePrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_2_1()); }
(rule__TypePrimaryExpression__TynameAssignment_2_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_3__0__Impl
	rule__TypePrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_3_1()); }
(rule__TypePrimaryExpression__TynameAssignment_3_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_4__0__Impl
	rule__TypePrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_4__1__Impl
	rule__TypePrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_4_1()); }
	RULE_LPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_4__2__Impl
	rule__TypePrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT5Assignment_4_2()); }
(rule__TypePrimaryExpression__T5Assignment_4_2)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT5Assignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_4_3()); }
	RULE_RPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypePrimaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__0__Impl
	rule__TypePrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__1__Impl
	rule__TypePrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_5_1()); }
(rule__TypePrimaryExpression__TynameAssignment_5_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__2__Impl
	rule__TypePrimaryExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_5_2()); }
	RULE_LPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__3__Impl
	rule__TypePrimaryExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT7Assignment_5_3()); }
(rule__TypePrimaryExpression__T7Assignment_5_3)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT7Assignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__4__Impl
	rule__TypePrimaryExpression__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_4()); }
(rule__TypePrimaryExpression__Group_5_4__0)?
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__5__Impl
	rule__TypePrimaryExpression__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_5()); }
(rule__TypePrimaryExpression__Group_5_5__0)*
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_5_6()); }
	RULE_RPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypePrimaryExpression__Group_5_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_4__0__Impl
	rule__TypePrimaryExpression__Group_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_4_0()); }
	RULE_COLON
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT8Assignment_5_4_1()); }
(rule__TypePrimaryExpression__T8Assignment_5_4_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT8Assignment_5_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_5_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_5__0__Impl
	rule__TypePrimaryExpression__Group_5_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_5_5_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_5__1__Impl
	rule__TypePrimaryExpression__Group_5_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT21Assignment_5_5_1()); }
(rule__TypePrimaryExpression__T21Assignment_5_5_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT21Assignment_5_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_5_2()); }
(rule__TypePrimaryExpression__Group_5_5_2__0)?
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_5_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypePrimaryExpression__Group_5_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_5_2__0__Impl
	rule__TypePrimaryExpression__Group_5_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_5_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_5_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_5_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_5_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_5_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT23Assignment_5_5_2_1()); }
(rule__TypePrimaryExpression__T23Assignment_5_5_2_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT23Assignment_5_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__0__Impl
	rule__TypePrimaryExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__1__Impl
	rule__TypePrimaryExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_6_1()); }
(rule__TypePrimaryExpression__TynameAssignment_6_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__2__Impl
	rule__TypePrimaryExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_6_2()); }
	RULE_LPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__3__Impl
	rule__TypePrimaryExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT10Assignment_6_3()); }
(rule__TypePrimaryExpression__T10Assignment_6_3)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT10Assignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__4__Impl
	rule__TypePrimaryExpression__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_4()); }
(rule__TypePrimaryExpression__Group_6_4__0)?
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__5__Impl
	rule__TypePrimaryExpression__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_5()); }
(rule__TypePrimaryExpression__Group_6_5__0)*
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_6_6()); }
	RULE_RPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypePrimaryExpression__Group_6_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_4__0__Impl
	rule__TypePrimaryExpression__Group_6_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_4_0()); }
	RULE_COLON
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT11Assignment_6_4_1()); }
(rule__TypePrimaryExpression__T11Assignment_6_4_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT11Assignment_6_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_6_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_5__0__Impl
	rule__TypePrimaryExpression__Group_6_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_6_5_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_5__1__Impl
	rule__TypePrimaryExpression__Group_6_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT24Assignment_6_5_1()); }
(rule__TypePrimaryExpression__T24Assignment_6_5_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT24Assignment_6_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_5_2()); }
(rule__TypePrimaryExpression__Group_6_5_2__0)?
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_6_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypePrimaryExpression__Group_6_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_5_2__0__Impl
	rule__TypePrimaryExpression__Group_6_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_5_2_0()); }
	RULE_COLON
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOLONTerminalRuleCall_6_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_6_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_6_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_6_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT26Assignment_6_5_2_1()); }
(rule__TypePrimaryExpression__T26Assignment_6_5_2_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT26Assignment_6_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePrimaryExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__0__Impl
	rule__TypePrimaryExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTypePrimaryExpressionAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__1__Impl
	rule__TypePrimaryExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_7_1()); }
(rule__TypePrimaryExpression__TynameAssignment_7_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__2__Impl
	rule__TypePrimaryExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_7_2()); }
	RULE_LPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getLPARENTerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__3__Impl
	rule__TypePrimaryExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT13Assignment_7_3()); }
(rule__TypePrimaryExpression__T13Assignment_7_3)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT13Assignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__4__Impl
	rule__TypePrimaryExpression__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getGroup_7_4()); }
(rule__TypePrimaryExpression__Group_7_4__0)*
{ after(grammarAccess.getTypePrimaryExpressionAccess().getGroup_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_7_5()); }
	RULE_RPAREN
{ after(grammarAccess.getTypePrimaryExpressionAccess().getRPARENTerminalRuleCall_7_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypePrimaryExpression__Group_7_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7_4__0__Impl
	rule__TypePrimaryExpression__Group_7_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_7_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypePrimaryExpressionAccess().getCOMMATerminalRuleCall_7_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrimaryExpression__Group_7_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePrimaryExpression__Group_7_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__Group_7_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT14Assignment_7_4_1()); }
(rule__TypePrimaryExpression__T14Assignment_7_4_1)
{ after(grammarAccess.getTypePrimaryExpressionAccess().getT14Assignment_7_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeNameOrFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group__0__Impl
	rule__TypeNameOrFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getTfnnameAssignment_0()); }
(rule__TypeNameOrFunctionCall__TfnnameAssignment_0)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getTfnnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getAlternatives_1()); }
(rule__TypeNameOrFunctionCall__Alternatives_1)?
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeNameOrFunctionCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0__0__Impl
	rule__TypeNameOrFunctionCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_0()); }
(rule__TypeNameOrFunctionCall__Group_1_0_0__0)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_1()); }
(rule__TypeNameOrFunctionCall__Group_1_0_1__0)*
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeNameOrFunctionCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0__0__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getLPARENTerminalRuleCall_1_0_0_0()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getLPARENTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0__1__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT4Assignment_1_0_0_1()); }
(rule__TypeNameOrFunctionCall__T4Assignment_1_0_0_1)?
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT4Assignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0__2__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_0_2()); }
(rule__TypeNameOrFunctionCall__Group_1_0_0_2__0)*
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getRPARENTerminalRuleCall_1_0_0_3()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getRPARENTerminalRuleCall_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeNameOrFunctionCall__Group_1_0_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0_2__0__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getCOMMATerminalRuleCall_1_0_0_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getCOMMATerminalRuleCall_1_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT25Assignment_1_0_0_2_1()); }
(rule__TypeNameOrFunctionCall__T25Assignment_1_0_0_2_1)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT25Assignment_1_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeNameOrFunctionCall__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1__0__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getLPARENTerminalRuleCall_1_0_1_0()); }
	RULE_LPAREN
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getLPARENTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1__1__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT44Assignment_1_0_1_1()); }
(rule__TypeNameOrFunctionCall__T44Assignment_1_0_1_1)?
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT44Assignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1__2__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_1_2()); }
(rule__TypeNameOrFunctionCall__Group_1_0_1_2__0)*
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getGroup_1_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getRPARENTerminalRuleCall_1_0_1_3()); }
	RULE_RPAREN
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getRPARENTerminalRuleCall_1_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeNameOrFunctionCall__Group_1_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1_2__0__Impl
	rule__TypeNameOrFunctionCall__Group_1_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getCOMMATerminalRuleCall_1_0_1_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getCOMMATerminalRuleCall_1_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameOrFunctionCall__Group_1_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNameOrFunctionCall__Group_1_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__Group_1_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT45Assignment_1_0_1_2_1()); }
(rule__TypeNameOrFunctionCall__T45Assignment_1_0_1_2_1)
{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT45Assignment_1_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group__0__Impl
	rule__TupleDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getLPARENTerminalRuleCall_0()); }
	RULE_LPAREN
{ after(grammarAccess.getTupleDefinitionAccess().getLPARENTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group__1__Impl
	rule__TupleDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getT4Assignment_1()); }
(rule__TupleDefinition__T4Assignment_1)
{ after(grammarAccess.getTupleDefinitionAccess().getT4Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group__2__Impl
	rule__TupleDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getGroup_2()); }
(rule__TupleDefinition__Group_2__0)*
{ after(grammarAccess.getTupleDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
{ after(grammarAccess.getTupleDefinitionAccess().getRPARENTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TupleDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group_2__0__Impl
	rule__TupleDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getTupleDefinitionAccess().getCOMMATerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getT25Assignment_2_1()); }
(rule__TupleDefinition__T25Assignment_2_1)
{ after(grammarAccess.getTupleDefinitionAccess().getT25Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStnameAssignment_0()); }
(rule__Block__StnameAssignment_0)
{ after(grammarAccess.getBlockAccess().getStnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)*
{ after(grammarAccess.getBlockAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_2()); }
(rule__Block__Group_2__0)*
{ after(grammarAccess.getBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRBRACETerminalRuleCall_3()); }
	RULE_RBRACE
{ after(grammarAccess.getBlockAccess().getRBRACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Block__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2__0__Impl
	rule__Block__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatemBlAssignment_2_0()); }
(rule__Block__StatemBlAssignment_2_0)
{ after(grammarAccess.getBlockAccess().getStatemBlAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBlockAccess().getAlternatives_2_1()); }
(rule__Block__Alternatives_2_1)
{ after(grammarAccess.getBlockAccess().getAlternatives_2_1()); }
)
(
{ before(grammarAccess.getBlockAccess().getAlternatives_2_1()); }
(rule__Block__Alternatives_2_1)*
{ after(grammarAccess.getBlockAccess().getAlternatives_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group__0__Impl
	rule__StatementExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getTAssignment_0()); }
(rule__StatementExpression__TAssignment_0)
{ after(grammarAccess.getStatementExpressionAccess().getTAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group__1__Impl
	rule__StatementExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_1()); }
(rule__StatementExpression__Group_1__0)?
{ after(grammarAccess.getStatementExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group__2__Impl
	rule__StatementExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_2()); }
(rule__StatementExpression__Group_2__0)?
{ after(grammarAccess.getStatementExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group__3__Impl
	rule__StatementExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_3()); }
(rule__StatementExpression__Group_3__0)?
{ after(grammarAccess.getStatementExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4()); }
(rule__StatementExpression__Group_4__0)?
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StatementExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__0__Impl
	rule__StatementExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getCOLONTerminalRuleCall_1_0()); }
	RULE_COLON
{ after(grammarAccess.getStatementExpressionAccess().getCOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT2Assignment_1_1()); }
(rule__StatementExpression__T2Assignment_1_1)
{ after(grammarAccess.getStatementExpressionAccess().getT2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__0__Impl
	rule__StatementExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_2_0()); }
	RULE_BECOMES
{ after(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__1__Impl
	rule__StatementExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT3Assignment_2_1()); }
(rule__StatementExpression__T3Assignment_2_1)
{ after(grammarAccess.getStatementExpressionAccess().getT3Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_2_2()); }
(rule__StatementExpression__Group_2_2__0)*
{ after(grammarAccess.getStatementExpressionAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementExpression__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2_2__0__Impl
	rule__StatementExpression__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_2_2_0()); }
	RULE_BECOMES
{ after(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT33Assignment_2_2_1()); }
(rule__StatementExpression__T33Assignment_2_2_1)
{ after(grammarAccess.getStatementExpressionAccess().getT33Assignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_3__0__Impl
	rule__StatementExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_3_0()); }
	RULE_BECOMES
{ after(grammarAccess.getStatementExpressionAccess().getBECOMESTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT5Assignment_3_1()); }
(rule__StatementExpression__T5Assignment_3_1)
{ after(grammarAccess.getStatementExpressionAccess().getT5Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4__0__Impl
	rule__StatementExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getEXITTerminalRuleCall_4_0()); }
	RULE_EXIT
{ after(grammarAccess.getStatementExpressionAccess().getEXITTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT4Assignment_4_1()); }
(rule__StatementExpression__T4Assignment_4_1)
{ after(grammarAccess.getStatementExpressionAccess().getT4Assignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getGroup_1()); }
(rule__ForStatement__Group_1__0)
{ after(grammarAccess.getForStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRepeatKeyword_2()); }

	'repeat' 

{ after(grammarAccess.getForStatementAccess().getRepeatKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)?
{ after(grammarAccess.getForStatementAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getS1Assignment_4()); }
(rule__ForStatement__S1Assignment_4)
{ after(grammarAccess.getForStatementAccess().getS1Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__0__Impl
	rule__ForStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStnameAssignment_1_0()); }
(rule__ForStatement__StnameAssignment_1_0)
{ after(grammarAccess.getForStatementAccess().getStnameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__1__Impl
	rule__ForStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInKeyword_1_1()); }

	'in' 

{ after(grammarAccess.getForStatementAccess().getInKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getT1Assignment_1_2()); }
(rule__ForStatement__T1Assignment_1_2)
{ after(grammarAccess.getForStatementAccess().getT1Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStnameAssignment_0()); }
(rule__WhileStatement__StnameAssignment_0)
{ after(grammarAccess.getWhileStatementAccess().getStnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getT2Assignment_1()); }
(rule__WhileStatement__T2Assignment_1)
{ after(grammarAccess.getWhileStatementAccess().getT2Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRepeatKeyword_2()); }

	'repeat' 

{ after(grammarAccess.getWhileStatementAccess().getRepeatKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)?
{ after(grammarAccess.getWhileStatementAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getS1Assignment_4()); }
(rule__WhileStatement__S1Assignment_4)
{ after(grammarAccess.getWhileStatementAccess().getS1Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStnameAssignment_0()); }
(rule__DoStatement__StnameAssignment_0)
{ after(grammarAccess.getDoStatementAccess().getStnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getS1Assignment_1()); }
(rule__DoStatement__S1Assignment_1)
{ after(grammarAccess.getDoStatementAccess().getS1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)?
{ after(grammarAccess.getDoStatementAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getT2Assignment_4()); }
(rule__DoStatement__T2Assignment_4)
{ after(grammarAccess.getDoStatementAccess().getT2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RepeatStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepeatStatement__Group__0__Impl
	rule__RepeatStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatStatementAccess().getStnameAssignment_0()); }
(rule__RepeatStatement__StnameAssignment_0)
{ after(grammarAccess.getRepeatStatementAccess().getStnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepeatStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatStatementAccess().getS1Assignment_1()); }
(rule__RepeatStatement__S1Assignment_1)
{ after(grammarAccess.getRepeatStatementAccess().getS1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getStnameAssignment_0()); }
(rule__ReturnStatement__StnameAssignment_0)
{ after(grammarAccess.getReturnStatementAccess().getStnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getT2Assignment_1()); }
(rule__ReturnStatement__T2Assignment_1)
{ after(grammarAccess.getReturnStatementAccess().getT2Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getT2Assignment_1()); }
(rule__IfStatement__T2Assignment_1)
{ after(grammarAccess.getIfStatementAccess().getT2Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)?
{ after(grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getS1Assignment_4()); }
(rule__IfStatement__S1Assignment_4)
{ after(grammarAccess.getIfStatementAccess().getS1Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
	rule__IfStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_5_1()); }
(	RULE_NL)?
{ after(grammarAccess.getIfStatementAccess().getNLTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getS2Assignment_5_2()); }
(rule__IfStatement__S2Assignment_5_2)
{ after(grammarAccess.getIfStatementAccess().getS2Assignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfElseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseStatement__Group__0__Impl
	rule__IfElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseStatementAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getIfElseStatementAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseStatement__Group__1__Impl
	rule__IfElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseStatementAccess().getNLTerminalRuleCall_1()); }
(	RULE_NL)?
{ after(grammarAccess.getIfElseStatementAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseStatementAccess().getS2Assignment_2()); }
(rule__IfElseStatement__S2Assignment_2)
{ after(grammarAccess.getIfElseStatementAccess().getS2Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getIfnameAssignment_0_0()); }
(rule__Expression__IfnameAssignment_0_0)
{ after(grammarAccess.getExpressionAccess().getIfnameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getIfpredAssignment_0_1()); }
(rule__Expression__IfpredAssignment_0_1)
{ after(grammarAccess.getExpressionAccess().getIfpredAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__2__Impl
	rule__Expression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThenKeyword_0_2()); }

	'then' 

{ after(grammarAccess.getExpressionAccess().getThenKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__3__Impl
	rule__Expression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThenexpAssignment_0_3()); }
(rule__Expression__ThenexpAssignment_0_3)
{ after(grammarAccess.getExpressionAccess().getThenexpAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__4__Impl
	rule__Expression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getElseKeyword_0_4()); }

	'else' 

{ after(grammarAccess.getExpressionAccess().getElseKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getElseexpAssignment_0_5()); }
(rule__Expression__ElseexpAssignment_0_5)
{ after(grammarAccess.getExpressionAccess().getElseexpAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group__0__Impl
	rule__ConditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
{ after(grammarAccess.getConditionExpressionAccess().getOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getGroup_1()); }
(rule__ConditionExpression__Group_1__0)*
{ after(grammarAccess.getConditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__0__Impl
	rule__ConditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getConditionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionExpressionAccess().getConditionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__1__Impl
	rule__ConditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getOpAssignment_1_1()); }
(rule__ConditionExpression__OpAssignment_1_1)
{ after(grammarAccess.getConditionExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getRightAssignment_1_2()); }
(rule__ConditionExpression__RightAssignment_1_2)
{ after(grammarAccess.getConditionExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
(rule__OrExpression__OpAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getInnerProdExpressionParserRuleCall_0()); }
	ruleInnerProdExpression
{ after(grammarAccess.getAndExpressionAccess().getInnerProdExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getInnerProdExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getInnerProdExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
(rule__AndExpression__OpAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InnerProdExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerProdExpression__Group__0__Impl
	rule__InnerProdExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getOuterProdExpressionParserRuleCall_0()); }
	ruleOuterProdExpression
{ after(grammarAccess.getInnerProdExpressionAccess().getOuterProdExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InnerProdExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerProdExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getGroup_1()); }
(rule__InnerProdExpression__Group_1__0)*
{ after(grammarAccess.getInnerProdExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InnerProdExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerProdExpression__Group_1__0__Impl
	rule__InnerProdExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getInnerProdExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getInnerProdExpressionAccess().getInnerProdExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InnerProdExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerProdExpression__Group_1__1__Impl
	rule__InnerProdExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getOpAssignment_1_1()); }
(rule__InnerProdExpression__OpAssignment_1_1)
{ after(grammarAccess.getInnerProdExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InnerProdExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerProdExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getRightAssignment_1_2()); }
(rule__InnerProdExpression__RightAssignment_1_2)
{ after(grammarAccess.getInnerProdExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OuterProdExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OuterProdExpression__Group__0__Impl
	rule__OuterProdExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getHasExpressionParserRuleCall_0()); }
	ruleHasExpression
{ after(grammarAccess.getOuterProdExpressionAccess().getHasExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OuterProdExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OuterProdExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getGroup_1()); }
(rule__OuterProdExpression__Group_1__0)*
{ after(grammarAccess.getOuterProdExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OuterProdExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OuterProdExpression__Group_1__0__Impl
	rule__OuterProdExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getOuterProdExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOuterProdExpressionAccess().getOuterProdExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OuterProdExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OuterProdExpression__Group_1__1__Impl
	rule__OuterProdExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getOpAssignment_1_1()); }
(rule__OuterProdExpression__OpAssignment_1_1)
{ after(grammarAccess.getOuterProdExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OuterProdExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OuterProdExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getRightAssignment_1_2()); }
(rule__OuterProdExpression__RightAssignment_1_2)
{ after(grammarAccess.getOuterProdExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HasExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasExpression__Group__0__Impl
	rule__HasExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getCaseExpressionParserRuleCall_0()); }
	ruleCaseExpression
{ after(grammarAccess.getHasExpressionAccess().getCaseExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getGroup_1()); }
(rule__HasExpression__Group_1__0)*
{ after(grammarAccess.getHasExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HasExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasExpression__Group_1__0__Impl
	rule__HasExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getHasExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getHasExpressionAccess().getHasExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasExpression__Group_1__1__Impl
	rule__HasExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getOpAssignment_1_1()); }
(rule__HasExpression__OpAssignment_1_1)
{ after(grammarAccess.getHasExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__HasExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getHasExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CaseExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group__0__Impl
	rule__CaseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getCaseExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
(rule__CaseExpression__Group_1__0)?
{ after(grammarAccess.getCaseExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__0__Impl
	rule__CaseExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getCaseExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getCaseExpressionAccess().getCaseExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__1__Impl
	rule__CaseExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getOpAssignment_1_1()); }
(rule__CaseExpression__OpAssignment_1_1)
{ after(grammarAccess.getCaseExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getRightAssignment_1_2()); }
(rule__CaseExpression__RightAssignment_1_2)
{ after(grammarAccess.getCaseExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_1()); }
(rule__EqualityExpression__Alternatives_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
(rule__EqualityExpression__RightAssignment_1_2)
{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getIsExpressionParserRuleCall_0()); }
	ruleIsExpression
{ after(grammarAccess.getRelationalExpressionAccess().getIsExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)?
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
(rule__RelationalExpression__Alternatives_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsExpression__Group__0__Impl
	rule__IsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getSegmentExpressionParserRuleCall_0()); }
	ruleSegmentExpression
{ after(grammarAccess.getIsExpressionAccess().getSegmentExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getGroup_1()); }
(rule__IsExpression__Group_1__0)*
{ after(grammarAccess.getIsExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsExpression__Group_1__0__Impl
	rule__IsExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getIsExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getIsExpressionAccess().getIsExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsExpression__Group_1__1__Impl
	rule__IsExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getAlternatives_1_1()); }
(rule__IsExpression__Alternatives_1_1)
{ after(grammarAccess.getIsExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__IsExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getIsExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SegmentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SegmentExpression__Group__0__Impl
	rule__SegmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getSegmentExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SegmentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SegmentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getGroup_1()); }
(rule__SegmentExpression__Group_1__0)*
{ after(grammarAccess.getSegmentExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SegmentExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SegmentExpression__Group_1__0__Impl
	rule__SegmentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getSegmentExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSegmentExpressionAccess().getSegmentExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SegmentExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SegmentExpression__Group_1__1__Impl
	rule__SegmentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getOpAssignment_1_1()); }
(rule__SegmentExpression__OpAssignment_1_1)
{ after(grammarAccess.getSegmentExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SegmentExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SegmentExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getRightAssignment_1_2()); }
(rule__SegmentExpression__RightAssignment_1_2)
{ after(grammarAccess.getSegmentExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExquoExpressionParserRuleCall_0()); }
	ruleExquoExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getExquoExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_1()); }
(rule__AdditiveExpression__Alternatives_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
(rule__AdditiveExpression__RightAssignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExquoExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExquoExpression__Group__0__Impl
	rule__ExquoExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getDivisionExpressionParserRuleCall_0()); }
	ruleDivisionExpression
{ after(grammarAccess.getExquoExpressionAccess().getDivisionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExquoExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExquoExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getGroup_1()); }
(rule__ExquoExpression__Group_1__0)*
{ after(grammarAccess.getExquoExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExquoExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExquoExpression__Group_1__0__Impl
	rule__ExquoExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getExquoExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExquoExpressionAccess().getExquoExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExquoExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExquoExpression__Group_1__1__Impl
	rule__ExquoExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getOpAssignment_1_1()); }
(rule__ExquoExpression__OpAssignment_1_1)
{ after(grammarAccess.getExquoExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExquoExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExquoExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getRightAssignment_1_2()); }
(rule__ExquoExpression__RightAssignment_1_2)
{ after(grammarAccess.getExquoExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivisionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionExpression__Group__0__Impl
	rule__DivisionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getQuoExpressionParserRuleCall_0()); }
	ruleQuoExpression
{ after(grammarAccess.getDivisionExpressionAccess().getQuoExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getGroup_1()); }
(rule__DivisionExpression__Group_1__0)*
{ after(grammarAccess.getDivisionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivisionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionExpression__Group_1__0__Impl
	rule__DivisionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getDivisionExpressionAccess().getDivisionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionExpression__Group_1__1__Impl
	rule__DivisionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getOpAssignment_1_1()); }
(rule__DivisionExpression__OpAssignment_1_1)
{ after(grammarAccess.getDivisionExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getRightAssignment_1_2()); }
(rule__DivisionExpression__RightAssignment_1_2)
{ after(grammarAccess.getDivisionExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QuoExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuoExpression__Group__0__Impl
	rule__QuoExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getQuoExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuoExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuoExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getGroup_1()); }
(rule__QuoExpression__Group_1__0)*
{ after(grammarAccess.getQuoExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuoExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuoExpression__Group_1__0__Impl
	rule__QuoExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getQuoExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getQuoExpressionAccess().getQuoExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuoExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuoExpression__Group_1__1__Impl
	rule__QuoExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getOpAssignment_1_1()); }
(rule__QuoExpression__OpAssignment_1_1)
{ after(grammarAccess.getQuoExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuoExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuoExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getRightAssignment_1_2()); }
(rule__QuoExpression__RightAssignment_1_2)
{ after(grammarAccess.getQuoExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getRemExpressionParserRuleCall_0()); }
	ruleRemExpression
{ after(grammarAccess.getModExpressionAccess().getRemExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)*
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getModExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getModExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOpAssignment_1_1()); }
(rule__ModExpression__OpAssignment_1_1)
{ after(grammarAccess.getModExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getRightAssignment_1_2()); }
(rule__ModExpression__RightAssignment_1_2)
{ after(grammarAccess.getModExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RemExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpression__Group__0__Impl
	rule__RemExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getRemExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getGroup_1()); }
(rule__RemExpression__Group_1__0)*
{ after(grammarAccess.getRemExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RemExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpression__Group_1__0__Impl
	rule__RemExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getRemExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRemExpressionAccess().getRemExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpression__Group_1__1__Impl
	rule__RemExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getOpAssignment_1_1()); }
(rule__RemExpression__OpAssignment_1_1)
{ after(grammarAccess.getRemExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getRightAssignment_1_2()); }
(rule__RemExpression__RightAssignment_1_2)
{ after(grammarAccess.getRemExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExponentExpressionParserRuleCall_0()); }
	ruleExponentExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExponentExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
(rule__MultiplicativeExpression__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
(rule__MultiplicativeExpression__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExponentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentExpression__Group__0__Impl
	rule__ExponentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getMapDefinitionParserRuleCall_0()); }
	ruleMapDefinition
{ after(grammarAccess.getExponentExpressionAccess().getMapDefinitionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getGroup_1()); }
(rule__ExponentExpression__Group_1__0)*
{ after(grammarAccess.getExponentExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExponentExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentExpression__Group_1__0__Impl
	rule__ExponentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getExponentExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExponentExpressionAccess().getExponentExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentExpression__Group_1__1__Impl
	rule__ExponentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getAlternatives_1_1()); }
(rule__ExponentExpression__Alternatives_1_1)
{ after(grammarAccess.getExponentExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExponentExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getRightAssignment_1_2()); }
(rule__ExponentExpression__RightAssignment_1_2)
{ after(grammarAccess.getExponentExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MapDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapDefinition__Group__0__Impl
	rule__MapDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getPretendExpressionParserRuleCall_0()); }
	rulePretendExpression
{ after(grammarAccess.getMapDefinitionAccess().getPretendExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getGroup_1()); }
(rule__MapDefinition__Group_1__0)*
{ after(grammarAccess.getMapDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapDefinition__Group_1__0__Impl
	rule__MapDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getMapDefinitionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMapDefinitionAccess().getMapDefinitionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapDefinition__Group_1__1__Impl
	rule__MapDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getOpAssignment_1_1()); }
(rule__MapDefinition__OpAssignment_1_1)
{ after(grammarAccess.getMapDefinitionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapDefinition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapDefinition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getRightAssignment_1_2()); }
(rule__MapDefinition__RightAssignment_1_2)
{ after(grammarAccess.getMapDefinitionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PretendExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PretendExpression__Group__0__Impl
	rule__PretendExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getHintTypeExpressionParserRuleCall_0()); }
	ruleHintTypeExpression
{ after(grammarAccess.getPretendExpressionAccess().getHintTypeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PretendExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PretendExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getGroup_1()); }
(rule__PretendExpression__Group_1__0)*
{ after(grammarAccess.getPretendExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PretendExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PretendExpression__Group_1__0__Impl
	rule__PretendExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getPretendExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPretendExpressionAccess().getPretendExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PretendExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PretendExpression__Group_1__1__Impl
	rule__PretendExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getOpAssignment_1_1()); }
(rule__PretendExpression__OpAssignment_1_1)
{ after(grammarAccess.getPretendExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PretendExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PretendExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__PretendExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getPretendExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HintTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HintTypeExpression__Group__0__Impl
	rule__HintTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getCoerceExpressionParserRuleCall_0()); }
	ruleCoerceExpression
{ after(grammarAccess.getHintTypeExpressionAccess().getCoerceExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HintTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HintTypeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getGroup_1()); }
(rule__HintTypeExpression__Group_1__0)?
{ after(grammarAccess.getHintTypeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HintTypeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HintTypeExpression__Group_1__0__Impl
	rule__HintTypeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getHintTypeExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getHintTypeExpressionAccess().getHintTypeExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HintTypeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HintTypeExpression__Group_1__1__Impl
	rule__HintTypeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getOpAssignment_1_1()); }
(rule__HintTypeExpression__OpAssignment_1_1)
{ after(grammarAccess.getHintTypeExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HintTypeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HintTypeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__HintTypeExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getHintTypeExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CoerceExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoerceExpression__Group__0__Impl
	rule__CoerceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getEltExpressionParserRuleCall_0()); }
	ruleEltExpression
{ after(grammarAccess.getCoerceExpressionAccess().getEltExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoerceExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoerceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getGroup_1()); }
(rule__CoerceExpression__Group_1__0)*
{ after(grammarAccess.getCoerceExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoerceExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoerceExpression__Group_1__0__Impl
	rule__CoerceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getCoerceExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getCoerceExpressionAccess().getCoerceExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoerceExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoerceExpression__Group_1__1__Impl
	rule__CoerceExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getOpAssignment_1_1()); }
(rule__CoerceExpression__OpAssignment_1_1)
{ after(grammarAccess.getCoerceExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoerceExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoerceExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__CoerceExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getCoerceExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EltExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EltExpression__Group__0__Impl
	rule__EltExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getExplicitTypeExpressionParserRuleCall_0()); }
	ruleExplicitTypeExpression
{ after(grammarAccess.getEltExpressionAccess().getExplicitTypeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EltExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EltExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getGroup_1()); }
(rule__EltExpression__Group_1__0)*
{ after(grammarAccess.getEltExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EltExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EltExpression__Group_1__0__Impl
	rule__EltExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getEltExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getEltExpressionAccess().getEltExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EltExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EltExpression__Group_1__1__Impl
	rule__EltExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getOpAssignment_1_1()); }
(rule__EltExpression__OpAssignment_1_1)
{ after(grammarAccess.getEltExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EltExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EltExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getRightAssignment_1_2()); }
(rule__EltExpression__RightAssignment_1_2)
{ after(grammarAccess.getEltExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExplicitTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitTypeExpression__Group__0__Impl
	rule__ExplicitTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getExplicitTypeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitTypeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getGroup_1()); }
(rule__ExplicitTypeExpression__Group_1__0)?
{ after(grammarAccess.getExplicitTypeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitTypeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitTypeExpression__Group_1__0__Impl
	rule__ExplicitTypeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getExplicitTypeExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExplicitTypeExpressionAccess().getExplicitTypeExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitTypeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitTypeExpression__Group_1__1__Impl
	rule__ExplicitTypeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getOpAssignment_1_1()); }
(rule__ExplicitTypeExpression__OpAssignment_1_1)
{ after(grammarAccess.getExplicitTypeExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitTypeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitTypeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getRightTypeAssignment_1_2()); }
(rule__ExplicitTypeExpression__RightTypeAssignment_1_2)
{ after(grammarAccess.getExplicitTypeExpressionAccess().getRightTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopAssignment_1_1()); }
(rule__UnaryExpression__UopAssignment_1_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUopAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1_2()); }
(rule__UnaryExpression__ExprAssignment_1_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__0__Impl
	rule__UnaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__1__Impl
	rule__UnaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopAssignment_2_1()); }
(rule__UnaryExpression__UopAssignment_2_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUopAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2_2()); }
(rule__UnaryExpression__ExprAssignment_2_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__0__Impl
	rule__UnaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__1__Impl
	rule__UnaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopAssignment_3_1()); }
(rule__UnaryExpression__UopAssignment_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUopAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_3_2()); }
(rule__UnaryExpression__ExprAssignment_3_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__0__Impl
	rule__UnaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__1__Impl
	rule__UnaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopAssignment_4_1()); }
(rule__UnaryExpression__UopAssignment_4_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUopAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_4_2()); }
(rule__UnaryExpression__ExprAssignment_4_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__0__Impl
	rule__UnaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__1__Impl
	rule__UnaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopAssignment_5_1()); }
(rule__UnaryExpression__UopAssignment_5_1)
{ after(grammarAccess.getUnaryExpressionAccess().getUopAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_5_2()); }
(rule__UnaryExpression__ExprAssignment_5_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__0__Impl
	rule__UnaryExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE5Assignment_8_0()); }
(rule__UnaryExpression__E5Assignment_8_0)
{ after(grammarAccess.getUnaryExpressionAccess().getE5Assignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__1__Impl
	rule__UnaryExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_8_1()); }
	RULE_LPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__2__Impl
	rule__UnaryExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE6Assignment_8_2()); }
(rule__UnaryExpression__E6Assignment_8_2)
{ after(grammarAccess.getUnaryExpressionAccess().getE6Assignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__3__Impl
	rule__UnaryExpression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_8_3()); }
(rule__UnaryExpression__Group_8_3__0)?
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__4__Impl
	rule__UnaryExpression__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_8_4()); }
(rule__UnaryExpression__Group_8_4__0)*
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_8_5()); }
	RULE_RPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_8_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnaryExpression__Group_8_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_3__0__Impl
	rule__UnaryExpression__Group_8_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_3_0()); }
	RULE_COLON
{ after(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE22Assignment_8_3_1()); }
(rule__UnaryExpression__E22Assignment_8_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE22Assignment_8_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_8_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_4__0__Impl
	rule__UnaryExpression__Group_8_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_8_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_8_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_4__1__Impl
	rule__UnaryExpression__Group_8_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE21Assignment_8_4_1()); }
(rule__UnaryExpression__E21Assignment_8_4_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE21Assignment_8_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_8_4_2()); }
(rule__UnaryExpression__Group_8_4_2__0)?
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_8_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_8_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_4_2__0__Impl
	rule__UnaryExpression__Group_8_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_8_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE23Assignment_8_4_2_1()); }
(rule__UnaryExpression__E23Assignment_8_4_2_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE23Assignment_8_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__0__Impl
	rule__UnaryExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE9Assignment_9_0()); }
(rule__UnaryExpression__E9Assignment_9_0)
{ after(grammarAccess.getUnaryExpressionAccess().getE9Assignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__1__Impl
	rule__UnaryExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_9_1()); }
	RULE_LPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__2__Impl
	rule__UnaryExpression__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE10Assignment_9_2()); }
(rule__UnaryExpression__E10Assignment_9_2)
{ after(grammarAccess.getUnaryExpressionAccess().getE10Assignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__3__Impl
	rule__UnaryExpression__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_9_3()); }
(rule__UnaryExpression__Group_9_3__0)?
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__4__Impl
	rule__UnaryExpression__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_9_4()); }
(rule__UnaryExpression__Group_9_4__0)*
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_9_5()); }
	RULE_RPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_9_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnaryExpression__Group_9_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_3__0__Impl
	rule__UnaryExpression__Group_9_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_9_3_0()); }
	RULE_COLON
{ after(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE25Assignment_9_3_1()); }
(rule__UnaryExpression__E25Assignment_9_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE25Assignment_9_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_9_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_4__0__Impl
	rule__UnaryExpression__Group_9_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_9_4_0()); }
	RULE_COMMA
{ after(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_9_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_4__1__Impl
	rule__UnaryExpression__Group_9_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE24Assignment_9_4_1()); }
(rule__UnaryExpression__E24Assignment_9_4_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE24Assignment_9_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_9_4_2()); }
(rule__UnaryExpression__Group_9_4_2__0)?
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_9_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_9_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_4_2__0__Impl
	rule__UnaryExpression__Group_9_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_9_4_2_0()); }
	RULE_COLON
{ after(grammarAccess.getUnaryExpressionAccess().getCOLONTerminalRuleCall_9_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_9_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_9_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_9_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE26Assignment_9_4_2_1()); }
(rule__UnaryExpression__E26Assignment_9_4_2_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE26Assignment_9_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10__0__Impl
	rule__UnaryExpression__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE11Assignment_10_0()); }
(rule__UnaryExpression__E11Assignment_10_0)
{ after(grammarAccess.getUnaryExpressionAccess().getE11Assignment_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10__1__Impl
	rule__UnaryExpression__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_10_1()); }
	RULE_LPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getLPARENTerminalRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10__2__Impl
	rule__UnaryExpression__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE12Assignment_10_2()); }
(rule__UnaryExpression__E12Assignment_10_2)
{ after(grammarAccess.getUnaryExpressionAccess().getE12Assignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10__3__Impl
	rule__UnaryExpression__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_10_3()); }
(rule__UnaryExpression__Group_10_3__0)*
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_10_4()); }
	RULE_RPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getRPARENTerminalRuleCall_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryExpression__Group_10_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10_3__0__Impl
	rule__UnaryExpression__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_10_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getUnaryExpressionAccess().getCOMMATerminalRuleCall_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_10_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_10_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE13Assignment_10_3_1()); }
(rule__UnaryExpression__E13Assignment_10_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getE13Assignment_10_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryPrefix__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1__0__Impl
	rule__PrimaryPrefix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN
{ after(grammarAccess.getPrimaryPrefixAccess().getLPARENTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryPrefix__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1__1__Impl
	rule__PrimaryPrefix__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getT4Assignment_1_1()); }
(rule__PrimaryPrefix__T4Assignment_1_1)
{ after(grammarAccess.getPrimaryPrefixAccess().getT4Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryPrefix__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1__2__Impl
	rule__PrimaryPrefix__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getGroup_1_2()); }
(rule__PrimaryPrefix__Group_1_2__0)*
{ after(grammarAccess.getPrimaryPrefixAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryPrefix__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getRPARENTerminalRuleCall_1_3()); }
	RULE_RPAREN
{ after(grammarAccess.getPrimaryPrefixAccess().getRPARENTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryPrefix__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1_2__0__Impl
	rule__PrimaryPrefix__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getCOMMATerminalRuleCall_1_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getPrimaryPrefixAccess().getCOMMATerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryPrefix__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryPrefix__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getT25Assignment_1_2_1()); }
(rule__PrimaryPrefix__T25Assignment_1_2_1)
{ after(grammarAccess.getPrimaryPrefixAccess().getT25Assignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group__0__Impl
	rule__NameOrFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getFnnameAssignment_0()); }
(rule__NameOrFunctionCall__FnnameAssignment_0)
{ after(grammarAccess.getNameOrFunctionCallAccess().getFnnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group__1__Impl
	rule__NameOrFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_1()); }
(rule__NameOrFunctionCall__Group_1__0)?
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getAlternatives_2()); }
(rule__NameOrFunctionCall__Alternatives_2)?
{ after(grammarAccess.getNameOrFunctionCallAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NameOrFunctionCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_1__0__Impl
	rule__NameOrFunctionCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getLspAssignment_1_0()); }
(rule__NameOrFunctionCall__LspAssignment_1_0)
{ after(grammarAccess.getNameOrFunctionCallAccess().getLspAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getLispKeyword_1_1()); }

	'Lisp' 

{ after(grammarAccess.getNameOrFunctionCallAccess().getLispKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrFunctionCall__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0__0__Impl
	rule__NameOrFunctionCall__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_0()); }
(rule__NameOrFunctionCall__Group_2_0_0__0)
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_1()); }
(rule__NameOrFunctionCall__Group_2_0_1__0)*
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrFunctionCall__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0__0__Impl
	rule__NameOrFunctionCall__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getLPARENTerminalRuleCall_2_0_0_0()); }
	RULE_LPAREN
{ after(grammarAccess.getNameOrFunctionCallAccess().getLPARENTerminalRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0__1__Impl
	rule__NameOrFunctionCall__Group_2_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT4Assignment_2_0_0_1()); }
(rule__NameOrFunctionCall__T4Assignment_2_0_0_1)?
{ after(grammarAccess.getNameOrFunctionCallAccess().getT4Assignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0__2__Impl
	rule__NameOrFunctionCall__Group_2_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_0_2()); }
(rule__NameOrFunctionCall__Group_2_0_0_2__0)*
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getRPARENTerminalRuleCall_2_0_0_3()); }
	RULE_RPAREN
{ after(grammarAccess.getNameOrFunctionCallAccess().getRPARENTerminalRuleCall_2_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NameOrFunctionCall__Group_2_0_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0_2__0__Impl
	rule__NameOrFunctionCall__Group_2_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getCOMMATerminalRuleCall_2_0_0_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getNameOrFunctionCallAccess().getCOMMATerminalRuleCall_2_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT5Assignment_2_0_0_2_1()); }
(rule__NameOrFunctionCall__T5Assignment_2_0_0_2_1)
{ after(grammarAccess.getNameOrFunctionCallAccess().getT5Assignment_2_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameOrFunctionCall__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1__0__Impl
	rule__NameOrFunctionCall__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getLPARENTerminalRuleCall_2_0_1_0()); }
	RULE_LPAREN
{ after(grammarAccess.getNameOrFunctionCallAccess().getLPARENTerminalRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1__1__Impl
	rule__NameOrFunctionCall__Group_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT14Assignment_2_0_1_1()); }
(rule__NameOrFunctionCall__T14Assignment_2_0_1_1)?
{ after(grammarAccess.getNameOrFunctionCallAccess().getT14Assignment_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1__2__Impl
	rule__NameOrFunctionCall__Group_2_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_1_2()); }
(rule__NameOrFunctionCall__Group_2_0_1_2__0)*
{ after(grammarAccess.getNameOrFunctionCallAccess().getGroup_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getRPARENTerminalRuleCall_2_0_1_3()); }
	RULE_RPAREN
{ after(grammarAccess.getNameOrFunctionCallAccess().getRPARENTerminalRuleCall_2_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NameOrFunctionCall__Group_2_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1_2__0__Impl
	rule__NameOrFunctionCall__Group_2_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getCOMMATerminalRuleCall_2_0_1_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getNameOrFunctionCallAccess().getCOMMATerminalRuleCall_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameOrFunctionCall__Group_2_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameOrFunctionCall__Group_2_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__Group_2_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT15Assignment_2_0_1_2_1()); }
(rule__NameOrFunctionCall__T15Assignment_2_0_1_2_1)
{ after(grammarAccess.getNameOrFunctionCallAccess().getT15Assignment_2_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CharacterLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__0__Impl
	rule__CharacterLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__1__Impl
	rule__CharacterLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getC1Assignment_1()); }
(rule__CharacterLiteral__C1Assignment_1)
{ after(grammarAccess.getCharacterLiteralAccess().getC1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharacterLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharacterLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }

	'\'' 

{ after(grammarAccess.getCharacterLiteralAccess().getApostropheKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getLitnameAssignment_0()); }
(rule__ListLiteral__LitnameAssignment_0)
{ after(grammarAccess.getListLiteralAccess().getLitnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getL2Assignment_1()); }
(rule__ListLiteral__L2Assignment_1)?
{ after(grammarAccess.getListLiteralAccess().getL2Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__2__Impl
	rule__ListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_2()); }
(rule__ListLiteral__Group_2__0)*
{ after(grammarAccess.getListLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__3__Impl
	rule__ListLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_3()); }
(rule__ListLiteral__Group_3__0)?
{ after(grammarAccess.getListLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getRBRACKETTerminalRuleCall_4()); }
	RULE_RBRACKET
{ after(grammarAccess.getListLiteralAccess().getRBRACKETTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ListLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2__0__Impl
	rule__ListLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getListLiteralAccess().getCOMMATerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getT3Assignment_2_1()); }
(rule__ListLiteral__T3Assignment_2_1)
{ after(grammarAccess.getListLiteralAccess().getT3Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__0__Impl
	rule__ListLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getForKeyword_3_0()); }

	'for' 

{ after(grammarAccess.getListLiteralAccess().getForKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__1__Impl
	rule__ListLiteral__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getT14Assignment_3_1()); }
(rule__ListLiteral__T14Assignment_3_1)
{ after(grammarAccess.getListLiteralAccess().getT14Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__2__Impl
	rule__ListLiteral__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getInKeyword_3_2()); }

	'in' 

{ after(grammarAccess.getListLiteralAccess().getInKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getL5Assignment_3_3()); }
(rule__ListLiteral__L5Assignment_3_3)
{ after(grammarAccess.getListLiteralAccess().getL5Assignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__CAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCCategoryDefParserRuleCall_2_0_0()); }
	ruleCategoryDef{ after(grammarAccess.getModelAccess().getCCategoryDefParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPPackageDefParserRuleCall_2_1_0()); }
	rulePackageDef{ after(grammarAccess.getModelAccess().getPPackageDefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDDomainDefParserRuleCall_2_2_0()); }
	ruleDomainDef{ after(grammarAccess.getModelAccess().getDDomainDefParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getNameCategoryKeyword_0_0()); }
(
{ before(grammarAccess.getCategoryDefAccess().getNameCategoryKeyword_0_0()); }

	'category' 

{ after(grammarAccess.getCategoryDefAccess().getNameCategoryKeyword_0_0()); }
)

{ after(grammarAccess.getCategoryDefAccess().getNameCategoryKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__ShortnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getShortnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCategoryDefAccess().getShortnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__LongnameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getLongnameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCategoryDefAccess().getLongnameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Longname2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getLongname2IDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getCategoryDefAccess().getLongname2IDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__CpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getCpTypeParameterListParserRuleCall_4_0()); }
	ruleTypeParameterList{ after(grammarAccess.getCategoryDefAccess().getCpTypeParameterListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__ImplNameAssignment_8_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getImplNameTypeArgumentsParserRuleCall_8_0_0_0()); }
	ruleTypeArguments{ after(grammarAccess.getCategoryDefAccess().getImplNameTypeArgumentsParserRuleCall_8_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__WAssignment_8_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWWithPartParserRuleCall_8_0_1_0_0_0()); }
	ruleWithPart{ after(grammarAccess.getCategoryDefAccess().getWWithPartParserRuleCall_8_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__AAssignment_8_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAAddPartParserRuleCall_8_0_1_0_1_0()); }
	ruleAddPart{ after(grammarAccess.getCategoryDefAccess().getAAddPartParserRuleCall_8_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Wh5Assignment_8_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWh5WherePartParserRuleCall_8_0_1_1_0()); }
	ruleWherePart{ after(grammarAccess.getCategoryDefAccess().getWh5WherePartParserRuleCall_8_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__ImplNameAssignment_8_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getImplNameTypeArgumentsParserRuleCall_8_1_2_0()); }
	ruleTypeArguments{ after(grammarAccess.getCategoryDefAccess().getImplNameTypeArgumentsParserRuleCall_8_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__WAssignment_8_1_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWWithPartParserRuleCall_8_1_3_0_0_0()); }
	ruleWithPart{ after(grammarAccess.getCategoryDefAccess().getWWithPartParserRuleCall_8_1_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__AAssignment_8_1_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getAAddPartParserRuleCall_8_1_3_0_1_0()); }
	ruleAddPart{ after(grammarAccess.getCategoryDefAccess().getAAddPartParserRuleCall_8_1_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CategoryDef__Wh5Assignment_8_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryDefAccess().getWh5WherePartParserRuleCall_8_1_3_1_0()); }
	ruleWherePart{ after(grammarAccess.getCategoryDefAccess().getWh5WherePartParserRuleCall_8_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getNamePackageKeyword_0_0()); }
(
{ before(grammarAccess.getPackageDefAccess().getNamePackageKeyword_0_0()); }

	'package' 

{ after(grammarAccess.getPackageDefAccess().getNamePackageKeyword_0_0()); }
)

{ after(grammarAccess.getPackageDefAccess().getNamePackageKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ShortnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getShortnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPackageDefAccess().getShortnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__LongnameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getLongnameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPackageDefAccess().getLongnameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Longname2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getLongname2IDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getPackageDefAccess().getLongname2IDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__CpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getCpTypeParameterListParserRuleCall_4_0()); }
	ruleTypeParameterList{ after(grammarAccess.getPackageDefAccess().getCpTypeParameterListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ExportNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getExportNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getPackageDefAccess().getExportNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ImplNameAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getImplNameIDTerminalRuleCall_8_0()); }
	RULE_ID{ after(grammarAccess.getPackageDefAccess().getImplNameIDTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__WAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getWWithPartParserRuleCall_9_0_0()); }
	ruleWithPart{ after(grammarAccess.getPackageDefAccess().getWWithPartParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Wh5Assignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefAccess().getWh5WherePartParserRuleCall_9_1_0()); }
	ruleWherePart{ after(grammarAccess.getPackageDefAccess().getWh5WherePartParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getNameDomainKeyword_0_0()); }
(
{ before(grammarAccess.getDomainDefAccess().getNameDomainKeyword_0_0()); }

	'domain' 

{ after(grammarAccess.getDomainDefAccess().getNameDomainKeyword_0_0()); }
)

{ after(grammarAccess.getDomainDefAccess().getNameDomainKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Shortname5Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getShortname5IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDomainDefAccess().getShortname5IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Longname5Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getLongname5IDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDomainDefAccess().getLongname5IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Longname6Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getLongname6IDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDomainDefAccess().getLongname6IDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Cp5Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getCp5TypeParameterListParserRuleCall_4_0()); }
	ruleTypeParameterList{ after(grammarAccess.getDomainDefAccess().getCp5TypeParameterListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__ExportNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getExportNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getDomainDefAccess().getExportNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__ImplName5Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getImplName5IDTerminalRuleCall_8_0()); }
	RULE_ID{ after(grammarAccess.getDomainDefAccess().getImplName5IDTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__WAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getWWithPartParserRuleCall_9_0_0()); }
	ruleWithPart{ after(grammarAccess.getDomainDefAccess().getWWithPartParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDef__Wh5Assignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDefAccess().getWh5WherePartParserRuleCall_9_1_0()); }
	ruleWherePart{ after(grammarAccess.getDomainDefAccess().getWh5WherePartParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getNameWhereKeyword_0_0()); }
(
{ before(grammarAccess.getWherePartAccess().getNameWhereKeyword_0_0()); }

	'where' 

{ after(grammarAccess.getWherePartAccess().getNameWhereKeyword_0_0()); }
)

{ after(grammarAccess.getWherePartAccess().getNameWhereKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__WhereAssigAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getWhereAssigWhereAssignmentsParserRuleCall_4_0_0()); }
	ruleWhereAssignments{ after(grammarAccess.getWherePartAccess().getWhereAssigWhereAssignmentsParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Longname8Assignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getLongname8IDTerminalRuleCall_5_0_0()); }
	RULE_ID{ after(grammarAccess.getWherePartAccess().getLongname8IDTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__ImpAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getImpTypeExpressionParserRuleCall_5_1_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getWherePartAccess().getImpTypeExpressionParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__W8Assignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getW8WithPartParserRuleCall_5_2_0()); }
	ruleWithPart{ after(grammarAccess.getWherePartAccess().getW8WithPartParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__Longname9Assignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getLongname9IDTerminalRuleCall_6_0_0()); }
	RULE_ID{ after(grammarAccess.getWherePartAccess().getLongname9IDTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WherePart__AddAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWherePartAccess().getAddAddPartParserRuleCall_6_2_0()); }
	ruleAddPart{ after(grammarAccess.getWherePartAccess().getAddAddPartParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getNameWithKeyword_0_0()); }
(
{ before(grammarAccess.getWithPartAccess().getNameWithKeyword_0_0()); }

	'with' 

{ after(grammarAccess.getWithPartAccess().getNameWithKeyword_0_0()); }
)

{ after(grammarAccess.getWithPartAccess().getNameWithKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithPart__FundecAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithPartAccess().getFundecVariableDeclarationParserRuleCall_4_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getWithPartAccess().getFundecVariableDeclarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getNameAddKeyword_0_0()); }
(
{ before(grammarAccess.getAddPartAccess().getNameAddKeyword_0_0()); }

	'add' 

{ after(grammarAccess.getAddPartAccess().getNameAddKeyword_0_0()); }
)

{ after(grammarAccess.getAddPartAccess().getNameAddKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddPart__TAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddPartAccess().getTAddStatementsParserRuleCall_4_0_0()); }
	ruleAddStatements{ after(grammarAccess.getAddPartAccess().getTAddStatementsParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__T1Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getT1ExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getAddStatementsAccess().getT1ExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddStatements__T13Assignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddStatementsAccess().getT13FunctionDefinitionBlockParserRuleCall_2_3_0()); }
	ruleFunctionDefinitionBlock{ after(grammarAccess.getAddStatementsAccess().getT13FunctionDefinitionBlockParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Par3Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar3FunctionSignatureParserRuleCall_0_0()); }
	ruleFunctionSignature{ after(grammarAccess.getFunctionDefinitionAccess().getPar3FunctionSignatureParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Par4Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar4TypeExpressionParserRuleCall_1_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getFunctionDefinitionAccess().getPar4TypeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Par5Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getPar5StatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getFunctionDefinitionAccess().getPar5StatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__FnDecBrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBrLBRACETerminalRuleCall_0_0()); }
	RULE_LBRACE{ after(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBrLBRACETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionBlock__FnDecBkAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBkFunctionDefinitionParserRuleCall_2_0_0()); }
	ruleFunctionDefinition{ after(grammarAccess.getFunctionDefinitionBlockAccess().getFnDecBkFunctionDefinitionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__FnNamAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Par2Assignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getPar2VariableTypedParserRuleCall_0_2_0()); }
	ruleVariableTyped{ after(grammarAccess.getFunctionSignatureAccess().getPar2VariableTypedParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__Par3Assignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getPar3VariableTypedParserRuleCall_0_3_1_0()); }
	ruleVariableTyped{ after(grammarAccess.getFunctionSignatureAccess().getPar3VariableTypedParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__FnNamAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getFnNamIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__ParAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getParIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getParIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__T4Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT4IDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getT4IDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1EQUALTerminalRuleCall_2_1_0_0()); }
	RULE_EQUAL{ after(grammarAccess.getFunctionSignatureAccess().getB1EQUALTerminalRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1LTTerminalRuleCall_2_1_1_0()); }
	RULE_LT{ after(grammarAccess.getFunctionSignatureAccess().getB1LTTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1GTTerminalRuleCall_2_1_2_0()); }
	RULE_GT{ after(grammarAccess.getFunctionSignatureAccess().getB1GTTerminalRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1LETerminalRuleCall_2_1_3_0()); }
	RULE_LE{ after(grammarAccess.getFunctionSignatureAccess().getB1LETerminalRuleCall_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1GETerminalRuleCall_2_1_4_0()); }
	RULE_GE{ after(grammarAccess.getFunctionSignatureAccess().getB1GETerminalRuleCall_2_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1PLUSTerminalRuleCall_2_1_5_0()); }
	RULE_PLUS{ after(grammarAccess.getFunctionSignatureAccess().getB1PLUSTerminalRuleCall_2_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1MINUSTerminalRuleCall_2_1_6_0()); }
	RULE_MINUS{ after(grammarAccess.getFunctionSignatureAccess().getB1MINUSTerminalRuleCall_2_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1TIMESTerminalRuleCall_2_1_7_0()); }
	RULE_TIMES{ after(grammarAccess.getFunctionSignatureAccess().getB1TIMESTerminalRuleCall_2_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1SLASHTerminalRuleCall_2_1_8_0()); }
	RULE_SLASH{ after(grammarAccess.getFunctionSignatureAccess().getB1SLASHTerminalRuleCall_2_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1AMPERSANDTerminalRuleCall_2_1_9_0()); }
	RULE_AMPERSAND{ after(grammarAccess.getFunctionSignatureAccess().getB1AMPERSANDTerminalRuleCall_2_1_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1BARTerminalRuleCall_2_1_10_0()); }
	RULE_BAR{ after(grammarAccess.getFunctionSignatureAccess().getB1BARTerminalRuleCall_2_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B1Assignment_2_1_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB1CARATTerminalRuleCall_2_1_11_0()); }
	RULE_CARAT{ after(grammarAccess.getFunctionSignatureAccess().getB1CARATTerminalRuleCall_2_1_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__T5Assignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT5IDTerminalRuleCall_2_2_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getT5IDTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B3Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB3INTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getFunctionSignatureAccess().getB3INTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__B2Assignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getB2MINUSTerminalRuleCall_4_0_0()); }
	RULE_MINUS{ after(grammarAccess.getFunctionSignatureAccess().getB2MINUSTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSignature__T6Assignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSignatureAccess().getT6IDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionSignatureAccess().getT6IDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDef__MacronameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroDefAccess().getMacronameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMacroDefAccess().getMacronameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImpnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImpnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getImpnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__VardecbrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getVardecbrLBRACETerminalRuleCall_0_0()); }
	RULE_LBRACE{ after(grammarAccess.getVariableDeclarationBlockAccess().getVardecbrLBRACETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationBlock__VardecBlkAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationBlockAccess().getVardecBlkVariableDeclarationParserRuleCall_2_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariableDeclarationBlockAccess().getVardecBlkVariableDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__T1Assignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getT1ExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getT1ExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__V1Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getV1VariableTypedParserRuleCall_1_0_0()); }
	ruleVariableTyped{ after(grammarAccess.getVariableDeclarationAccess().getV1VariableTypedParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__V2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getV2VariableDeclarationBlockParserRuleCall_1_1_0()); }
	ruleVariableDeclarationBlock{ after(grammarAccess.getVariableDeclarationAccess().getV2VariableDeclarationBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__VarNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getVarNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableTypedAccess().getVarNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__VarNameStAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getVarNameStSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getVariableTypedAccess().getVarNameStSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTyped__TypAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypedAccess().getTypTypeExpressionParserRuleCall_1_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getVariableTypedAccess().getTypTypeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__VarNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getVarNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAssignAccess().getVarNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__T2Assignment_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT2IDTerminalRuleCall_0_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAssignAccess().getT2IDTerminalRuleCall_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__TypAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getTypTypeExpressionParserRuleCall_0_1_1_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getVariableDeclarationAssignAccess().getTypTypeExpressionParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__T4Assignment_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT4ExpressionParserRuleCall_0_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAssignAccess().getT4ExpressionParserRuleCall_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__T2Assignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT2IDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAssignAccess().getT2IDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationAssign__T4Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAssignAccess().getT4ExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAssignAccess().getT4ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TypeExpression__T2Assignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getT2TypeArgumentsParserRuleCall_0_0_0_0()); }
	ruleTypeArguments{ after(grammarAccess.getTypeExpressionAccess().getT2TypeArgumentsParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__T3Assignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExpressionAccess().getT3TypeResultParserRuleCall_0_0_2_0()); }
	ruleTypeResult{ after(grammarAccess.getTypeExpressionAccess().getT3TypeResultParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__TynameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getTynameLPARENTerminalRuleCall_0_0()); }
	RULE_LPAREN{ after(grammarAccess.getTypeParameterListAccess().getTynameLPARENTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__ParAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getParIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeParameterListAccess().getParIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Par22Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar22TypeExpressionParserRuleCall_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeParameterListAccess().getPar22TypeExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Par2Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar2IDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeParameterListAccess().getPar2IDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameterList__Par22Assignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterListAccess().getPar22TypeExpressionParserRuleCall_3_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeParameterListAccess().getPar22TypeExpressionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__TAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTTypeLiteralParserRuleCall_0_0()); }
	ruleTypeLiteral{ after(grammarAccess.getTypeArgumentsAccess().getTTypeLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT2PERCENTTerminalRuleCall_1_0()); }
	RULE_PERCENT{ after(grammarAccess.getTypeArgumentsAccess().getT2PERCENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T3Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT3TypeKeyword_2_0()); }
(
{ before(grammarAccess.getTypeArgumentsAccess().getT3TypeKeyword_2_0()); }

	'Type' 

{ after(grammarAccess.getTypeArgumentsAccess().getT3TypeKeyword_2_0()); }
)

{ after(grammarAccess.getTypeArgumentsAccess().getT3TypeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__B1Assignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getB1LPARENTerminalRuleCall_3_0_0()); }
	RULE_LPAREN{ after(grammarAccess.getTypeArgumentsAccess().getB1LPARENTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T4Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT4TypeExpressionParserRuleCall_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT4TypeExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T16Assignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT16TypeExpressionParserRuleCall_3_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT16TypeExpressionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T5Assignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT5RecordKeyword_4_0_0()); }
(
{ before(grammarAccess.getTypeArgumentsAccess().getT5RecordKeyword_4_0_0()); }

	'Record' 

{ after(grammarAccess.getTypeArgumentsAccess().getT5RecordKeyword_4_0_0()); }
)

{ after(grammarAccess.getTypeArgumentsAccess().getT5RecordKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T6Assignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT6TypeExpressionParserRuleCall_4_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT6TypeExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T22Assignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT22TypeExpressionParserRuleCall_4_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT22TypeExpressionParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T21Assignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT21TypeExpressionParserRuleCall_4_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT21TypeExpressionParserRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T23Assignment_4_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT23TypeExpressionParserRuleCall_4_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT23TypeExpressionParserRuleCall_4_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T9Assignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT9UnionKeyword_5_0_0()); }
(
{ before(grammarAccess.getTypeArgumentsAccess().getT9UnionKeyword_5_0_0()); }

	'Union' 

{ after(grammarAccess.getTypeArgumentsAccess().getT9UnionKeyword_5_0_0()); }
)

{ after(grammarAccess.getTypeArgumentsAccess().getT9UnionKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T10Assignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT10TypeExpressionParserRuleCall_5_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT10TypeExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T25Assignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT25TypeExpressionParserRuleCall_5_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT25TypeExpressionParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T24Assignment_5_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT24TypeExpressionParserRuleCall_5_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT24TypeExpressionParserRuleCall_5_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T26Assignment_5_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT26TypeExpressionParserRuleCall_5_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT26TypeExpressionParserRuleCall_5_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T11Assignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT11JoinKeyword_6_0_0()); }
(
{ before(grammarAccess.getTypeArgumentsAccess().getT11JoinKeyword_6_0_0()); }

	'Join' 

{ after(grammarAccess.getTypeArgumentsAccess().getT11JoinKeyword_6_0_0()); }
)

{ after(grammarAccess.getTypeArgumentsAccess().getT11JoinKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T12Assignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT12TypeExpressionParserRuleCall_6_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT12TypeExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T13Assignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT13TypeExpressionParserRuleCall_6_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeArgumentsAccess().getT13TypeExpressionParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__T15Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getT15TypeNameOrFunctionCallParserRuleCall_7_0()); }
	ruleTypeNameOrFunctionCall{ after(grammarAccess.getTypeArgumentsAccess().getT15TypeNameOrFunctionCallParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__TAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getTTypeLiteralParserRuleCall_0_0()); }
	ruleTypeLiteral{ after(grammarAccess.getTypeResultAccess().getTTypeLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT2PERCENTTerminalRuleCall_1_0()); }
	RULE_PERCENT{ after(grammarAccess.getTypeResultAccess().getT2PERCENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__TynameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getTynameTypeKeyword_2_0()); }
(
{ before(grammarAccess.getTypeResultAccess().getTynameTypeKeyword_2_0()); }

	'Type' 

{ after(grammarAccess.getTypeResultAccess().getTynameTypeKeyword_2_0()); }
)

{ after(grammarAccess.getTypeResultAccess().getTynameTypeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__NameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameRecordKeyword_3_0_0()); }
(
{ before(grammarAccess.getTypeResultAccess().getNameRecordKeyword_3_0_0()); }

	'Record' 

{ after(grammarAccess.getTypeResultAccess().getNameRecordKeyword_3_0_0()); }
)

{ after(grammarAccess.getTypeResultAccess().getNameRecordKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T7Assignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT7TypeExpressionParserRuleCall_3_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT7TypeExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T8Assignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT8TypeExpressionParserRuleCall_3_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT8TypeExpressionParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T21Assignment_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT21TypeExpressionParserRuleCall_3_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT21TypeExpressionParserRuleCall_3_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T23Assignment_3_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT23TypeExpressionParserRuleCall_3_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT23TypeExpressionParserRuleCall_3_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__NameAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameUnionKeyword_4_0_0()); }
(
{ before(grammarAccess.getTypeResultAccess().getNameUnionKeyword_4_0_0()); }

	'Union' 

{ after(grammarAccess.getTypeResultAccess().getNameUnionKeyword_4_0_0()); }
)

{ after(grammarAccess.getTypeResultAccess().getNameUnionKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T10Assignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT10TypeExpressionParserRuleCall_4_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT10TypeExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T11Assignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT11TypeExpressionParserRuleCall_4_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT11TypeExpressionParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T24Assignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT24TypeExpressionParserRuleCall_4_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT24TypeExpressionParserRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T26Assignment_4_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT26TypeExpressionParserRuleCall_4_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT26TypeExpressionParserRuleCall_4_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__NameAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getNameJoinKeyword_5_0_0()); }
(
{ before(grammarAccess.getTypeResultAccess().getNameJoinKeyword_5_0_0()); }

	'Join' 

{ after(grammarAccess.getTypeResultAccess().getNameJoinKeyword_5_0_0()); }
)

{ after(grammarAccess.getTypeResultAccess().getNameJoinKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T12Assignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT12TypeExpressionParserRuleCall_5_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT12TypeExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T13Assignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT13TypeExpressionParserRuleCall_5_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeResultAccess().getT13TypeExpressionParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeResult__T15Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeResultAccess().getT15TypeNameOrFunctionCallParserRuleCall_6_0()); }
	ruleTypeNameOrFunctionCall{ after(grammarAccess.getTypeResultAccess().getT15TypeNameOrFunctionCallParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T32Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT32PERCENTTerminalRuleCall_1_1_0()); }
	RULE_PERCENT{ after(grammarAccess.getTypePrimaryExpressionAccess().getT32PERCENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__TynameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameTypeKeyword_2_1_0()); }
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameTypeKeyword_2_1_0()); }

	'Type' 

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameTypeKeyword_2_1_0()); }
)

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameTypeKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__TynameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameLispKeyword_3_1_0()); }
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameLispKeyword_3_1_0()); }

	'Lisp' 

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameLispKeyword_3_1_0()); }
)

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameLispKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T5Assignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT5TypeExpressionParserRuleCall_4_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT5TypeExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__TynameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameRecordKeyword_5_1_0()); }
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameRecordKeyword_5_1_0()); }

	'Record' 

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameRecordKeyword_5_1_0()); }
)

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameRecordKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T7Assignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT7TypeExpressionParserRuleCall_5_3_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT7TypeExpressionParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T8Assignment_5_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT8TypeExpressionParserRuleCall_5_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT8TypeExpressionParserRuleCall_5_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T21Assignment_5_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT21TypeExpressionParserRuleCall_5_5_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT21TypeExpressionParserRuleCall_5_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T23Assignment_5_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT23TypeExpressionParserRuleCall_5_5_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT23TypeExpressionParserRuleCall_5_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__TynameAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameUnionKeyword_6_1_0()); }
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameUnionKeyword_6_1_0()); }

	'Union' 

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameUnionKeyword_6_1_0()); }
)

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameUnionKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T10Assignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT10TypeExpressionParserRuleCall_6_3_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT10TypeExpressionParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T11Assignment_6_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT11TypeExpressionParserRuleCall_6_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT11TypeExpressionParserRuleCall_6_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T24Assignment_6_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT24TypeExpressionParserRuleCall_6_5_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT24TypeExpressionParserRuleCall_6_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T26Assignment_6_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT26TypeExpressionParserRuleCall_6_5_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT26TypeExpressionParserRuleCall_6_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__TynameAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameJoinKeyword_7_1_0()); }
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getTynameJoinKeyword_7_1_0()); }

	'Join' 

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameJoinKeyword_7_1_0()); }
)

{ after(grammarAccess.getTypePrimaryExpressionAccess().getTynameJoinKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T13Assignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT13TypeExpressionParserRuleCall_7_3_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT13TypeExpressionParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimaryExpression__T14Assignment_7_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePrimaryExpressionAccess().getT14TypeExpressionParserRuleCall_7_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypePrimaryExpressionAccess().getT14TypeExpressionParserRuleCall_7_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__TfnnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getTfnnameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getTfnnameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__T4Assignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT4TypeExpressionParserRuleCall_1_0_0_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT4TypeExpressionParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__T25Assignment_1_0_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT25TypeExpressionParserRuleCall_1_0_0_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT25TypeExpressionParserRuleCall_1_0_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__T44Assignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT44StatementExpressionParserRuleCall_1_0_1_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT44StatementExpressionParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__T45Assignment_1_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT45ExpressionParserRuleCall_1_0_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT45ExpressionParserRuleCall_1_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameOrFunctionCall__T6Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameOrFunctionCallAccess().getT6TypePrimaryExpressionParserRuleCall_1_1_0()); }
	ruleTypePrimaryExpression{ after(grammarAccess.getTypeNameOrFunctionCallAccess().getT6TypePrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__T4Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getT4TypeExpressionParserRuleCall_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTupleDefinitionAccess().getT4TypeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleDefinition__T25Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleDefinitionAccess().getT25TypeExpressionParserRuleCall_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getTupleDefinitionAccess().getT25TypeExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__T1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getT1INTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getTypeLiteralAccess().getT1INTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__T22Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getT22STRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeLiteralAccess().getT22STRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__T34Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getT34CharacterLiteralParserRuleCall_2_0()); }
	ruleCharacterLiteral{ after(grammarAccess.getTypeLiteralAccess().getT34CharacterLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__T35Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLiteralAccess().getT35BooleanLiteralParserRuleCall_3_0()); }
	ruleBooleanLiteral{ after(grammarAccess.getTypeLiteralAccess().getT35BooleanLiteralParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS1BlockParserRuleCall_0_0()); }
	ruleBlock{ after(grammarAccess.getStatementAccess().getS1BlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S3Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS3StatementExpressionParserRuleCall_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getStatementAccess().getS3StatementExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S4Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS4IfStatementParserRuleCall_2_0()); }
	ruleIfStatement{ after(grammarAccess.getStatementAccess().getS4IfStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S4bAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS4bIfElseStatementParserRuleCall_3_0()); }
	ruleIfElseStatement{ after(grammarAccess.getStatementAccess().getS4bIfElseStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S5Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS5WhileStatementParserRuleCall_4_0()); }
	ruleWhileStatement{ after(grammarAccess.getStatementAccess().getS5WhileStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S6Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS6DoStatementParserRuleCall_5_0()); }
	ruleDoStatement{ after(grammarAccess.getStatementAccess().getS6DoStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S7Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS7ForStatementParserRuleCall_6_0()); }
	ruleForStatement{ after(grammarAccess.getStatementAccess().getS7ForStatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S8Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS8BreakStatementParserRuleCall_7_0()); }
	ruleBreakStatement{ after(grammarAccess.getStatementAccess().getS8BreakStatementParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S12Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS12RepeatStatementParserRuleCall_8_0()); }
	ruleRepeatStatement{ after(grammarAccess.getStatementAccess().getS12RepeatStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S9Assignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS9IterateStatementParserRuleCall_9_0()); }
	ruleIterateStatement{ after(grammarAccess.getStatementAccess().getS9IterateStatementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__S10Assignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getS10ReturnStatementParserRuleCall_10_0()); }
	ruleReturnStatement{ after(grammarAccess.getStatementAccess().getS10ReturnStatementParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStnameLBRACETerminalRuleCall_0_0()); }
	RULE_LBRACE{ after(grammarAccess.getBlockAccess().getStnameLBRACETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatemBlAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatemBlStatementParserRuleCall_2_0_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatemBlStatementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__TAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getTExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getStatementExpressionAccess().getTExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__T2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT2TypeExpressionParserRuleCall_1_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getStatementExpressionAccess().getT2TypeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__T3Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT3ExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getStatementExpressionAccess().getT3ExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__T33Assignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT33ExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getStatementExpressionAccess().getT33ExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__T5Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT5BlockParserRuleCall_3_1_0()); }
	ruleBlock{ after(grammarAccess.getStatementExpressionAccess().getT5BlockParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__T4Assignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getT4StatementParserRuleCall_4_1_0()); }
	ruleStatement{ after(grammarAccess.getStatementExpressionAccess().getT4StatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StnameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStnameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getForStatementAccess().getStnameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__T1Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getT1ExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getT1ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__S1Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getS1StatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getForStatementAccess().getS1StatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStnameWhileKeyword_0_0()); }
(
{ before(grammarAccess.getWhileStatementAccess().getStnameWhileKeyword_0_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getStnameWhileKeyword_0_0()); }
)

{ after(grammarAccess.getWhileStatementAccess().getStnameWhileKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getWhileStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__S1Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getS1StatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhileStatementAccess().getS1StatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__StnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStnameDoKeyword_0_0()); }
(
{ before(grammarAccess.getDoStatementAccess().getStnameDoKeyword_0_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getStnameDoKeyword_0_0()); }
)

{ after(grammarAccess.getDoStatementAccess().getStnameDoKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__S1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getS1StatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoStatementAccess().getS1StatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__T2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getT2ExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoStatementAccess().getT2ExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__StnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatStatementAccess().getStnameRepeatKeyword_0_0()); }
(
{ before(grammarAccess.getRepeatStatementAccess().getStnameRepeatKeyword_0_0()); }

	'repeat' 

{ after(grammarAccess.getRepeatStatementAccess().getStnameRepeatKeyword_0_0()); }
)

{ after(grammarAccess.getRepeatStatementAccess().getStnameRepeatKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__S1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatStatementAccess().getS1StatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getRepeatStatementAccess().getS1StatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateStatement__StnameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateStatementAccess().getStnameIterateKeyword_0()); }
(
{ before(grammarAccess.getIterateStatementAccess().getStnameIterateKeyword_0()); }

	'iterate' 

{ after(grammarAccess.getIterateStatementAccess().getStnameIterateKeyword_0()); }
)

{ after(grammarAccess.getIterateStatementAccess().getStnameIterateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__StnameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getStnameBreakKeyword_0()); }
(
{ before(grammarAccess.getBreakStatementAccess().getStnameBreakKeyword_0()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getStnameBreakKeyword_0()); }
)

{ after(grammarAccess.getBreakStatementAccess().getStnameBreakKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__StnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getStnameReturnKeyword_0_0()); }
(
{ before(grammarAccess.getReturnStatementAccess().getStnameReturnKeyword_0_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getStnameReturnKeyword_0_0()); }
)

{ after(grammarAccess.getReturnStatementAccess().getStnameReturnKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getT2ExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__S1Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getS1StatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getS1StatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__S2Assignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getS2StatementParserRuleCall_5_2_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getS2StatementParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__S2Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseStatementAccess().getS2StatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getIfElseStatementAccess().getS2StatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfnameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getIfnameIfKeyword_0_0_0()); }
(
{ before(grammarAccess.getExpressionAccess().getIfnameIfKeyword_0_0_0()); }

	'if' 

{ after(grammarAccess.getExpressionAccess().getIfnameIfKeyword_0_0_0()); }
)

{ after(grammarAccess.getExpressionAccess().getIfnameIfKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfpredAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getIfpredExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getIfpredExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThenexpAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThenexpExpressionParserRuleCall_0_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getThenexpExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseexpAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getElseexpExpressionParserRuleCall_0_5_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getElseexpExpressionParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getOpBARTerminalRuleCall_1_1_0()); }
	RULE_BAR{ after(grammarAccess.getConditionExpressionAccess().getOpBARTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
	ruleOrExpression{ after(grammarAccess.getConditionExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightInnerProdExpressionParserRuleCall_1_2_0()); }
	ruleInnerProdExpression{ after(grammarAccess.getAndExpressionAccess().getRightInnerProdExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getOpBACKSLASHSLASHTerminalRuleCall_1_1_0()); }
	RULE_BACKSLASHSLASH{ after(grammarAccess.getInnerProdExpressionAccess().getOpBACKSLASHSLASHTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InnerProdExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerProdExpressionAccess().getRightOuterProdExpressionParserRuleCall_1_2_0()); }
	ruleOuterProdExpression{ after(grammarAccess.getInnerProdExpressionAccess().getRightOuterProdExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getOpSLASHBACKSLASHTerminalRuleCall_1_1_0()); }
	RULE_SLASHBACKSLASH{ after(grammarAccess.getOuterProdExpressionAccess().getOpSLASHBACKSLASHTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OuterProdExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOuterProdExpressionAccess().getRightHasExpressionParserRuleCall_1_2_0()); }
	ruleHasExpression{ after(grammarAccess.getOuterProdExpressionAccess().getRightHasExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getOpHasKeyword_1_1_0()); }
(
{ before(grammarAccess.getHasExpressionAccess().getOpHasKeyword_1_1_0()); }

	'has' 

{ after(grammarAccess.getHasExpressionAccess().getOpHasKeyword_1_1_0()); }
)

{ after(grammarAccess.getHasExpressionAccess().getOpHasKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getHasExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getOpCaseKeyword_1_1_0()); }
(
{ before(grammarAccess.getCaseExpressionAccess().getOpCaseKeyword_1_1_0()); }

	'case' 

{ after(grammarAccess.getCaseExpressionAccess().getOpCaseKeyword_1_1_0()); }
)

{ after(grammarAccess.getCaseExpressionAccess().getOpCaseKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	ruleEqualityExpression{ after(grammarAccess.getCaseExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpEQUALTerminalRuleCall_1_1_0_0()); }
	RULE_EQUAL{ after(grammarAccess.getEqualityExpressionAccess().getOpEQUALTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpNOTEQUALTerminalRuleCall_1_1_1_0()); }
	RULE_NOTEQUAL{ after(grammarAccess.getEqualityExpressionAccess().getOpNOTEQUALTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_2_0()); }

	'^=' 

{ after(grammarAccess.getEqualityExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getEqualityExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLTTerminalRuleCall_1_1_0_0()); }
	RULE_LT{ after(grammarAccess.getRelationalExpressionAccess().getOpLTTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGTTerminalRuleCall_1_1_1_0()); }
	RULE_GT{ after(grammarAccess.getRelationalExpressionAccess().getOpGTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLETerminalRuleCall_1_1_2_0()); }
	RULE_LE{ after(grammarAccess.getRelationalExpressionAccess().getOpLETerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpGETerminalRuleCall_1_1_3_0()); }
	RULE_GE{ after(grammarAccess.getRelationalExpressionAccess().getOpGETerminalRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightIsExpressionParserRuleCall_1_2_0()); }
	ruleIsExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightIsExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getOpIsKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getIsExpressionAccess().getOpIsKeyword_1_1_0_0()); }

	'is' 

{ after(grammarAccess.getIsExpressionAccess().getOpIsKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getIsExpressionAccess().getOpIsKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getOpIsntKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getIsExpressionAccess().getOpIsntKeyword_1_1_1_0()); }

	'isnt' 

{ after(grammarAccess.getIsExpressionAccess().getOpIsntKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getIsExpressionAccess().getOpIsntKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getIsExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getOpSEGTerminalRuleCall_1_1_0()); }
	RULE_SEG{ after(grammarAccess.getSegmentExpressionAccess().getOpSEGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SegmentExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSegmentExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getSegmentExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpPLUSTerminalRuleCall_1_1_0_0()); }
	RULE_PLUS{ after(grammarAccess.getAdditiveExpressionAccess().getOpPLUSTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpMINUSTerminalRuleCall_1_1_1_0()); }
	RULE_MINUS{ after(grammarAccess.getAdditiveExpressionAccess().getOpMINUSTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightExquoExpressionParserRuleCall_1_2_0()); }
	ruleExquoExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightExquoExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getOpExquoKeyword_1_1_0()); }
(
{ before(grammarAccess.getExquoExpressionAccess().getOpExquoKeyword_1_1_0()); }

	'exquo' 

{ after(grammarAccess.getExquoExpressionAccess().getOpExquoKeyword_1_1_0()); }
)

{ after(grammarAccess.getExquoExpressionAccess().getOpExquoKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExquoExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExquoExpressionAccess().getRightDivisionExpressionParserRuleCall_1_2_0()); }
	ruleDivisionExpression{ after(grammarAccess.getExquoExpressionAccess().getRightDivisionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getOpSLASHTerminalRuleCall_1_1_0()); }
	RULE_SLASH{ after(grammarAccess.getDivisionExpressionAccess().getOpSLASHTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionExpressionAccess().getRightQuoExpressionParserRuleCall_1_2_0()); }
	ruleQuoExpression{ after(grammarAccess.getDivisionExpressionAccess().getRightQuoExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getOpQuoKeyword_1_1_0()); }
(
{ before(grammarAccess.getQuoExpressionAccess().getOpQuoKeyword_1_1_0()); }

	'quo' 

{ after(grammarAccess.getQuoExpressionAccess().getOpQuoKeyword_1_1_0()); }
)

{ after(grammarAccess.getQuoExpressionAccess().getOpQuoKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuoExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuoExpressionAccess().getRightModExpressionParserRuleCall_1_2_0()); }
	ruleModExpression{ after(grammarAccess.getQuoExpressionAccess().getRightModExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOpModKeyword_1_1_0()); }
(
{ before(grammarAccess.getModExpressionAccess().getOpModKeyword_1_1_0()); }

	'mod' 

{ after(grammarAccess.getModExpressionAccess().getOpModKeyword_1_1_0()); }
)

{ after(grammarAccess.getModExpressionAccess().getOpModKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getRightRemExpressionParserRuleCall_1_2_0()); }
	ruleRemExpression{ after(grammarAccess.getModExpressionAccess().getRightRemExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getOpRemKeyword_1_1_0()); }
(
{ before(grammarAccess.getRemExpressionAccess().getOpRemKeyword_1_1_0()); }

	'rem' 

{ after(grammarAccess.getRemExpressionAccess().getOpRemKeyword_1_1_0()); }
)

{ after(grammarAccess.getRemExpressionAccess().getOpRemKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getRemExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpTIMESTerminalRuleCall_1_1_0()); }
	RULE_TIMES{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpTIMESTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightExponentExpressionParserRuleCall_1_2_0()); }
	ruleExponentExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightExponentExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getOpCARATTerminalRuleCall_1_1_0_0()); }
	RULE_CARAT{ after(grammarAccess.getExponentExpressionAccess().getOpCARATTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getOpPOWERTerminalRuleCall_1_1_1_0()); }
	RULE_POWER{ after(grammarAccess.getExponentExpressionAccess().getOpPOWERTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExponentExpressionAccess().getRightMapDefinitionParserRuleCall_1_2_0()); }
	ruleMapDefinition{ after(grammarAccess.getExponentExpressionAccess().getRightMapDefinitionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getOpGIVESTerminalRuleCall_1_1_0()); }
	RULE_GIVES{ after(grammarAccess.getMapDefinitionAccess().getOpGIVESTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapDefinition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapDefinitionAccess().getRightPretendExpressionParserRuleCall_1_2_0()); }
	rulePretendExpression{ after(grammarAccess.getMapDefinitionAccess().getRightPretendExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getOpPretendKeyword_1_1_0()); }
(
{ before(grammarAccess.getPretendExpressionAccess().getOpPretendKeyword_1_1_0()); }

	'pretend' 

{ after(grammarAccess.getPretendExpressionAccess().getOpPretendKeyword_1_1_0()); }
)

{ after(grammarAccess.getPretendExpressionAccess().getOpPretendKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PretendExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPretendExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getPretendExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getOpATTerminalRuleCall_1_1_0()); }
	RULE_AT{ after(grammarAccess.getHintTypeExpressionAccess().getOpATTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HintTypeExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHintTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getHintTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getOpCOERCETerminalRuleCall_1_1_0()); }
	RULE_COERCE{ after(grammarAccess.getCoerceExpressionAccess().getOpCOERCETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoerceExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoerceExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getCoerceExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getOpDOTTerminalRuleCall_1_1_0()); }
	RULE_DOT{ after(grammarAccess.getEltExpressionAccess().getOpDOTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EltExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEltExpressionAccess().getRightExplicitTypeExpressionParserRuleCall_1_2_0()); }
	ruleExplicitTypeExpression{ after(grammarAccess.getEltExpressionAccess().getRightExplicitTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getOpDOLARTerminalRuleCall_1_1_0()); }
	RULE_DOLAR{ after(grammarAccess.getExplicitTypeExpressionAccess().getOpDOLARTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitTypeExpression__RightTypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getExplicitTypeExpressionAccess().getRightTypeTypeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UopAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopTILDETerminalRuleCall_1_1_0()); }
	RULE_TILDE{ after(grammarAccess.getUnaryExpressionAccess().getUopTILDETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UopAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopCOLONTerminalRuleCall_2_1_0()); }
	RULE_COLON{ after(grammarAccess.getUnaryExpressionAccess().getUopCOLONTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UopAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopMINUSTerminalRuleCall_3_1_0()); }
	RULE_MINUS{ after(grammarAccess.getUnaryExpressionAccess().getUopMINUSTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_3_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UopAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopHASHTerminalRuleCall_4_1_0()); }
	RULE_HASH{ after(grammarAccess.getUnaryExpressionAccess().getUopHASHTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_4_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UopAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopNotKeyword_5_1_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getUopNotKeyword_5_1_0()); }

	'not' 

{ after(grammarAccess.getUnaryExpressionAccess().getUopNotKeyword_5_1_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getUopNotKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_5_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E2Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE2PERCENTTerminalRuleCall_6_0()); }
	RULE_PERCENT{ after(grammarAccess.getUnaryExpressionAccess().getE2PERCENTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E3Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE3TypeKeyword_7_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getE3TypeKeyword_7_0()); }

	'Type' 

{ after(grammarAccess.getUnaryExpressionAccess().getE3TypeKeyword_7_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getE3TypeKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E5Assignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE5RecordKeyword_8_0_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getE5RecordKeyword_8_0_0()); }

	'Record' 

{ after(grammarAccess.getUnaryExpressionAccess().getE5RecordKeyword_8_0_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getE5RecordKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E6Assignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE6TypeExpressionParserRuleCall_8_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE6TypeExpressionParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E22Assignment_8_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE22TypeExpressionParserRuleCall_8_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE22TypeExpressionParserRuleCall_8_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E21Assignment_8_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE21TypeExpressionParserRuleCall_8_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE21TypeExpressionParserRuleCall_8_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E23Assignment_8_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE23TypeExpressionParserRuleCall_8_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE23TypeExpressionParserRuleCall_8_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E9Assignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE9UnionKeyword_9_0_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getE9UnionKeyword_9_0_0()); }

	'Union' 

{ after(grammarAccess.getUnaryExpressionAccess().getE9UnionKeyword_9_0_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getE9UnionKeyword_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E10Assignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE10TypeExpressionParserRuleCall_9_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE10TypeExpressionParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E25Assignment_9_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE25TypeExpressionParserRuleCall_9_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE25TypeExpressionParserRuleCall_9_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E24Assignment_9_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE24TypeExpressionParserRuleCall_9_4_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE24TypeExpressionParserRuleCall_9_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E26Assignment_9_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE26TypeExpressionParserRuleCall_9_4_2_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE26TypeExpressionParserRuleCall_9_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E11Assignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE11JoinKeyword_10_0_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getE11JoinKeyword_10_0_0()); }

	'Join' 

{ after(grammarAccess.getUnaryExpressionAccess().getE11JoinKeyword_10_0_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getE11JoinKeyword_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E12Assignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE12TypeExpressionParserRuleCall_10_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE12TypeExpressionParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__E13Assignment_10_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getE13TypeExpressionParserRuleCall_10_3_1_0()); }
	ruleTypeExpression{ after(grammarAccess.getUnaryExpressionAccess().getE13TypeExpressionParserRuleCall_10_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__T4Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getT4StatementExpressionParserRuleCall_1_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getPrimaryPrefixAccess().getT4StatementExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__T25Assignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getT25ExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryPrefixAccess().getT25ExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryPrefix__T7Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryPrefixAccess().getT7NameOrFunctionCallParserRuleCall_2_0()); }
	ruleNameOrFunctionCall{ after(grammarAccess.getPrimaryPrefixAccess().getT7NameOrFunctionCallParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__FnnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getFnnameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNameOrFunctionCallAccess().getFnnameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__LspAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getLspDOLARTerminalRuleCall_1_0_0()); }
	RULE_DOLAR{ after(grammarAccess.getNameOrFunctionCallAccess().getLspDOLARTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__T4Assignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT4StatementExpressionParserRuleCall_2_0_0_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getNameOrFunctionCallAccess().getT4StatementExpressionParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__T5Assignment_2_0_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT5ExpressionParserRuleCall_2_0_0_2_1_0()); }
	ruleExpression{ after(grammarAccess.getNameOrFunctionCallAccess().getT5ExpressionParserRuleCall_2_0_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__T14Assignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT14StatementExpressionParserRuleCall_2_0_1_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getNameOrFunctionCallAccess().getT14StatementExpressionParserRuleCall_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__T15Assignment_2_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT15ExpressionParserRuleCall_2_0_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getNameOrFunctionCallAccess().getT15ExpressionParserRuleCall_2_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameOrFunctionCall__T6Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameOrFunctionCallAccess().getT6PrimaryExpressionParserRuleCall_2_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getNameOrFunctionCallAccess().getT6PrimaryExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__T2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getT2STRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralAccess().getT2STRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterLiteral__C1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterLiteralAccess().getC1ANY_OTHERTerminalRuleCall_1_0()); }
	RULE_ANY_OTHER{ after(grammarAccess.getCharacterLiteralAccess().getC1ANY_OTHERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__LitnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getLitnameTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getLitnameTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__LitnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameFalseKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getLitnameFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getLitnameFalseKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getLitnameFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__LitnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getLitnameLBRACKETTerminalRuleCall_0_0()); }
	RULE_LBRACKET{ after(grammarAccess.getListLiteralAccess().getLitnameLBRACKETTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__L2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getL2ExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getL2ExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__T3Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getT3ExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getT3ExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__T14Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getT14ExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getT14ExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__L5Assignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getL5ExpressionParserRuleCall_3_3_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getL5ExpressionParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_' .) ('a'..'z'|'A'..'Z'|'_' .|'0'..'9')* '!'? '?'?;

RULE_WS : (' '|'\t')+;

RULE_NL : ('\r'|'\n');

RULE_SL_COMMENT : ('--'|'++') ~(('\n'|'\r'))*;

RULE_MACROVALUE : '===>' ~(('\n'|'\r'))*;

RULE_STRING : '"' ~('"')* '"';

RULE_INT : ('0'..'9')+;

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_OANGLE : '<<';

RULE_CANGLE : '>>';

RULE_MDEF : '==>';

RULE_BAR : '|';

RULE_DOT : '.';

RULE_COERCE : '::';

RULE_COLON : ':';

RULE_AT : '@';

RULE_COMMA : ',';

RULE_SEMICOLON : ';';

RULE_POWER : '**';

RULE_TIMES : '*';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_LT : '<';

RULE_GT : '>';

RULE_LE : '<=';

RULE_GE : '>=';

RULE_EQUAL : '=';

RULE_NOTEQUAL : '~=';

RULE_TILDE : '~';

RULE_CARAT : '^';

RULE_SEG : '..';

RULE_HASH : '#';

RULE_AMPERSAND : '&';

RULE_DOLAR : '$';

RULE_SLASH : '/';

RULE_BACKSLASH : '\\';

RULE_SLASHSLASH : '//';

RULE_BACKSLASHBACKSLASH : '\\\\';

RULE_SLASHBACKSLASH : '/\\';

RULE_BACKSLASHSLASH : '\\/';

RULE_EXIT : '=>';

RULE_BECOMES : ':=';

RULE_DEF : '==';

RULE_ARROW : '->';

RULE_LARROW : '<-';

RULE_GIVES : '+->';

RULE_PERCENT : '%';

RULE_ELLIPSIS : '...';

RULE_ANY_OTHER : .;


